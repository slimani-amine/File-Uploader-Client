import {
  SvgAlertMinor,
  SvgArrowDownMinor,
  SvgArrowLeftMinor,
  SvgArrowRightMinor,
  SvgArrowUpMinor,
  SvgCancelMajor,
  SvgCancelMinor,
  SvgCancelSmallMinor,
  SvgCaretDownMinor,
  SvgCaretUpMinor,
  SvgChevronDownMinor,
  SvgChevronLeftMinor,
  SvgChevronRightMinor,
  SvgChevronUpMinor,
  SvgCircleAlertMajor,
  SvgCircleCancelMinor,
  SvgCircleInformationMajor,
  SvgCircleTickMajor,
  SvgColumns3Minor,
  SvgDeleteMinor,
  SvgDiamondAlertMajor,
  SvgDiamondAlertMinor,
  SvgDuplicateMinor,
  SvgEditMinor,
  SvgEnableSelectionMinor,
  SvgExitMajor,
  SvgFilterMinor,
  SvgHorizontalDotsMinor,
  SvgInfoMinor,
  SvgMinusMinor,
  SvgMobileCancelMajor,
  SvgMobileHamburgerMajor,
  SvgPlayMinor,
  SvgPlusMinor,
  SvgRiskMinor,
  SvgSearchMinor,
  SvgSelectMinor,
  SvgSortAscendingMajor,
  SvgSortDescendingMajor,
  SvgSortMinor,
  SvgTickMinor,
  SvgTickSmallMinor,
  SvgUploadMajor
} from "./chunk-TXB7TPQU.js";
import {
  require_react_dom
} from "./chunk-WALXKXZM.js";
import {
  require_react
} from "./chunk-WQMOH32Y.js";
import {
  __commonJS,
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement2(value);
    }
    var canUseSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement2(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge2(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge2;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge2;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return Object.propertyIsEnumerable.call(target, symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }
      getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        }
      });
      return destination;
    }
    function deepmerge2(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge2.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge2(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge2;
    module.exports = deepmerge_1;
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode2 = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment3;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode2;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement6, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement6(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement6(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length, i, keys;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (!equal(a[i], b[i]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b.get(i.value[0])))
              return false;
          return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (a[i] !== b[i])
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b.valueOf === "function")
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b.toString === "function")
          return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length)
          return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys[i]))
            return false;
        if (hasElementType && a instanceof Element)
          return false;
        for (i = length; i-- !== 0; ) {
          if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a.$$typeof) {
            continue;
          }
          if (!equal(a[keys[i]], b[keys[i]]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    module.exports = function isEqual5(a, b) {
      try {
        return equal(a, b);
      } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error;
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/configure.js
var DEFAULT_LOCALE = "en";
var SUPPORTED_LOCALES = ["cs", "da", "de", "en", "es", "fi", "fr", "it", "ja", "ko", "nb", "nl", "pl", "pt-BR", "pt-PT", "sv", "th", "tr", "vi", "zh-CN", "zh-TW"];

// node_modules/@shopify/polaris/build/esm/types.js
var Key;
(function(Key2) {
  Key2[Key2["Backspace"] = 8] = "Backspace";
  Key2[Key2["Tab"] = 9] = "Tab";
  Key2[Key2["Enter"] = 13] = "Enter";
  Key2[Key2["Shift"] = 16] = "Shift";
  Key2[Key2["Ctrl"] = 17] = "Ctrl";
  Key2[Key2["Alt"] = 18] = "Alt";
  Key2[Key2["Pause"] = 19] = "Pause";
  Key2[Key2["CapsLock"] = 20] = "CapsLock";
  Key2[Key2["Escape"] = 27] = "Escape";
  Key2[Key2["Space"] = 32] = "Space";
  Key2[Key2["PageUp"] = 33] = "PageUp";
  Key2[Key2["PageDown"] = 34] = "PageDown";
  Key2[Key2["End"] = 35] = "End";
  Key2[Key2["Home"] = 36] = "Home";
  Key2[Key2["LeftArrow"] = 37] = "LeftArrow";
  Key2[Key2["UpArrow"] = 38] = "UpArrow";
  Key2[Key2["RightArrow"] = 39] = "RightArrow";
  Key2[Key2["DownArrow"] = 40] = "DownArrow";
  Key2[Key2["Insert"] = 45] = "Insert";
  Key2[Key2["Delete"] = 46] = "Delete";
  Key2[Key2["Key0"] = 48] = "Key0";
  Key2[Key2["Key1"] = 49] = "Key1";
  Key2[Key2["Key2"] = 50] = "Key2";
  Key2[Key2["Key3"] = 51] = "Key3";
  Key2[Key2["Key4"] = 52] = "Key4";
  Key2[Key2["Key5"] = 53] = "Key5";
  Key2[Key2["Key6"] = 54] = "Key6";
  Key2[Key2["Key7"] = 55] = "Key7";
  Key2[Key2["Key8"] = 56] = "Key8";
  Key2[Key2["Key9"] = 57] = "Key9";
  Key2[Key2["KeyA"] = 65] = "KeyA";
  Key2[Key2["KeyB"] = 66] = "KeyB";
  Key2[Key2["KeyC"] = 67] = "KeyC";
  Key2[Key2["KeyD"] = 68] = "KeyD";
  Key2[Key2["KeyE"] = 69] = "KeyE";
  Key2[Key2["KeyF"] = 70] = "KeyF";
  Key2[Key2["KeyG"] = 71] = "KeyG";
  Key2[Key2["KeyH"] = 72] = "KeyH";
  Key2[Key2["KeyI"] = 73] = "KeyI";
  Key2[Key2["KeyJ"] = 74] = "KeyJ";
  Key2[Key2["KeyK"] = 75] = "KeyK";
  Key2[Key2["KeyL"] = 76] = "KeyL";
  Key2[Key2["KeyM"] = 77] = "KeyM";
  Key2[Key2["KeyN"] = 78] = "KeyN";
  Key2[Key2["KeyO"] = 79] = "KeyO";
  Key2[Key2["KeyP"] = 80] = "KeyP";
  Key2[Key2["KeyQ"] = 81] = "KeyQ";
  Key2[Key2["KeyR"] = 82] = "KeyR";
  Key2[Key2["KeyS"] = 83] = "KeyS";
  Key2[Key2["KeyT"] = 84] = "KeyT";
  Key2[Key2["KeyU"] = 85] = "KeyU";
  Key2[Key2["KeyV"] = 86] = "KeyV";
  Key2[Key2["KeyW"] = 87] = "KeyW";
  Key2[Key2["KeyX"] = 88] = "KeyX";
  Key2[Key2["KeyY"] = 89] = "KeyY";
  Key2[Key2["KeyZ"] = 90] = "KeyZ";
  Key2[Key2["LeftMeta"] = 91] = "LeftMeta";
  Key2[Key2["RightMeta"] = 92] = "RightMeta";
  Key2[Key2["Select"] = 93] = "Select";
  Key2[Key2["Numpad0"] = 96] = "Numpad0";
  Key2[Key2["Numpad1"] = 97] = "Numpad1";
  Key2[Key2["Numpad2"] = 98] = "Numpad2";
  Key2[Key2["Numpad3"] = 99] = "Numpad3";
  Key2[Key2["Numpad4"] = 100] = "Numpad4";
  Key2[Key2["Numpad5"] = 101] = "Numpad5";
  Key2[Key2["Numpad6"] = 102] = "Numpad6";
  Key2[Key2["Numpad7"] = 103] = "Numpad7";
  Key2[Key2["Numpad8"] = 104] = "Numpad8";
  Key2[Key2["Numpad9"] = 105] = "Numpad9";
  Key2[Key2["Multiply"] = 106] = "Multiply";
  Key2[Key2["Add"] = 107] = "Add";
  Key2[Key2["Subtract"] = 109] = "Subtract";
  Key2[Key2["Decimal"] = 110] = "Decimal";
  Key2[Key2["Divide"] = 111] = "Divide";
  Key2[Key2["F1"] = 112] = "F1";
  Key2[Key2["F2"] = 113] = "F2";
  Key2[Key2["F3"] = 114] = "F3";
  Key2[Key2["F4"] = 115] = "F4";
  Key2[Key2["F5"] = 116] = "F5";
  Key2[Key2["F6"] = 117] = "F6";
  Key2[Key2["F7"] = 118] = "F7";
  Key2[Key2["F8"] = 119] = "F8";
  Key2[Key2["F9"] = 120] = "F9";
  Key2[Key2["F10"] = 121] = "F10";
  Key2[Key2["F11"] = 122] = "F11";
  Key2[Key2["F12"] = 123] = "F12";
  Key2[Key2["NumLock"] = 144] = "NumLock";
  Key2[Key2["ScrollLock"] = 145] = "ScrollLock";
  Key2[Key2["Semicolon"] = 186] = "Semicolon";
  Key2[Key2["Equals"] = 187] = "Equals";
  Key2[Key2["Comma"] = 188] = "Comma";
  Key2[Key2["Dash"] = 189] = "Dash";
  Key2[Key2["Period"] = 190] = "Period";
  Key2[Key2["ForwardSlash"] = 191] = "ForwardSlash";
  Key2[Key2["GraveAccent"] = 192] = "GraveAccent";
  Key2[Key2["OpenBracket"] = 219] = "OpenBracket";
  Key2[Key2["BackSlash"] = 220] = "BackSlash";
  Key2[Key2["CloseBracket"] = 221] = "CloseBracket";
  Key2[Key2["SingleQuote"] = 222] = "SingleQuote";
})(Key || (Key = {}));

// node_modules/@shopify/polaris/build/esm/components/shared.js
var scrollable = {
  props: {
    "data-polaris-scrollable": true
  },
  selector: "[data-polaris-scrollable]"
};
var overlay = {
  props: {
    "data-polaris-overlay": true
  },
  selector: "[data-polaris-overlay]"
};
var layer = {
  props: {
    "data-polaris-layer": true
  },
  selector: "[data-polaris-layer]"
};
var unstyled = {
  props: {
    "data-polaris-unstyled": true
  },
  selector: "[data-polaris-unstyled]"
};
var dataPolarisTopBar = {
  props: {
    "data-polaris-top-bar": true
  },
  selector: "[data-polaris-top-bar]"
};
var headerCell = {
  props: {
    "data-polaris-header-cell": true
  },
  selector: "[data-polaris-header-cell]"
};
var portal = {
  props: ["data-portal-id"],
  selector: "[data-portal-id]"
};
var DATA_ATTRIBUTE = {
  overlay,
  layer
};

// node_modules/@shopify/polaris/build/esm/utilities/clamp.js
function clamp(number, min, max) {
  if (number < min)
    return min;
  if (number > max)
    return max;
  return number;
}

// node_modules/@shopify/polaris/build/esm/utilities/roundNumberToDecimalPlaces.js
function roundNumberToDecimalPlaces(value, decimals) {
  const exponent = Number(`${value}e${decimals}`);
  const roundedExponent = Math.round(exponent);
  const numberWithDecimalPlaces = Number(`${roundedExponent}e-${decimals}`);
  return numberWithDecimalPlaces;
}

// node_modules/@shopify/polaris/build/esm/utilities/color-transformers.js
function rgbString(color2) {
  const {
    red: red3,
    green: green3,
    blue: blue3
  } = color2;
  if ("alpha" in color2) {
    return `rgba(${red3}, ${green3}, ${blue3}, ${color2.alpha})`;
  } else {
    return `rgb(${red3}, ${green3}, ${blue3})`;
  }
}
var rgbaString = rgbString;
function rgbToHex({
  red: red3,
  green: green3,
  blue: blue3
}) {
  return `#${componentToHex(red3)}${componentToHex(green3)}${componentToHex(blue3)}`;
}
function componentToHex(component) {
  const hex = component.toString(16);
  return hex.length === 1 ? `0${hex}` : hex;
}
function hsbToHex(color2) {
  return rgbToHex(hsbToRgb(color2));
}
function rgbFromHueAndChroma(hue, chroma) {
  const huePrime = hue / 60;
  const hueDelta = 1 - Math.abs(huePrime % 2 - 1);
  const intermediateValue = chroma * hueDelta;
  let red3 = 0;
  let green3 = 0;
  let blue3 = 0;
  if (huePrime >= 0 && huePrime <= 1) {
    red3 = chroma;
    green3 = intermediateValue;
    blue3 = 0;
  }
  if (huePrime >= 1 && huePrime <= 2) {
    red3 = intermediateValue;
    green3 = chroma;
    blue3 = 0;
  }
  if (huePrime >= 2 && huePrime <= 3) {
    red3 = 0;
    green3 = chroma;
    blue3 = intermediateValue;
  }
  if (huePrime >= 3 && huePrime <= 4) {
    red3 = 0;
    green3 = intermediateValue;
    blue3 = chroma;
  }
  if (huePrime >= 4 && huePrime <= 5) {
    red3 = intermediateValue;
    green3 = 0;
    blue3 = chroma;
  }
  if (huePrime >= 5 && huePrime <= 6) {
    red3 = chroma;
    green3 = 0;
    blue3 = intermediateValue;
  }
  return {
    red: red3,
    green: green3,
    blue: blue3
  };
}
function hsbToRgb(color2) {
  const {
    hue,
    saturation,
    brightness,
    alpha = 1
  } = color2;
  const chroma = brightness * saturation;
  let {
    red: red3,
    green: green3,
    blue: blue3
  } = rgbFromHueAndChroma(hue, chroma);
  const chromaBrightnessDelta = brightness - chroma;
  red3 += chromaBrightnessDelta;
  green3 += chromaBrightnessDelta;
  blue3 += chromaBrightnessDelta;
  return {
    red: Math.round(red3 * 255),
    green: Math.round(green3 * 255),
    blue: Math.round(blue3 * 255),
    alpha
  };
}
function hslToRgb(color2) {
  const {
    hue,
    saturation,
    lightness,
    alpha = 1
  } = color2;
  const chroma = (1 - Math.abs(2 * (lightness / 100) - 1)) * (saturation / 100);
  let {
    red: red3,
    green: green3,
    blue: blue3
  } = rgbFromHueAndChroma(hue, chroma);
  const lightnessVal = lightness / 100 - chroma / 2;
  red3 += lightnessVal;
  green3 += lightnessVal;
  blue3 += lightnessVal;
  return {
    red: Math.round(red3 * 255),
    green: Math.round(green3 * 255),
    blue: Math.round(blue3 * 255),
    alpha
  };
}
function rgbToHsbl(color2, type = "b") {
  const {
    alpha = 1
  } = color2;
  const red3 = color2.red / 255;
  const green3 = color2.green / 255;
  const blue3 = color2.blue / 255;
  const largestComponent = Math.max(red3, green3, blue3);
  const smallestComponent = Math.min(red3, green3, blue3);
  const delta = largestComponent - smallestComponent;
  const lightness = (largestComponent + smallestComponent) / 2;
  let saturation = 0;
  if (largestComponent === 0) {
    saturation = 0;
  } else if (type === "b") {
    saturation = delta / largestComponent;
  } else if (type === "l") {
    const baseSaturation = lightness > 0.5 ? delta / (2 - largestComponent - smallestComponent) : delta / (largestComponent + smallestComponent);
    saturation = isNaN(baseSaturation) ? 0 : baseSaturation;
  }
  let huePercentage = 0;
  switch (largestComponent) {
    case red3:
      huePercentage = (green3 - blue3) / delta + (green3 < blue3 ? 6 : 0);
      break;
    case green3:
      huePercentage = (blue3 - red3) / delta + 2;
      break;
    case blue3:
      huePercentage = (red3 - green3) / delta + 4;
  }
  const hue = huePercentage / 6 * 360;
  const clampedHue = clamp(hue, 0, 360);
  return {
    hue: clampedHue ? roundNumberToDecimalPlaces(clampedHue, 2) : 0,
    saturation: roundNumberToDecimalPlaces(clamp(saturation, 0, 1), 4),
    brightness: roundNumberToDecimalPlaces(clamp(largestComponent, 0, 1), 4),
    lightness: roundNumberToDecimalPlaces(lightness, 4),
    alpha: roundNumberToDecimalPlaces(alpha, 4)
  };
}
function rgbToHsb(color2) {
  const {
    hue,
    saturation,
    brightness,
    alpha = 1
  } = rgbToHsbl(color2, "b");
  return {
    hue,
    saturation,
    brightness,
    alpha
  };
}
function rgbToHsl(color2) {
  const {
    hue,
    saturation: rawSaturation,
    lightness: rawLightness,
    alpha = 1
  } = rgbToHsbl(color2, "l");
  const saturation = roundNumberToDecimalPlaces(rawSaturation * 100, 2);
  const lightness = roundNumberToDecimalPlaces(rawLightness * 100, 2);
  return {
    hue,
    saturation,
    lightness,
    alpha
  };
}
function hexToRgb(color2) {
  if (color2.length === 4) {
    const repeatHex = (hex1, hex2) => color2.slice(hex1, hex2).repeat(2);
    const red4 = parseInt(repeatHex(1, 2), 16);
    const green4 = parseInt(repeatHex(2, 3), 16);
    const blue4 = parseInt(repeatHex(3, 4), 16);
    return {
      red: red4,
      green: green4,
      blue: blue4
    };
  }
  const red3 = parseInt(color2.slice(1, 3), 16);
  const green3 = parseInt(color2.slice(3, 5), 16);
  const blue3 = parseInt(color2.slice(5, 7), 16);
  return {
    red: red3,
    green: green3,
    blue: blue3
  };
}

// node_modules/@shopify/polaris/build/esm/utilities/within-content-context.js
var import_react = __toESM(require_react());
var WithinContentContext = (0, import_react.createContext)(false);

// node_modules/@shopify/polaris/build/esm/utilities/use-event-listener.js
var import_react3 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-isomorphic-layout-effect.js
var import_react2 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/target.js
var isServer = typeof window === "undefined" || typeof document === "undefined";

// node_modules/@shopify/polaris/build/esm/utilities/use-isomorphic-layout-effect.js
var useIsomorphicLayoutEffect = isServer ? import_react2.useEffect : import_react2.useLayoutEffect;

// node_modules/@shopify/polaris/build/esm/utilities/use-event-listener.js
function useEventListener(eventName, handler, target, options) {
  const handlerRef = (0, import_react3.useRef)(handler);
  const optionsRef = (0, import_react3.useRef)(options);
  useIsomorphicLayoutEffect(() => {
    handlerRef.current = handler;
  }, [handler]);
  useIsomorphicLayoutEffect(() => {
    optionsRef.current = options;
  }, [options]);
  (0, import_react3.useEffect)(() => {
    if (!(typeof eventName === "string" && target !== null))
      return;
    let targetElement;
    if (typeof target === "undefined") {
      targetElement = window;
    } else if ("current" in target) {
      if (target.current === null)
        return;
      targetElement = target.current;
    } else {
      targetElement = target;
    }
    const eventOptions = optionsRef.current;
    const eventListener = (event) => handlerRef.current(event);
    targetElement.addEventListener(eventName, eventListener, eventOptions);
    return () => {
      targetElement.removeEventListener(eventName, eventListener, eventOptions);
    };
  }, [eventName, target]);
}

// node_modules/@shopify/polaris/build/esm/utilities/use-theme.js
var import_react4 = __toESM(require_react());

// node_modules/@shopify/polaris-tokens/dist/esm/_virtual/_rollupPluginBabelHelpers.mjs
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i)
          return;
        _n = false;
      } else
        for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
          ;
    } catch (err) {
      _d = true, _e = err;
    } finally {
      try {
        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r))
          return;
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  strings.raw = raw;
  return strings;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/utils.mjs
var import_deepmerge = __toESM(require_cjs(), 1);

// node_modules/@shopify/polaris-tokens/dist/esm/src/utilities.mjs
var _templateObject;
var BASE_FONT_SIZE = 16;
var UNIT_PX = "px";
var UNIT_EM = "em";
var UNIT_REM = "rem";
var DIGIT_REGEX = new RegExp(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["-?d+(?:.d+|d*)"], ["-?\\d+(?:\\.\\d+|\\d*)"]))));
var UNIT_REGEX = new RegExp(UNIT_PX + "|" + UNIT_EM + "|" + UNIT_REM);
function getUnit(value) {
  if (value === void 0) {
    value = "";
  }
  var unit = value.match(new RegExp(DIGIT_REGEX.source + "(" + UNIT_REGEX.source + ")"));
  return unit && unit[1];
}
function toPx(value) {
  if (value === void 0) {
    value = "";
  }
  var unit = getUnit(value);
  if (!unit)
    return value;
  if (unit === UNIT_PX) {
    return value;
  }
  if (unit === UNIT_EM || unit === UNIT_REM) {
    return "" + parseFloat(value) * BASE_FONT_SIZE + UNIT_PX;
  }
}
function toEm(value, fontSize) {
  if (value === void 0) {
    value = "";
  }
  if (fontSize === void 0) {
    fontSize = BASE_FONT_SIZE;
  }
  var unit = getUnit(value);
  if (!unit)
    return value;
  if (unit === UNIT_EM) {
    return value;
  }
  if (unit === UNIT_PX) {
    return "" + parseFloat(value) / fontSize + UNIT_EM;
  }
  if (unit === UNIT_REM) {
    return "" + parseFloat(value) * BASE_FONT_SIZE / fontSize + UNIT_EM;
  }
}
function toRem(value) {
  if (value === void 0) {
    value = "";
  }
  var unit = getUnit(value);
  if (!unit)
    return value;
  if (unit === UNIT_REM) {
    return value;
  }
  if (unit === UNIT_EM) {
    return "" + parseFloat(value) + UNIT_REM;
  }
  if (unit === UNIT_PX) {
    return "" + parseFloat(value) / BASE_FONT_SIZE + UNIT_REM;
  }
}
function rem(value) {
  return value.replace(new RegExp(DIGIT_REGEX.source + "(" + UNIT_PX + ")", "g"), function(px) {
    var _toRem;
    return (_toRem = toRem(px)) != null ? _toRem : px;
  });
}
function tokensToRems(tokenGroup) {
  return Object.fromEntries(
    Object.entries(tokenGroup).map(function(_ref) {
      var _ref2 = _slicedToArray(_ref, 2), token = _ref2[0], properties = _ref2[1];
      return [token, Object.assign(Object.assign({}, properties), {}, {
        value: rem(properties.value)
      })];
    })
    // We loose the `tokenGroup` inference after transforming the object with
    // `Object.fromEntries()` and `Object.entries()`. Thus, we cast the result
    // back to `T` since we are simply converting the `value` from px to rem.
  );
}
function createVarName(token) {
  return "--p-" + token;
}
function createVar(token) {
  return "--p-" + token;
}
function getMediaConditions(breakpoints3) {
  var breakpointEntries = Object.entries(breakpoints3);
  var lastBreakpointIndex = breakpointEntries.length - 1;
  return Object.fromEntries(breakpointEntries.map(function(entry, index) {
    var _ref7 = entry, _ref8 = _slicedToArray(_ref7, 2), breakpointsTokenName = _ref8[0], breakpoint = _ref8[1];
    var upMediaCondition = getUpMediaCondition(breakpoint);
    var downMediaCondition = getDownMediaCondition(breakpoint);
    var onlyMediaCondition = index === lastBreakpointIndex ? upMediaCondition : upMediaCondition + " and " + getDownMediaCondition(breakpointEntries[index + 1][1]);
    return [breakpointsTokenName, {
      // Media condition for the current breakpoint and up
      up: upMediaCondition,
      // Media condition for current breakpoint and down
      down: downMediaCondition,
      // Media condition for only the current breakpoint
      only: onlyMediaCondition
    }];
  }));
}
function getUpMediaCondition(breakpoint) {
  return "(min-width: " + toEm(breakpoint) + ")";
}
function getDownMediaCondition(breakpoint) {
  var _toPx;
  var offsetBreakpoint = parseFloat((_toPx = toPx(breakpoint)) != null ? _toPx : "") - 0.04;
  return "(max-width: " + toEm(offsetBreakpoint + "px") + ")";
}
function createExact() {
  return function(obj) {
    return obj;
  };
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/border.mjs
var border = {
  "border-radius-0": {
    value: createVar2("border-radius-0-experimental")
  },
  "border-radius-050": {
    value: createVar2("border-radius-05")
  },
  "border-radius-100": {
    value: createVar2("border-radius-1")
  },
  "border-radius-150": {
    value: createVar2("border-radius-1_5-experimental")
  },
  "border-radius-200": {
    value: createVar2("border-radius-2")
  },
  "border-radius-300": {
    value: createVar2("border-radius-3")
  },
  "border-radius-400": {
    value: createVar2("border-radius-4")
  },
  "border-radius-500": {
    value: createVar2("border-radius-5")
  },
  "border-radius-750": {
    value: createVar2("border-radius-6")
  },
  "border-radius-full": {
    value: "9999px"
  },
  "border-radius-0-experimental": {
    value: "0px"
  },
  "border-radius-05": {
    value: "2px"
  },
  "border-radius-1": {
    value: "4px"
  },
  "border-radius-2": {
    value: "8px"
  },
  "border-radius-3": {
    value: "12px"
  },
  "border-radius-4": {
    value: "16px"
  },
  "border-radius-5": {
    value: "20px"
  },
  "border-radius-6": {
    value: "30px"
  },
  "border-radius-1_5-experimental": {
    value: "6px"
  },
  "border-width-0165": {
    value: createVar2("border-width-1-experimental")
  },
  "border-width-025": {
    value: createVar2("border-width-1")
  },
  "border-width-050": {
    value: createVar2("border-width-2")
  },
  "border-width-100": {
    value: createVar2("border-width-4")
  },
  "border-width-1": {
    value: "1px"
  },
  "border-width-2": {
    value: "2px"
  },
  "border-width-3": {
    value: "3px"
  },
  "border-width-4": {
    value: "4px"
  },
  "border-width-5": {
    value: "5px"
  },
  "border-width-1-experimental": {
    value: "0.66px"
  },
  "border-width-2-experimental": {
    value: "1px"
  }
};
function createVar2(borderTokenName) {
  return "var(" + createVarName(borderTokenName) + ")";
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/breakpoints.mjs
var breakpointsAliases = ["xs", "sm", "md", "lg", "xl"];
var breakpoints = {
  "breakpoints-xs": {
    value: "0px",
    description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
  },
  "breakpoints-sm": {
    value: "490px",
    description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
  },
  "breakpoints-md": {
    value: "768px",
    description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
  },
  "breakpoints-lg": {
    value: "1040px",
    description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
  },
  "breakpoints-xl": {
    value: "1440px",
    description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
  }
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/colors.mjs
var gray = {
  50: "rgba(255, 255, 255, 1)",
  100: "rgba(249, 250, 251, 1)",
  200: "rgba(241, 242, 244, 1)",
  300: "rgba(235, 236, 239, 1)",
  400: "rgba(221, 224, 228, 1)",
  500: "rgba(202, 206, 211, 1)",
  600: "rgba(171, 177, 186, 1)",
  700: "rgba(135, 144, 155, 1)",
  800: "rgba(97, 106, 117, 1)",
  900: "rgba(31, 33, 36, 1)"
};
var green = {
  50: "rgba(240, 253, 248, 1)",
  100: "rgba(224, 248, 238, 1)",
  200: "rgba(192, 242, 221, 1)",
  300: "rgba(161, 237, 208, 1)",
  400: "rgba(80, 220, 169, 1)",
  500: "rgba(35, 196, 140, 1)",
  600: "rgba(22, 166, 121, 1)",
  700: "rgba(0, 122, 92, 1)",
  800: "rgba(18, 84, 67, 1)",
  900: "rgba(12, 59, 47, 1)"
};
var blue = {
  50: "rgba(240, 245, 253, 1)",
  100: "rgba(232, 240, 253, 1)",
  200: "rgba(187, 212, 247, 1)",
  300: "rgba(147, 186, 241, 1)",
  400: "rgba(102, 153, 225, 1)",
  500: "rgba(62, 125, 213, 1)",
  600: "rgba(36, 99, 188, 1)",
  700: "rgba(20, 73, 149, 1)",
  800: "rgba(14, 53, 108, 1)",
  900: "rgba(16, 41, 76, 1)"
};
var red = {
  50: "rgba(254, 243, 241, 1)",
  100: "rgba(253, 226, 221, 1)",
  200: "rgba(251, 197, 188, 1)",
  300: "rgba(247, 148, 130, 1)",
  400: "rgba(245, 107, 82, 1)",
  500: "rgba(242, 65, 34, 1)",
  600: "rgba(197, 40, 12, 1)",
  700: "rgba(159, 32, 10, 1)",
  800: "rgba(115, 24, 7, 1)",
  900: "rgba(67, 14, 4, 1)"
};
var yellow = {
  50: "rgba(254, 248, 236, 1)",
  100: "rgba(252, 240, 212, 1)",
  200: "rgba(250, 229, 178, 1)",
  300: "rgba(248, 217, 144, 1)",
  400: "rgba(245, 196, 82, 1)",
  500: "rgba(242, 179, 34, 1)",
  600: "rgba(216, 155, 13, 1)",
  700: "rgba(183, 126, 11, 1)",
  800: "rgba(135, 92, 8, 1)",
  900: "rgba(77, 46, 5, 1)"
};
var teal = {
  50: "rgba(238, 250, 251, 1)",
  100: "rgba(222, 245, 247, 1)",
  200: "rgba(184, 233, 239, 1)",
  300: "rgba(147, 222, 231, 1)",
  400: "rgba(109, 211, 222, 1)",
  500: "rgba(59, 195, 211, 1)",
  600: "rgba(42, 172, 187, 1)",
  700: "rgba(32, 130, 141, 1)",
  800: "rgba(23, 92, 100, 1)",
  900: "rgba(16, 65, 71, 1)"
};
var orange = {
  50: "rgba(254, 243, 236, 1)",
  100: "rgba(253, 231, 217, 1)",
  200: "rgba(250, 201, 168, 1)",
  300: "rgba(247, 177, 130, 1)",
  400: "rgba(245, 147, 82, 1)",
  500: "rgba(242, 117, 34, 1)",
  600: "rgba(216, 101, 13, 1)",
  700: "rgba(164, 76, 10, 1)",
  800: "rgba(111, 52, 7, 1)",
  900: "rgba(77, 36, 5, 1)"
};
var purple = {
  50: "rgba(242, 237, 253, 1)",
  100: "rgba(236, 227, 253, 1)",
  200: "rgba(226, 214, 250, 1)",
  300: "rgba(203, 180, 248, 1)",
  400: "rgba(173, 139, 241, 1)",
  500: "rgba(121, 69, 227, 1)",
  600: "rgba(90, 36, 205, 1)",
  700: "rgba(67, 21, 158, 1)",
  800: "rgba(49, 13, 120, 1)",
  900: "rgba(36, 8, 73, 1)"
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/colors-experimental.mjs
var gray2 = {
  1: "rgba(255, 255, 255, 1)",
  2: "rgba(253, 253, 253, 1)",
  3: "rgba(250, 250, 250, 1)",
  4: "rgba(247, 247, 247, 1)",
  5: "rgba(243, 243, 243, 1)",
  6: "rgba(241, 241, 241, 1)",
  7: "rgba(235, 235, 235, 1)",
  8: "rgba(227, 227, 227, 1)",
  9: "rgba(212, 212, 212, 1)",
  10: "rgba(204, 204, 204, 1)",
  11: "rgba(181, 181, 181, 1)",
  12: "rgba(138, 138, 138, 1)",
  13: "rgba(97, 97, 97, 1)",
  14: "rgba(74, 74, 74, 1)",
  15: "rgba(48, 48, 48, 1)",
  16: "rgba(26, 26, 26, 1)"
};
var azure = {
  "1": "rgba(251, 253, 255, 1)",
  "2": "rgba(242, 249, 255, 1)",
  "3": "rgba(234, 244, 255, 1)",
  "4": "rgba(224, 240, 255, 1)",
  "5": "rgba(213, 235, 255, 1)",
  "6": "rgba(202, 230, 255, 1)",
  "7": "rgba(192, 225, 255, 1)",
  "8": "rgba(168, 216, 255, 1)",
  "9": "rgba(145, 208, 255, 1)",
  "10": "rgba(81, 192, 255, 1)",
  "11": "rgba(0, 148, 213, 1)",
  "12": "rgba(0, 124, 180, 1)",
  "13": "rgba(0, 103, 155, 1)",
  "14": "rgba(0, 82, 124, 1)",
  "15": "rgba(0, 58, 90, 1)",
  "16": "rgba(0, 33, 51, 1)"
};
var blue2 = {
  "1": "rgba(252, 253, 255, 1)",
  "2": "rgba(246, 248, 255, 1)",
  "3": "rgba(240, 242, 255, 1)",
  "4": "rgba(234, 237, 255, 1)",
  "5": "rgba(226, 231, 255, 1)",
  "6": "rgba(219, 225, 255, 1)",
  "7": "rgba(213, 220, 255, 1)",
  "8": "rgba(197, 208, 255, 1)",
  "9": "rgba(186, 199, 255, 1)",
  "10": "rgba(151, 173, 255, 1)",
  "11": "rgba(65, 136, 255, 1)",
  "12": "rgba(0, 113, 233, 1)",
  "13": "rgba(0, 91, 211, 1)",
  "14": "rgba(0, 66, 153, 1)",
  "15": "rgba(0, 46, 106, 1)",
  "16": "rgba(0, 22, 51, 1)"
};
var cyan = {
  "1": "rgba(250, 255, 254, 1)",
  "2": "rgba(231, 252, 248, 1)",
  "3": "rgba(215, 251, 243, 1)",
  "4": "rgba(192, 249, 239, 1)",
  "5": "rgba(165, 247, 233, 1)",
  "6": "rgba(144, 244, 227, 1)",
  "7": "rgba(146, 237, 222, 1)",
  "8": "rgba(130, 227, 209, 1)",
  "9": "rgba(116, 219, 200, 1)",
  "10": "rgba(23, 199, 167, 1)",
  "11": "rgba(19, 163, 137, 1)",
  "12": "rgba(14, 132, 112, 1)",
  "13": "rgba(8, 107, 90, 1)",
  "14": "rgba(9, 83, 70, 1)",
  "15": "rgba(6, 56, 47, 1)",
  "16": "rgba(5, 36, 30, 1)"
};
var green2 = {
  "1": "rgba(248, 255, 251, 1)",
  "2": "rgba(227, 255, 237, 1)",
  "3": "rgba(205, 254, 225, 1)",
  "4": "rgba(180, 254, 210, 1)",
  "5": "rgba(146, 254, 194, 1)",
  "6": "rgba(99, 253, 176, 1)",
  "7": "rgba(56, 250, 163, 1)",
  "8": "rgba(53, 238, 155, 1)",
  "9": "rgba(50, 225, 147, 1)",
  "10": "rgba(46, 211, 137, 1)",
  "11": "rgba(50, 160, 110, 1)",
  "12": "rgba(41, 132, 90, 1)",
  "13": "rgba(19, 111, 69, 1)",
  "14": "rgba(12, 81, 50, 1)",
  "15": "rgba(8, 61, 37, 1)",
  "16": "rgba(9, 42, 27, 1)"
};
var magenta = {
  "1": "rgba(255, 253, 255, 1)",
  "2": "rgba(255, 245, 255, 1)",
  "3": "rgba(253, 239, 253, 1)",
  "4": "rgba(254, 231, 254, 1)",
  "5": "rgba(252, 223, 252, 1)",
  "6": "rgba(251, 215, 251, 1)",
  "7": "rgba(251, 207, 251, 1)",
  "8": "rgba(249, 190, 249, 1)",
  "9": "rgba(248, 177, 248, 1)",
  "10": "rgba(246, 141, 246, 1)",
  "11": "rgba(225, 86, 225, 1)",
  "12": "rgba(197, 48, 197, 1)",
  "13": "rgba(159, 38, 159, 1)",
  "14": "rgba(121, 26, 121, 1)",
  "15": "rgba(86, 16, 86, 1)",
  "16": "rgba(52, 6, 52, 1)"
};
var orange2 = {
  "1": "rgba(255, 253, 250, 1)",
  "2": "rgba(255, 247, 238, 1)",
  "3": "rgba(255, 241, 227, 1)",
  "4": "rgba(255, 235, 213, 1)",
  "5": "rgba(255, 228, 198, 1)",
  "6": "rgba(255, 221, 182, 1)",
  "7": "rgba(255, 214, 164, 1)",
  "8": "rgba(255, 200, 121, 1)",
  "9": "rgba(255, 184, 0, 1)",
  "10": "rgba(229, 165, 0, 1)",
  "11": "rgba(178, 132, 0, 1)",
  "12": "rgba(149, 111, 0, 1)",
  "13": "rgba(124, 88, 0, 1)",
  "14": "rgba(94, 66, 0, 1)",
  "15": "rgba(65, 45, 0, 1)",
  "16": "rgba(37, 26, 0, 1)"
};
var purple2 = {
  "1": "rgba(253, 253, 255, 1)",
  "2": "rgba(248, 247, 255, 1)",
  "3": "rgba(243, 241, 255, 1)",
  "4": "rgba(239, 236, 255, 1)",
  "5": "rgba(233, 229, 255, 1)",
  "6": "rgba(228, 222, 255, 1)",
  "7": "rgba(223, 217, 255, 1)",
  "8": "rgba(212, 204, 255, 1)",
  "9": "rgba(199, 188, 255, 1)",
  "10": "rgba(170, 149, 255, 1)",
  "11": "rgba(148, 116, 255, 1)",
  "12": "rgba(128, 81, 255, 1)",
  "13": "rgba(113, 38, 255, 1)",
  "14": "rgba(87, 0, 209, 1)",
  "15": "rgba(59, 0, 147, 1)",
  "16": "rgba(28, 0, 79, 1)"
};
var red2 = {
  "1": "rgba(255, 251, 251, 1)",
  "2": "rgba(255, 246, 246, 1)",
  "3": "rgba(255, 237, 236, 1)",
  "4": "rgba(254, 233, 232, 1)",
  "5": "rgba(254, 226, 225, 1)",
  "6": "rgba(254, 218, 217, 1)",
  "7": "rgba(254, 211, 209, 1)",
  "8": "rgba(254, 195, 193, 1)",
  "9": "rgba(253, 176, 172, 1)",
  "10": "rgba(253, 129, 122, 1)",
  "11": "rgba(239, 77, 47, 1)",
  "12": "rgba(229, 28, 0, 1)",
  "13": "rgba(181, 38, 11, 1)",
  "14": "rgba(142, 31, 11, 1)",
  "15": "rgba(95, 21, 7, 1)",
  "16": "rgba(47, 10, 4, 1)"
};
var rose = {
  "1": "rgba(255, 253, 253, 1)",
  "2": "rgba(255, 246, 248, 1)",
  "3": "rgba(255, 239, 243, 1)",
  "4": "rgba(255, 232, 238, 1)",
  "5": "rgba(255, 225, 232, 1)",
  "6": "rgba(255, 217, 227, 1)",
  "7": "rgba(254, 209, 221, 1)",
  "8": "rgba(254, 193, 210, 1)",
  "9": "rgba(254, 181, 202, 1)",
  "10": "rgba(254, 142, 177, 1)",
  "11": "rgba(253, 75, 146, 1)",
  "12": "rgba(227, 12, 118, 1)",
  "13": "rgba(185, 7, 95, 1)",
  "14": "rgba(141, 4, 72, 1)",
  "15": "rgba(100, 2, 49, 1)",
  "16": "rgba(62, 1, 28, 1)"
};
var yellow2 = {
  "1": "rgba(255, 253, 246, 1)",
  "2": "rgba(255, 248, 219, 1)",
  "3": "rgba(255, 244, 191, 1)",
  "4": "rgba(255, 239, 157, 1)",
  "5": "rgba(255, 235, 120, 1)",
  "6": "rgba(255, 230, 0, 1)",
  "7": "rgba(247, 223, 0, 1)",
  "8": "rgba(234, 211, 0, 1)",
  "9": "rgba(225, 203, 0, 1)",
  "10": "rgba(197, 178, 0, 1)",
  "11": "rgba(153, 138, 0, 1)",
  "12": "rgba(130, 117, 0, 1)",
  "13": "rgba(105, 95, 0, 1)",
  "14": "rgba(79, 71, 0, 1)",
  "15": "rgba(51, 46, 0, 1)",
  "16": "rgba(31, 28, 0, 1)"
};
var blackAlpha = {
  1: "rgba(0, 0, 0, 0)",
  2: "rgba(0, 0, 0, 0.01)",
  3: "rgba(0, 0, 0, 0.02)",
  4: "rgba(0, 0, 0, 0.03)",
  5: "rgba(0, 0, 0, 0.05)",
  6: "rgba(0, 0, 0, 0.06)",
  7: "rgba(0, 0, 0, 0.08)",
  8: "rgba(0, 0, 0, 0.11)",
  9: "rgba(0, 0, 0, 0.17)",
  10: "rgba(0, 0, 0, 0.20)",
  11: "rgba(0, 0, 0, 0.29)",
  12: "rgba(0, 0, 0, 0.46)",
  13: "rgba(0, 0, 0, 0.62)",
  14: "rgba(0, 0, 0, 0.71)",
  15: "rgba(0, 0, 0, 0.81)",
  16: "rgba(0, 0, 0, 0.90)"
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/color.mjs
var color = {
  // ------------------------------
  // Net new tokens
  // ------------------------------
  "color-border-inverse-active": {
    value: gray2[8]
  },
  "color-border-inverse-hover": {
    value: gray2[10]
  },
  "color-border-warning": {
    value: orange2[8]
  },
  "color-checkbox-icon-disabled": {
    value: gray2[1]
  },
  "color-checkbox-bg-surface-disabled": {
    value: blackAlpha[7]
  },
  "color-bg-fill-active": {
    value: gray2[4]
  },
  "color-bg-fill-brand-selected": {
    value: gray2[15]
  },
  "color-bg-fill-caution-active": {
    value: yellow2[9]
  },
  "color-bg-fill-caution-hover": {
    value: yellow2[8]
  },
  "color-bg-fill-critical-selected": {
    value: red2[14]
  },
  "color-bg-fill-emphasis-active": {
    value: blue2[15]
  },
  "color-bg-fill-emphasis-hover": {
    value: blue2[14]
  },
  "color-bg-fill-emphasis": {
    value: blue2[13]
  },
  "color-bg-fill-hover": {
    value: gray2[3]
  },
  "color-bg-fill-info-active": {
    value: azure[11]
  },
  "color-bg-fill-info-hover": {
    value: azure[10]
  },
  "color-bg-fill-secondary-active": {
    value: gray2[8]
  },
  "color-bg-fill-secondary-hover": {
    value: gray2[7]
  },
  "color-bg-fill-selected": {
    value: gray2[10]
  },
  "color-bg-fill-transparent-secondary-active": {
    value: blackAlpha[8]
  },
  "color-bg-fill-transparent-secondary-hover": {
    value: blackAlpha[7]
  },
  "color-bg-fill-transparent-selected": {
    value: blackAlpha[6]
  },
  "color-bg-fill-transparent": {
    value: blackAlpha[1]
  },
  "color-bg-fill-warning-active": {
    value: orange2[11]
  },
  "color-bg-fill-warning-hover": {
    value: orange2[10]
  },
  "color-bg-fill": {
    value: gray2[1]
  },
  "color-icon-secondary-active": {
    value: gray2[14]
  },
  "color-icon-secondary-hover": {
    value: gray2[13]
  },
  "color-text-link-active": {
    value: blue2[15]
  },
  "color-text-link-hover": {
    value: blue2[14]
  },
  "color-text-link": {
    value: blue2[13]
  },
  "color-nav-bg": {
    value: gray2[7]
  },
  "color-nav-bg-surface-active": {
    value: gray2[3]
  },
  "color-nav-bg-surface-hover": {
    value: gray2[6]
  },
  "color-nav-bg-surface-selected": {
    value: gray2[3]
  },
  "color-nav-bg-surface": {
    value: blackAlpha[3]
  },
  "color-radio-button-icon-disabled": {
    value: gray2[1]
  },
  "color-radio-button-bg-surface-disabled": {
    value: blackAlpha[7]
  },
  "color-bg-surface-emphasis-active": {
    value: blue2[5]
  },
  "color-bg-surface-emphasis-hover": {
    value: blue2[4]
  },
  "color-bg-surface-emphasis": {
    value: blue2[3]
  },
  "color-bg-surface-inverse": {
    value: gray2[15]
  },
  "color-bg-surface-magic-active": {
    value: purple2[6]
  },
  "color-bg-surface-secondary-selected": {
    value: gray2[7]
  },
  "color-bg-surface-tertiary-active": {
    value: gray2[8]
  },
  "color-bg-surface-tertiary-hover": {
    value: gray2[7]
  },
  "color-bg-surface-warning-active": {
    value: orange2[5]
  },
  "color-bg-surface-warning-hover": {
    value: orange2[4]
  },
  "color-text-brand-on-bg-fill-active": {
    value: gray2[10]
  },
  "color-text-brand-on-bg-fill-disabled": {
    value: gray2[1]
  },
  "color-text-brand-on-bg-fill-hover": {
    value: gray2[8]
  },
  "color-text-brand-on-bg-fill": {
    value: gray2[1]
  },
  "color-text-caution-active": {
    value: yellow2[16]
  },
  "color-text-caution-hover": {
    value: yellow2[15]
  },
  "color-text-caution-on-bg-fill": {
    value: yellow2[15]
  },
  "color-text-critical-on-bg-fill": {
    value: red2[1]
  },
  "color-text-emphasis-on-bg-fill-active": {
    value: blue2[7]
  },
  "color-text-emphasis-on-bg-fill-hover": {
    value: blue2[5]
  },
  "color-text-emphasis-on-bg-fill": {
    value: blue2[1]
  },
  "color-text-info-active": {
    value: azure[16]
  },
  "color-text-info-hover": {
    value: azure[15]
  },
  "color-text-magic-on-bg-fill": {
    value: purple2[1]
  },
  "color-text-success-active": {
    value: green2[16]
  },
  "color-text-success-hover": {
    value: green2[15]
  },
  "color-text-success-on-bg-fill": {
    value: green2[1]
  },
  "color-text-warning-active": {
    value: orange2[16]
  },
  "color-text-warning-hover": {
    value: orange2[15]
  },
  "color-text-warning-on-bg-fill": {
    value: orange2[16]
  },
  "color-video-thumbnail-play-button-bg-fill-hover": {
    value: blackAlpha[15]
  },
  "color-video-thumbnail-play-button-bg-fill": {
    value: blackAlpha[14]
  },
  "color-video-thumbnail-play-button-text-on-bg-fill": {
    value: gray2[1]
  },
  // ------------------------------
  // Net new tokens (overridden in light-uplift)
  // ------------------------------
  "color-bg-surface": {
    value: createVar3("color-bg")
  },
  "color-bg-surface-hover": {
    value: gray2[4]
  },
  "color-bg-surface-active": {
    value: gray2[5]
  },
  "color-bg-surface-disabled": {
    value: blackAlpha[5]
  },
  "color-bg-surface-secondary": {
    value: createVar3("color-bg-subdued")
  },
  "color-bg-surface-secondary-hover": {
    value: createVar3("color-bg-subdued-hover")
  },
  "color-bg-surface-secondary-active": {
    value: createVar3("color-bg-subdued-active")
  },
  "color-bg-surface-tertiary": {
    value: createVar3("color-bg-secondary-experimental")
  },
  "color-bg-fill-tertiary": {
    value: createVar3("color-bg-strong")
  },
  "color-bg-fill-tertiary-hover": {
    value: createVar3("color-bg-strong-hover")
  },
  "color-bg-fill-tertiary-active": {
    value: createVar3("color-bg-strong-active")
  },
  "color-input-bg-surface": {
    value: createVar3("color-bg-input")
  },
  "color-input-bg-surface-hover": {
    value: createVar3("color-bg-input-hover-experimental")
  },
  "color-input-bg-surface-active": {
    value: createVar3("color-bg-input-active-experimental")
  },
  "color-bg-fill-brand": {
    value: gray2[15]
  },
  "color-bg-fill-brand-hover": {
    value: gray2[16]
  },
  "color-bg-fill-brand-active": {
    value: gray2[16]
  },
  "color-bg-surface-brand": {
    value: gray2[8]
  },
  "color-bg-surface-brand-hover": {
    value: gray2[7]
  },
  "color-bg-surface-brand-active": {
    value: gray2[6]
  },
  "color-bg-surface-brand-selected": {
    value: gray2[6]
  },
  "color-bg-surface-selected": {
    value: createVar3("color-bg-app-selected")
  },
  "color-bg-fill-success": {
    value: createVar3("color-bg-success-strong")
  },
  "color-bg-fill-success-hover": {
    value: createVar3("color-bg-success-strong-hover-experimental")
  },
  "color-bg-fill-success-active": {
    value: createVar3("color-bg-success-strong-active-experimental")
  },
  "color-bg-fill-success-secondary": {
    value: createVar3("color-bg-success")
  },
  "color-bg-surface-success": {
    value: createVar3("color-bg-success-subdued")
  },
  "color-bg-surface-success-hover": {
    value: createVar3("color-bg-success-subdued-hover")
  },
  "color-bg-surface-success-active": {
    value: createVar3("color-bg-success-subdued-active")
  },
  "color-bg-fill-critical": {
    value: createVar3("color-bg-critical-strong")
  },
  "color-bg-fill-critical-hover": {
    value: createVar3("color-bg-critical-strong-hover")
  },
  "color-bg-fill-critical-active": {
    value: createVar3("color-bg-critical-strong-active")
  },
  "color-bg-fill-critical-secondary": {
    value: createVar3("color-bg-critical")
  },
  "color-bg-surface-critical": {
    value: createVar3("color-bg-critical-subdued")
  },
  "color-bg-surface-critical-hover": {
    value: createVar3("color-bg-critical-subdued-hover")
  },
  "color-bg-surface-critical-active": {
    value: createVar3("color-bg-critical-subdued-active")
  },
  "color-bg-fill-caution": {
    value: createVar3("color-bg-caution-strong")
  },
  "color-bg-fill-caution-secondary": {
    value: createVar3("color-bg-caution")
  },
  "color-bg-surface-caution": {
    value: createVar3("color-bg-caution-subdued")
  },
  "color-bg-surface-caution-hover": {
    value: createVar3("color-bg-caution-subdued-hover")
  },
  "color-bg-surface-caution-active": {
    value: createVar3("color-bg-caution-subdued-active")
  },
  "color-bg-fill-info": {
    value: createVar3("color-bg-info-strong")
  },
  "color-bg-fill-info-secondary": {
    value: createVar3("color-bg-info")
  },
  "color-bg-surface-info": {
    value: createVar3("color-bg-info-subdued")
  },
  "color-bg-surface-info-hover": {
    value: createVar3("color-bg-info-subdued-hover")
  },
  "color-bg-surface-info-active": {
    value: createVar3("color-bg-info-subdued-active")
  },
  "color-bg-fill-warning": {
    value: createVar3("color-bg-warning-strong-experimental")
  },
  "color-bg-fill-warning-secondary": {
    value: createVar3("color-bg-warning")
  },
  "color-bg-surface-warning": {
    value: createVar3("color-bg-warning-subdued-experimental")
  },
  "color-bg-fill-magic": {
    value: createVar3("color-bg-magic-strong")
  },
  "color-bg-fill-magic-secondary": {
    value: createVar3("color-bg-magic")
  },
  "color-bg-fill-magic-secondary-hover": {
    value: createVar3("color-bg-magic-hover")
  },
  "color-bg-fill-magic-secondary-active": {
    value: createVar3("color-bg-magic-active")
  },
  "color-bg-surface-magic": {
    value: purple2[3]
  },
  "color-bg-surface-magic-hover": {
    value: createVar3("color-bg-magic-subdued-hover")
  },
  "color-bg-fill-secondary": {
    value: createVar3("color-bg-inset")
  },
  "color-bg-fill-inverse": {
    value: createVar3("color-bg-inset-strong")
  },
  "color-bg-fill-inverse-hover": {
    value: createVar3("color-bg-inverse-hover")
  },
  "color-bg-fill-inverse-active": {
    value: createVar3("color-bg-inverse-active")
  },
  "color-bg-surface-transparent": {
    value: createVar3("color-bg-transparent-experimental")
  },
  "color-bg-fill-transparent-hover": {
    value: createVar3("color-bg-transparent-hover-experimental")
  },
  "color-bg-fill-transparent-active": {
    value: createVar3("color-bg-transparent-active-experimental")
  },
  "color-bg-fill-disabled": {
    value: createVar3("color-bg-transparent-disabled-experimental")
  },
  "color-bg-fill-transparent-secondary": {
    value: createVar3("color-bg-transparent-subdued-experimental")
  },
  "color-bg-fill-brand-disabled": {
    value: createVar3("color-bg-transparent-primary-disabled-experimental")
  },
  "color-backdrop-bg": {
    value: createVar3("color-bg-backdrop-experimental")
  },
  "color-avatar-bg-fill": {
    value: createVar3("color-avatar-background-experimental")
  },
  "color-avatar-one-bg-fill": {
    value: createVar3("color-avatar-style-one-background-experimental")
  },
  "color-avatar-two-bg-fill": {
    value: createVar3("color-avatar-style-two-background-experimental")
  },
  "color-avatar-three-bg-fill": {
    value: createVar3("color-avatar-style-three-background-experimental")
  },
  "color-avatar-four-bg-fill": {
    value: createVar3("color-avatar-style-four-background-experimental")
  },
  "color-avatar-five-bg-fill": {
    value: createVar3("color-avatar-style-five-background-experimental")
  },
  "color-text-secondary": {
    value: createVar3("color-text-subdued")
  },
  "color-text-emphasis": {
    value: createVar3("color-text-interactive")
  },
  "color-text-emphasis-hover": {
    value: createVar3("color-text-interactive-hover")
  },
  "color-text-emphasis-active": {
    value: createVar3("color-text-interactive-active")
  },
  "color-text-brand": {
    value: createVar3("color-text-primary")
  },
  "color-text-brand-hover": {
    value: createVar3("color-text-primary-hover")
  },
  "color-text-critical-hover": {
    value: red2[15]
  },
  "color-text-info-on-bg-fill": {
    value: createVar3("color-text-info-strong")
  },
  "color-text-warning": {
    value: orange2[14]
  },
  "color-text-inverse-secondary": {
    value: createVar3("color-text-inverse-subdued")
  },
  "color-text-link-inverse": {
    value: blue2[8]
  },
  "color-avatar-text-on-bg-fill": {
    value: createVar3("color-avatar-color-experimental")
  },
  "color-avatar-one-text-on-bg-fill": {
    value: createVar3("color-avatar-style-one-color-experimental")
  },
  "color-avatar-two-text-on-bg-fill": {
    value: createVar3("color-avatar-style-two-color-experimental")
  },
  "color-avatar-three-text-on-bg-fill": {
    value: createVar3("color-avatar-style-three-color-experimental")
  },
  "color-avatar-four-text-on-bg-fill": {
    value: createVar3("color-avatar-style-four-color-experimental")
  },
  "color-avatar-five-text-on-bg-fill": {
    value: createVar3("color-avatar-style-five-color-experimental")
  },
  "color-icon-secondary": {
    value: createVar3("color-icon-subdued")
  },
  "color-icon-emphasis": {
    value: createVar3("color-icon-interactive")
  },
  "color-icon-emphasis-hover": {
    value: createVar3("color-icon-interactive-hover")
  },
  "color-icon-emphasis-active": {
    value: createVar3("color-icon-interactive-active")
  },
  "color-icon-brand": {
    value: createVar3("color-icon-primary")
  },
  "color-border-secondary": {
    value: createVar3("color-border-subdued")
  },
  "color-border-tertiary": {
    value: gray2[10]
  },
  "color-input-border": {
    value: createVar3("color-border-input")
  },
  "color-input-border-hover": {
    value: createVar3("color-border-input-hover")
  },
  "color-input-border-active": {
    value: createVar3("color-border-input-active-experimental")
  },
  "color-border-emphasis": {
    value: blue2[13]
  },
  "color-border-emphasis-hover": {
    value: createVar3("color-border-interactive-hover")
  },
  "color-border-emphasis-active": {
    value: createVar3("color-border-interactive-active")
  },
  "color-border-focus": {
    value: createVar3("color-border-interactive-focus")
  },
  "color-border-brand": {
    value: createVar3("color-border-primary")
  },
  "color-border-critical-secondary": {
    value: createVar3("color-border-critical-strong-experimental")
  },
  "color-border-magic-secondary": {
    value: createVar3("color-border-magic-strong")
  },
  // ------------------------------
  // Existing tokens
  // ------------------------------
  "color-bg-inverse": {
    value: gray[900],
    description: ""
  },
  "color-bg-inset-strong": {
    value: gray[800],
    description: ""
  },
  "color-bg-inverse-hover": {
    value: gray[800],
    description: ""
  },
  "color-bg-inverse-active": {
    value: gray[700],
    description: ""
  },
  "color-bg-strong-hover": {
    value: gray[500],
    description: ""
  },
  "color-bg-strong-active": {
    value: gray[500],
    description: ""
  },
  "color-bg-strong": {
    value: gray[400],
    description: ""
  },
  "color-bg-subdued-active": {
    value: gray[300],
    description: ""
  },
  "color-bg-disabled": {
    value: gray[300],
    description: ""
  },
  "color-bg-interactive-disabled": {
    value: gray[300],
    description: ""
  },
  "color-bg-app": {
    value: gray[200],
    description: ""
  },
  "color-bg-app-active": {
    value: gray[400],
    description: ""
  },
  "color-bg-app-hover": {
    value: gray[300],
    description: ""
  },
  "color-bg-app-selected": {
    value: gray[300],
    description: ""
  },
  "color-bg-active": {
    value: gray[300],
    description: ""
  },
  "color-bg-subdued-hover": {
    value: gray[200],
    description: ""
  },
  "color-bg-inset": {
    value: gray[200],
    description: ""
  },
  "color-bg-hover": {
    value: gray[200],
    description: ""
  },
  "color-bg-subdued": {
    value: gray[100],
    description: ""
  },
  "color-bg-input": {
    value: gray[50],
    description: ""
  },
  "color-bg": {
    value: gray[50],
    description: ""
  },
  "color-bg-primary-active": {
    value: green[900],
    description: ""
  },
  "color-bg-primary-hover": {
    value: green[800],
    description: ""
  },
  "color-bg-primary": {
    value: green[700],
    description: ""
  },
  "color-bg-success-strong": {
    value: green[600],
    description: ""
  },
  "color-bg-success": {
    value: green[300],
    description: ""
  },
  "color-bg-primary-subdued-active": {
    value: green[200],
    description: ""
  },
  "color-bg-success-subdued-active": {
    value: green[200],
    description: ""
  },
  "color-bg-success-subdued": {
    value: green[100],
    description: ""
  },
  "color-bg-primary-subdued-hover": {
    value: green[100],
    description: ""
  },
  "color-bg-success-subdued-hover": {
    value: green[50],
    description: ""
  },
  "color-bg-primary-subdued": {
    value: green[50],
    description: ""
  },
  "color-bg-primary-subdued-selected": {
    value: green[50],
    description: ""
  },
  "color-bg-critical-strong-active": {
    value: red[800],
    description: ""
  },
  "color-bg-critical-strong-hover": {
    value: red[700],
    description: ""
  },
  "color-bg-critical-strong": {
    value: red[600],
    description: ""
  },
  "color-bg-critical-subdued-active": {
    value: red[200],
    description: ""
  },
  "color-bg-critical": {
    value: red[200],
    description: ""
  },
  "color-bg-critical-subdued": {
    value: red[100],
    description: ""
  },
  "color-bg-critical-subdued-hover": {
    value: red[50],
    description: ""
  },
  "color-bg-caution-strong": {
    value: yellow[600],
    description: ""
  },
  "color-bg-caution": {
    value: yellow[300],
    description: ""
  },
  "color-bg-caution-subdued-active": {
    value: yellow[200],
    description: ""
  },
  "color-bg-caution-subdued": {
    value: yellow[100],
    description: ""
  },
  "color-bg-caution-subdued-hover": {
    value: yellow[50],
    description: ""
  },
  "color-bg-info-strong": {
    value: teal[600],
    description: ""
  },
  "color-bg-info-subdued-active": {
    value: teal[200],
    description: ""
  },
  "color-bg-info": {
    value: teal[200],
    description: ""
  },
  "color-bg-info-subdued": {
    value: teal[100],
    description: ""
  },
  "color-bg-info-subdued-hover": {
    value: teal[50],
    description: ""
  },
  "color-bg-interactive-active": {
    value: blue[800],
    description: ""
  },
  "color-bg-interactive-hover": {
    value: blue[700],
    description: ""
  },
  "color-bg-interactive": {
    value: blue[600],
    description: ""
  },
  "color-bg-interactive-subdued-active": {
    value: blue[200],
    description: ""
  },
  "color-bg-interactive-subdued-hover": {
    value: blue[100],
    description: ""
  },
  "color-bg-interactive-subdued": {
    value: blue[50],
    description: ""
  },
  "color-bg-interactive-selected": {
    value: blue[50],
    description: ""
  },
  "color-bg-warning": {
    value: orange[200],
    description: ""
  },
  "color-bg-magic-strong": {
    value: purple[500],
    description: ""
  },
  "color-bg-magic-hover": {
    value: purple[200],
    description: ""
  },
  "color-bg-magic-active": {
    value: purple[300],
    description: ""
  },
  "color-bg-magic": {
    value: purple[100],
    description: ""
  },
  "color-bg-magic-subdued-hover": {
    value: purple[100],
    description: ""
  },
  "color-bg-magic-subdued-active": {
    value: purple[200],
    description: ""
  },
  "color-bg-magic-subdued": {
    value: purple[50],
    description: ""
  },
  "color-border-input-hover": {
    value: gray[800],
    description: ""
  },
  "color-border-inverse": {
    value: gray[800],
    description: ""
  },
  "color-border-strong-hover": {
    value: gray[700],
    description: ""
  },
  "color-border-input": {
    value: gray[600],
    description: ""
  },
  "color-border-hover": {
    value: gray[600],
    description: ""
  },
  "color-border-strong": {
    value: gray[600],
    description: ""
  },
  "color-border": {
    value: gray[500],
    description: ""
  },
  "color-border-disabled": {
    value: gray[400],
    description: ""
  },
  "color-border-subdued": {
    value: gray[400],
    description: ""
  },
  "color-border-interactive-disabled": {
    value: gray[400],
    description: ""
  },
  "color-border-primary": {
    value: green[700],
    description: ""
  },
  "color-border-success": {
    value: green[600],
    description: ""
  },
  "color-border-success-subdued": {
    value: green[400],
    description: ""
  },
  "color-border-critical-active": {
    value: red[900],
    description: ""
  },
  "color-border-critical-hover": {
    value: red[800],
    description: ""
  },
  "color-border-critical": {
    value: red[600],
    description: ""
  },
  "color-border-critical-subdued": {
    value: red[400],
    description: ""
  },
  "color-border-caution": {
    value: yellow[600],
    description: ""
  },
  "color-border-caution-subdued": {
    value: yellow[400],
    description: ""
  },
  "color-border-info": {
    value: teal[500],
    description: ""
  },
  "color-border-info-subdued": {
    value: teal[400],
    description: ""
  },
  "color-border-interactive-active": {
    value: blue[800],
    description: ""
  },
  "color-border-interactive-hover": {
    value: blue[700],
    description: ""
  },
  "color-border-interactive": {
    value: blue[500],
    description: ""
  },
  "color-border-interactive-focus": {
    value: blue[500],
    description: ""
  },
  "color-border-interactive-subdued": {
    value: blue[200],
    description: ""
  },
  "color-border-magic-strong": {
    value: purple[500],
    description: ""
  },
  "color-border-magic": {
    value: purple[400],
    description: ""
  },
  "color-icon-hover": {
    value: gray[900],
    description: ""
  },
  "color-icon": {
    value: gray[800],
    description: ""
  },
  "color-icon-active": {
    value: gray[900],
    description: ""
  },
  "color-icon-subdued": {
    value: gray[700],
    description: ""
  },
  "color-icon-disabled": {
    value: gray[600],
    description: ""
  },
  "color-icon-interactive-disabled": {
    value: gray[600],
    description: ""
  },
  "color-icon-inverse": {
    value: gray[400],
    description: ""
  },
  "color-icon-on-color": {
    value: gray[50],
    description: ""
  },
  "color-icon-primary": {
    value: green[700],
    description: ""
  },
  "color-icon-success": {
    value: green[600],
    description: ""
  },
  "color-icon-critical": {
    value: red[600],
    description: ""
  },
  "color-icon-caution": {
    value: yellow[700],
    description: ""
  },
  "color-icon-info": {
    value: teal[600],
    description: ""
  },
  "color-icon-warning": {
    value: orange[500],
    description: ""
  },
  "color-icon-interactive-active": {
    value: blue[800],
    description: ""
  },
  "color-icon-interactive-hover": {
    value: blue[700],
    description: ""
  },
  "color-icon-interactive": {
    value: blue[600],
    description: ""
  },
  "color-icon-interactive-inverse": {
    value: blue[400],
    description: ""
  },
  "color-icon-magic": {
    value: purple[500],
    description: ""
  },
  "color-text": {
    value: gray[900],
    description: ""
  },
  "color-text-subdued": {
    value: gray[800],
    description: ""
  },
  "color-text-disabled": {
    value: gray[700],
    description: ""
  },
  "color-text-interactive-disabled": {
    value: gray[700],
    description: ""
  },
  "color-text-inverse-subdued": {
    value: gray[600],
    description: ""
  },
  "color-text-inverse": {
    value: gray[200],
    description: ""
  },
  "color-text-on-color": {
    value: gray[50],
    description: ""
  },
  "color-text-success-strong": {
    value: green[900],
    description: ""
  },
  "color-text-success": {
    value: green[700],
    description: ""
  },
  "color-text-primary": {
    value: green[700],
    description: ""
  },
  "color-text-primary-hover": {
    value: green[800],
    description: ""
  },
  "color-text-critical-strong": {
    value: red[900],
    description: ""
  },
  "color-text-critical-active": {
    value: red[800],
    description: ""
  },
  "color-text-critical": {
    value: red[600],
    description: ""
  },
  "color-text-caution-strong": {
    value: yellow[900],
    description: ""
  },
  "color-text-caution": {
    value: yellow[800],
    description: ""
  },
  "color-text-info-strong": {
    value: teal[900],
    description: ""
  },
  "color-text-info": {
    value: teal[700],
    description: ""
  },
  "color-text-warning-strong": {
    value: orange[900],
    description: ""
  },
  "color-text-interactive-active": {
    value: blue[800],
    description: ""
  },
  "color-text-interactive-hover": {
    value: blue[700],
    description: ""
  },
  "color-text-interactive": {
    value: blue[600],
    description: ""
  },
  "color-text-interactive-inverse": {
    value: blue[400],
    description: ""
  },
  "color-text-magic-strong": {
    value: purple[800],
    description: ""
  },
  "color-text-magic": {
    value: purple[600],
    description: ""
  },
  // Experimental tokens
  "color-bg-backdrop-experimental": {
    value: blackAlpha[14],
    description: ""
  },
  "color-bg-primary-disabled-experimental": {
    value: gray2[9],
    description: ""
  },
  "color-bg-secondary-experimental": {
    value: gray2[5],
    description: ""
  },
  "color-bg-input-hover-experimental": {
    value: gray2[3],
    description: ""
  },
  "color-border-input-active-experimental": {
    value: gray2[16]
  },
  "color-border-critical-strong-experimental": {
    value: red2[14]
  },
  "color-bg-input-active-experimental": {
    value: gray2[4],
    description: ""
  },
  "color-bg-transparent-experimental": {
    value: blackAlpha[1],
    description: ""
  },
  "color-bg-transparent-subdued-experimental": {
    value: blackAlpha[6],
    description: ""
  },
  "color-bg-transparent-hover-experimental": {
    value: blackAlpha[5],
    description: ""
  },
  "color-bg-transparent-active-experimental": {
    value: blackAlpha[6],
    description: ""
  },
  "color-bg-transparent-disabled-experimental": {
    value: blackAlpha[5],
    description: ""
  },
  "color-bg-transparent-secondary-disabled-experimental": {
    value: blackAlpha[7],
    description: ""
  },
  "color-bg-transparent-primary-disabled-experimental": {
    value: blackAlpha[9],
    description: ""
  },
  "color-bg-transparent-primary-experimental": {
    value: blackAlpha[13],
    description: ""
  },
  "color-bg-success-strong-hover-experimental": {
    value: green2[13],
    description: ""
  },
  "color-bg-success-strong-active-experimental": {
    value: green2[14],
    description: ""
  },
  "color-bg-warning-subdued-experimental": {
    value: orange2[3],
    description: ""
  },
  "color-bg-warning-strong-experimental": {
    value: orange2[9],
    description: ""
  },
  "color-text-warning-experimental": {
    value: orange2[15],
    description: ""
  },
  "color-text-critical-hover-experimental": {
    value: red2[15],
    description: ""
  },
  "color-icon-info-strong-experimental": {
    value: azure[14],
    description: ""
  },
  "color-icon-warning-strong-experimental": {
    value: orange2[13],
    description: ""
  },
  "color-icon-success-strong-experimental": {
    value: green2[14],
    description: ""
  },
  "color-icon-critical-strong-experimental": {
    value: red2[14],
    description: ""
  },
  "color-icon-critical-strong-hover-experimental": {
    value: red2[15],
    description: ""
  },
  "color-icon-critical-strong-active-experimental": {
    value: red2[16],
    description: ""
  },
  "color-avatar-background-experimental": {
    value: gray2[11],
    description: ""
  },
  "color-avatar-color-experimental": {
    value: gray2[1],
    description: ""
  },
  "color-avatar-style-one-background-experimental": {
    value: magenta[7],
    description: ""
  },
  "color-avatar-style-one-color-experimental": {
    value: magenta[14],
    description: ""
  },
  "color-avatar-style-two-background-experimental": {
    value: green2[7],
    description: ""
  },
  "color-avatar-style-two-color-experimental": {
    value: green2[14],
    description: ""
  },
  "color-avatar-style-three-background-experimental": {
    value: cyan[7],
    description: ""
  },
  "color-avatar-style-three-color-experimental": {
    value: cyan[14],
    description: ""
  },
  "color-avatar-style-four-background-experimental": {
    value: azure[7],
    description: ""
  },
  "color-avatar-style-four-color-experimental": {
    value: azure[14],
    description: ""
  },
  "color-avatar-style-five-background-experimental": {
    value: rose[7],
    description: ""
  },
  "color-avatar-style-five-color-experimental": {
    value: rose[14],
    description: ""
  }
};
function createVar3(colorTokenName) {
  return "var(" + createVar(colorTokenName) + ")";
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/font.mjs
var font = {
  "font-family-sans": {
    value: "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif"
  },
  "font-family-mono": {
    value: "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace"
  },
  "font-size-275": {
    value: createVar4("font-size-70-experimental")
  },
  "font-size-325": {
    value: createVar4("font-size-80-experimental")
  },
  "font-size-350": {
    value: createVar4("font-size-100")
  },
  "font-size-750": {
    value: createVar4("font-size-500")
  },
  "font-size-900": {
    value: createVar4("font-size-600")
  },
  "font-size-1000": {
    value: createVar4("font-size-700")
  },
  "font-size-70-experimental": {
    value: "11px"
  },
  "font-size-75": {
    value: "12px"
  },
  "font-size-80-experimental": {
    value: "13px"
  },
  "font-size-100": {
    value: "14px"
  },
  "font-size-200": {
    value: "16px"
  },
  "font-size-300": {
    value: "20px"
  },
  "font-size-400": {
    value: "24px"
  },
  "font-size-500": {
    value: "28px"
  },
  "font-size-600": {
    value: "32px"
  },
  "font-size-700": {
    value: "40px"
  },
  "font-weight-regular": {
    value: "400"
  },
  "font-weight-medium": {
    value: "500"
  },
  "font-weight-semibold": {
    value: "600"
  },
  "font-weight-bold": {
    value: "700"
  },
  "font-letter-spacing-densest": {
    value: "-0.54px"
  },
  "font-letter-spacing-denser": {
    value: "-0.3px"
  },
  "font-letter-spacing-dense": {
    value: "-0.2px"
  },
  "font-letter-spacing-normal": {
    value: "0px"
  },
  "font-line-height-300": {
    value: createVar4("font-line-height-075-experimental")
  },
  "font-line-height-400": {
    value: createVar4("font-line-height-1")
  },
  "font-line-height-500": {
    value: createVar4("font-line-height-2")
  },
  "font-line-height-600": {
    value: createVar4("font-line-height-3")
  },
  "font-line-height-700": {
    value: createVar4("font-line-height-4")
  },
  "font-line-height-800": {
    value: createVar4("font-line-height-5")
  },
  "font-line-height-1000": {
    value: createVar4("font-line-height-6")
  },
  "font-line-height-1200": {
    value: createVar4("font-line-height-7")
  },
  "font-line-height-075-experimental": {
    value: "12px"
  },
  "font-line-height-1": {
    value: "16px"
  },
  "font-line-height-2": {
    value: "20px"
  },
  "font-line-height-3": {
    value: "24px"
  },
  "font-line-height-4": {
    value: "28px"
  },
  "font-line-height-5": {
    value: "32px"
  },
  "font-line-height-6": {
    value: "40px"
  },
  "font-line-height-7": {
    value: "48px"
  }
};
function createVar4(fontTokenName) {
  return "var(" + createVarName(fontTokenName) + ")";
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/size.mjs
var size = {
  "0": "0px",
  "0165": "0.66px",
  "025": "1px",
  "050": "2px",
  "100": "4px",
  "150": "6px",
  "200": "8px",
  "275": "11px",
  "300": "12px",
  "325": "13px",
  "350": "14px",
  "400": "16px",
  "500": "20px",
  "600": "24px",
  "700": "28px",
  "750": "30px",
  "800": "32px",
  "900": "36px",
  "1000": "40px",
  "1200": "48px",
  "1600": "64px",
  "2000": "80px",
  "2400": "96px",
  "2800": "112px",
  "3200": "128px"
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/height.mjs
var height = {
  "height-0": {
    value: size[0]
  },
  "height-025": {
    value: size["025"]
  },
  "height-050": {
    value: size["050"]
  },
  "height-100": {
    value: size[100]
  },
  "height-150": {
    value: size[150]
  },
  "height-200": {
    value: size[200]
  },
  "height-300": {
    value: size[300]
  },
  "height-400": {
    value: size[400]
  },
  "height-500": {
    value: size[500]
  },
  "height-600": {
    value: size[600]
  },
  "height-700": {
    value: size[700]
  },
  "height-800": {
    value: size[800]
  },
  "height-900": {
    value: size[900]
  },
  "height-1000": {
    value: size[1e3]
  },
  "height-1200": {
    value: size[1200]
  },
  "height-1600": {
    value: size[1600]
  },
  "height-2000": {
    value: size[2e3]
  },
  "height-2400": {
    value: size[2400]
  },
  "height-2800": {
    value: size[2800]
  },
  "height-3200": {
    value: size[3200]
  }
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/motion.mjs
var motion = {
  "motion-duration-0": {
    value: "0ms"
  },
  "motion-duration-50": {
    value: "50ms"
  },
  "motion-duration-100": {
    value: "100ms"
  },
  "motion-duration-150": {
    value: "150ms"
  },
  "motion-duration-200": {
    value: "200ms"
  },
  "motion-duration-250": {
    value: "250ms"
  },
  "motion-duration-300": {
    value: "300ms"
  },
  "motion-duration-350": {
    value: "350ms"
  },
  "motion-duration-400": {
    value: "400ms"
  },
  "motion-duration-450": {
    value: "450ms"
  },
  "motion-duration-500": {
    value: "500ms"
  },
  "motion-duration-5000": {
    value: "5000ms"
  },
  "motion-ease": {
    value: "cubic-bezier(0.25, 0.1, 0.25, 1)",
    description: "Responds quickly and finishes with control. A great default for any user interaction."
  },
  "motion-ease-in": {
    value: "cubic-bezier(0.42, 0, 1, 1)",
    description: "Starts slowly and finishes at top speed. Use sparingly."
  },
  "motion-ease-out": {
    value: "cubic-bezier(0, 0, 0.58, 1)",
    description: "Starts at top speed and finishes slowly. Use sparingly."
  },
  "motion-ease-in-out": {
    value: "cubic-bezier(0.42, 0, 0.58, 1)",
    description: "Starts and finishes with equal speed. A good default for transitions triggered by the system."
  },
  "motion-linear": {
    value: "cubic-bezier(0, 0, 1, 1)",
    description: "Moves with constant speed. Use for continuous and mechanical animations, such as rotating spinners."
  },
  "motion-keyframes-bounce": {
    value: "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }"
  },
  "motion-keyframes-fade-in": {
    value: "{ to { opacity: 1 } }"
  },
  "motion-keyframes-pulse": {
    value: "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }"
  },
  "motion-keyframes-spin": {
    value: "{ to { transform: rotate(1turn) } }"
  },
  "motion-keyframes-appear-above": {
    value: "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }"
  },
  "motion-keyframes-appear-below": {
    value: "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
  }
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/shadow.mjs
var shadow = {
  "shadow-0": {
    value: "none"
  },
  "shadow-100": {
    value: "0px 0px 2px rgba(31, 33, 36, 0.24)"
  },
  "shadow-200": {
    value: "0px 1px 1px rgba(31, 33, 36, 0.1)"
  },
  "shadow-300": {
    value: "0px 2px 4px rgba(31, 33, 36, 0.1), 0px 1px 6px rgba(31, 33, 36, 0.05)"
  },
  "shadow-400": {
    value: "0px 4px 12px rgba(31, 33, 36, 0.2), 0px 2px 6px rgba(31, 33, 36, 0.05)"
  },
  "shadow-500": {
    value: "0px 4px 18px -2px rgba(31, 33, 36, 0.08), 0px 12px 18px -2px rgba(31, 33, 36, 0.15)"
  },
  "shadow-600": {
    value: "0px 32px 32px rgba(31, 33, 36, 0.15), 0px 32px 56px -2px rgba(31, 33, 36, 0.16)"
  },
  "shadow-bevel-100": {
    value: "1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset, -1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset, 0px -1px 0px 0px rgba(0, 0, 0, 0.17) inset, 0px 1px 0px 0px rgba(204, 204, 204, 0.5) inset"
  },
  "shadow-inset-100": {
    value: "inset 0px 0px 3px rgba(31, 33, 36, 0.56)"
  },
  "shadow-inset-200": {
    value: "inset 0px 2px 4px rgba(31, 33, 36, 0.32)"
  },
  "shadow-button": {
    value: "inset 0px -1px 0px #B5B5B5, inset -1px 0px 0px #E3E3E3, inset 1px 0px 0px #E3E3E3, inset 0px 1px 0px #E3E3E3"
  },
  "shadow-button-hover": {
    value: "inset 0px -1px 0px #CCCCCC, inset 1px 0px 0px #EBEBEB, inset -1px 0px 0px #EBEBEB, inset 0px 1px 0px #EBEBEB"
  },
  "shadow-button-inset": {
    value: createVar5("shadow-inset-200")
  },
  "shadow-button-primary": {
    value: "0px 2px 0px 0px rgba(255, 255, 255, 0.2) inset, 2px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, -2px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, 0px -1px 0px 1px #000 inset, 0px 1px 0px 0px #000 inset"
  },
  "shadow-button-primary-hover": {
    value: "0px 1px 0px 0px rgba(255, 255, 255, 0.24) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.16) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.16) inset, 0px -1.5px 0px 0px rgba(255, 255, 255, 0.07) inset, 0px 0px 0px 0.5px #1A1A1A"
  },
  "shadow-button-primary-inset": {
    value: "0px 3px 0px 0px #000 inset"
  },
  "shadow-button-primary-critical": {
    value: "0px 1px 0px 0px rgba(255, 255, 255, 0.4) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, 0px -1.5px 0px 0px rgba(0, 0, 0, 0.25) inset"
  },
  "shadow-button-primary-critical-hover": {
    value: "-1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 0px 0.5px 0px 0px rgba(0, 0, 0, 0.25), 0px -1.5px 0px 0px rgba(255, 255, 255, 0.07) inset, 0px 1px 0px 0px rgba(255, 255, 255, 0.24) inset"
  },
  "shadow-button-primary-critical-inset": {
    value: "0px 2px 0px 0px rgba(0, 0, 0, 0.60) inset, 1px 0px 1px 0px rgba(0, 0, 0, 0.20) inset, -1px 0px 1px 0px rgba(0, 0, 0, 0.20) inset"
  },
  "shadow-button-primary-success": {
    value: "0px 1px 0px 0px rgba(255, 255, 255, 0.4) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, 0px -1.5px 0px 0px rgba(0, 0, 0, 0.25) inset"
  },
  "shadow-button-primary-success-hover": {
    value: "-1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 0px 0.5px 0px 0px rgba(0, 0, 0, 0.25), 0px -1.5px 0px 0px rgba(255, 255, 255, 0.07) inset, 0px 1px 0px 0px rgba(255, 255, 255, 0.24) inset"
  },
  "shadow-button-primary-success-inset": {
    value: "0px 2px 0px 0px rgba(0, 0, 0, 0.60) inset, 1px 0px 1px 0px rgba(0, 0, 0, 0.20) inset, -1px 0px 1px 0px rgba(0, 0, 0, 0.20) inset"
  },
  "shadow-border-inset": {
    value: "0px 0px 0px 1px rgba(0, 0, 0, 0.08) inset"
  },
  "shadow-inset-lg": {
    value: "inset 0px 0px 7px 2px rgba(31, 33, 36, 0.18)"
  },
  "shadow-inset-md": {
    value: "inset 0px 2px 4px rgba(31, 33, 36, 0.32)"
  },
  "shadow-inset-sm": {
    value: "inset 0px 0px 3px rgba(31, 33, 36, 0.56)"
  },
  "shadow-none": {
    value: "none"
  },
  "shadow-xs": {
    value: "0px 0px 2px rgba(31, 33, 36, 0.24)"
  },
  "shadow-sm": {
    value: "0px 1px 1px rgba(31, 33, 36, 0.1)"
  },
  "shadow-md": {
    value: "0px 2px 4px rgba(31, 33, 36, 0.1), 0px 1px 6px rgba(31, 33, 36, 0.05)"
  },
  "shadow-lg": {
    value: "0px 4px 12px rgba(31, 33, 36, 0.2), 0px 2px 6px rgba(31, 33, 36, 0.05)"
  },
  "shadow-xl": {
    value: "0px 4px 18px -2px rgba(31, 33, 36, 0.08), 0px 12px 18px -2px rgba(31, 33, 36, 0.15)"
  },
  "shadow-2xl": {
    value: "0px 32px 32px rgba(31, 33, 36, 0.15), 0px 32px 56px -2px rgba(31, 33, 36, 0.16)"
  },
  "shadow-bevel-experimental": {
    value: "1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset, -1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset, 0px -1px 0px 0px rgba(0, 0, 0, 0.17) inset, 0px 1px 0px 0px rgba(204, 204, 204, 0.5) inset"
  },
  "shadow-card-sm-experimental": {
    value: "0px 2px 0px rgba(0, 0, 0, 0.07), 0px 1px 0px rgba(0, 0, 0, 0.07), 1px 0px 0px #E3E3E3, -1px 0px 0px #E3E3E3, 0px -1px 0px #E3E3E3"
  },
  "shadow-card-md-experimental": {
    value: "0px 3px 1px -1px rgba(0, 0, 0, 0.07),  0px -1px 0px 0px rgba(0, 0, 0, 0.16),  1px 0px 0px 0px rgba(227, 227, 227, 1),  -1px 0px 0px 0px rgba(227, 227, 227, 1),  0px 1px 0px 0px rgba(227, 227, 227, 1)"
  },
  "shadow-card-lg-experimental": {
    value: "0px 4px 6px -2px rgba(0, 0, 0, 0.2), inset 0px -1px 0px #D4D4D4, inset -1px 0px 0px #E3E3E3, inset 1px 0px 0px #E3E3E3, inset 0px 1px 0px #E3E3E3"
  },
  "shadow-button-experimental": {
    value: "inset 0px -1px 0px #B5B5B5, inset -1px 0px 0px #E3E3E3, inset 1px 0px 0px #E3E3E3, inset 0px 1px 0px #E3E3E3"
  },
  "shadow-button-hover-experimental": {
    value: "inset 0px -1px 0px #cccccc, inset 1px 0px 0px #ebebeb, inset -1px 0px 0px #ebebeb, inset 0px 1px 0px #ebebeb"
  },
  "shadow-button-disabled-experimental": {
    value: "inset 0px 0px 0px 1px rgba(227, 227, 227, 1)"
  },
  "shadow-button-primary-strong-inset-experimental": {
    value: "0px 3px 0px 0px #000 inset"
  },
  "shadow-button-primary-strong-hover-experimental": {
    value: "0px 1px 0px 0px rgba(255, 255, 255, 0.24) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.16) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.16) inset, 0px -1.5px 0px 0px rgba(255, 255, 255, 0.07) inset, 0px 0px 0px 0.5px #1A1A1A"
  },
  "shadow-button-primary-strong-experimental": {
    value: "0px 2px 0px 0px rgba(255, 255, 255, 0.2) inset, 2px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, -2px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, 0px -1px 0px 1px #000 inset, 0px 1px 0px 0px #000 inset"
  },
  "shadow-button-primary-experimental": {
    value: "0px 1px 0px 0px rgba(255, 255, 255, 0.4) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.2) inset, 0px -1.5px 0px 0px rgba(0, 0, 0, 0.25) inset"
  },
  "shadow-button-primary-hover-experimental": {
    value: "-1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 0px 0.5px 0px 0px rgba(0, 0, 0, 0.25), 0px -1.5px 0px 0px rgba(255, 255, 255, 0.07) inset, 0px 1px 0px 0px rgba(255, 255, 255, 0.24) inset"
  },
  "shadow-button-inset-experimental": {
    value: "0px 2px 0px 0px rgba(0, 0, 0, 0.60) inset, 1px 0px 1px 0px rgba(0, 0, 0, 0.20) inset, -1px 0px 1px 0px rgba(0, 0, 0, 0.20) inset"
  },
  "shadow-border-inset-experimental": {
    value: "0px 0px 0px 1px rgba(0, 0, 0, 0.08) inset"
  }
};
function createVar5(shadowTokenName) {
  return "var(" + createVarName(shadowTokenName) + ")";
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/space.mjs
var space = {
  "space-0": {
    value: size[0]
  },
  "space-025": {
    value: size["025"]
  },
  "space-050": {
    value: createVar6("space-05")
  },
  "space-100": {
    value: createVar6("space-1")
  },
  "space-150": {
    value: createVar6("space-1_5-experimental")
  },
  "space-200": {
    value: createVar6("space-2")
  },
  "space-300": {
    value: createVar6("space-3")
  },
  "space-400": {
    value: createVar6("space-4")
  },
  "space-500": {
    value: createVar6("space-5")
  },
  "space-600": {
    value: createVar6("space-6")
  },
  "space-800": {
    value: createVar6("space-8")
  },
  "space-1000": {
    value: createVar6("space-10")
  },
  "space-1200": {
    value: createVar6("space-12")
  },
  "space-1600": {
    value: createVar6("space-16")
  },
  "space-2000": {
    value: createVar6("space-20")
  },
  "space-2400": {
    value: createVar6("space-24")
  },
  "space-2800": {
    value: createVar6("space-28")
  },
  "space-3200": {
    value: createVar6("space-32")
  },
  "space-button-group-gap": {
    value: createVar6("space-200")
  },
  "space-card-gap": {
    value: createVar6("space-400")
  },
  "space-card-padding": {
    value: createVar6("space-400")
  },
  "space-table-cell-padding": {
    value: createVar6("space-150")
  },
  "space-05": {
    value: "2px"
  },
  "space-1": {
    value: "4px"
  },
  "space-1_5-experimental": {
    value: "6px"
  },
  "space-2": {
    value: "8px"
  },
  "space-3": {
    value: "12px"
  },
  "space-4": {
    value: "16px"
  },
  "space-5": {
    value: "20px"
  },
  "space-6": {
    value: "24px"
  },
  "space-8": {
    value: "32px"
  },
  "space-10": {
    value: "40px"
  },
  "space-12": {
    value: "48px"
  },
  "space-16": {
    value: "64px"
  },
  "space-20": {
    value: "80px"
  },
  "space-24": {
    value: "96px"
  },
  "space-28": {
    value: "112px"
  },
  "space-32": {
    value: "128px"
  }
};
function createVar6(spaceTokenName) {
  return "var(" + createVarName(spaceTokenName) + ")";
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/text.mjs
var text = {
  // heading-3xl
  "text-heading-3xl-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-heading-3xl-font-size": {
    value: createVar4("font-size-900")
  },
  "text-heading-3xl-font-weight": {
    value: createVar4("font-weight-bold")
  },
  "text-heading-3xl-font-letter-spacing": {
    value: createVar4("font-letter-spacing-densest")
  },
  "text-heading-3xl-font-line-height": {
    value: createVar4("font-line-height-1200")
  },
  // heading-2xl
  "text-heading-2xl-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-heading-2xl-font-size": {
    value: createVar4("font-size-750")
  },
  "text-heading-2xl-font-weight": {
    value: createVar4("font-weight-bold")
  },
  "text-heading-2xl-font-letter-spacing": {
    value: createVar4("font-letter-spacing-denser")
  },
  "text-heading-2xl-font-line-height": {
    value: createVar4("font-line-height-1000")
  },
  // heading-xl
  "text-heading-xl-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-heading-xl-font-size": {
    value: createVar4("font-size-600")
  },
  "text-heading-xl-font-weight": {
    value: createVar4("font-weight-bold")
  },
  "text-heading-xl-font-letter-spacing": {
    value: createVar4("font-letter-spacing-dense")
  },
  "text-heading-xl-font-line-height": {
    value: createVar4("font-line-height-800")
  },
  // heading-lg
  "text-heading-lg-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-heading-lg-font-size": {
    value: createVar4("font-size-500")
  },
  "text-heading-lg-font-weight": {
    value: createVar4("font-weight-semibold")
  },
  "text-heading-lg-font-letter-spacing": {
    value: createVar4("font-letter-spacing-dense")
  },
  "text-heading-lg-font-line-height": {
    value: createVar4("font-line-height-600")
  },
  // heading-md
  "text-heading-md-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-heading-md-font-size": {
    value: createVar4("font-size-350")
  },
  "text-heading-md-font-weight": {
    value: createVar4("font-weight-semibold")
  },
  "text-heading-md-font-letter-spacing": {
    value: createVar4("font-letter-spacing-normal")
  },
  "text-heading-md-font-line-height": {
    value: createVar4("font-line-height-500")
  },
  // heading-sm
  "text-heading-sm-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-heading-sm-font-size": {
    value: createVar4("font-size-325")
  },
  "text-heading-sm-font-weight": {
    value: createVar4("font-weight-semibold")
  },
  "text-heading-sm-font-letter-spacing": {
    value: createVar4("font-letter-spacing-normal")
  },
  "text-heading-sm-font-line-height": {
    value: createVar4("font-line-height-500")
  },
  // body-lg
  "text-body-lg-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-body-lg-font-size": {
    value: createVar4("font-size-350")
  },
  "text-body-lg-font-weight": {
    value: createVar4("font-weight-regular")
  },
  "text-body-lg-font-letter-spacing": {
    value: createVar4("font-letter-spacing-normal")
  },
  "text-body-lg-font-line-height": {
    value: createVar4("font-line-height-500")
  },
  // body-md
  "text-body-md-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-body-md-font-size": {
    value: createVar4("font-size-325")
  },
  "text-body-md-font-weight": {
    value: createVar4("font-weight-regular")
  },
  "text-body-md-font-letter-spacing": {
    value: createVar4("font-letter-spacing-normal")
  },
  "text-body-md-font-line-height": {
    value: createVar4("font-line-height-500")
  },
  // body-sm
  "text-body-sm-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-body-sm-font-size": {
    value: createVar4("font-size-300")
  },
  "text-body-sm-font-weight": {
    value: createVar4("font-weight-regular")
  },
  "text-body-sm-font-letter-spacing": {
    value: createVar4("font-letter-spacing-normal")
  },
  "text-body-sm-font-line-height": {
    value: createVar4("font-line-height-400")
  },
  // body-xs
  "text-body-xs-font-family": {
    value: createVar4("font-family-sans")
  },
  "text-body-xs-font-size": {
    value: createVar4("font-size-275")
  },
  "text-body-xs-font-weight": {
    value: createVar4("font-weight-regular")
  },
  "text-body-xs-font-letter-spacing": {
    value: createVar4("font-letter-spacing-normal")
  },
  "text-body-xs-font-line-height": {
    value: createVar4("font-line-height-300")
  }
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/width.mjs
var width = {
  "width-0": {
    value: size[0]
  },
  "width-025": {
    value: size["025"]
  },
  "width-050": {
    value: size["050"]
  },
  "width-100": {
    value: size[100]
  },
  "width-150": {
    value: size[150]
  },
  "width-200": {
    value: size[200]
  },
  "width-300": {
    value: size[300]
  },
  "width-400": {
    value: size[400]
  },
  "width-500": {
    value: size[500]
  },
  "width-600": {
    value: size[600]
  },
  "width-700": {
    value: size[700]
  },
  "width-800": {
    value: size[800]
  },
  "width-900": {
    value: size[900]
  },
  "width-1000": {
    value: size[1e3]
  },
  "width-1200": {
    value: size[1200]
  },
  "width-1600": {
    value: size[1600]
  },
  "width-2000": {
    value: size[2e3]
  },
  "width-2400": {
    value: size[2400]
  },
  "width-2800": {
    value: size[2800]
  },
  "width-3200": {
    value: size[3200]
  }
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/zIndex.mjs
var zIndex = {
  "z-index-1": {
    value: "100"
  },
  "z-index-2": {
    value: "400"
  },
  "z-index-3": {
    value: "510"
  },
  "z-index-4": {
    value: "512"
  },
  "z-index-5": {
    value: "513"
  },
  "z-index-6": {
    value: "514"
  },
  "z-index-7": {
    value: "515"
  },
  "z-index-8": {
    value: "516"
  },
  "z-index-9": {
    value: "517"
  },
  "z-index-10": {
    value: "518"
  },
  "z-index-11": {
    value: "519"
  },
  "z-index-12": {
    value: "520"
  }
};

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/index.mjs
var createMetaThemeBase = createExact();
var metaThemeBase = createMetaThemeBase({
  border: tokensToRems(border),
  breakpoints: tokensToRems(breakpoints),
  color,
  font: tokensToRems(font),
  height: tokensToRems(height),
  motion,
  shadow: tokensToRems(shadow),
  space: tokensToRems(space),
  text,
  width: tokensToRems(width),
  zIndex
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/utils.mjs
var createMetaThemePartial = createExact();
function createMetaTheme(metaThemePartial) {
  return (0, import_deepmerge.default)(metaThemeBase, metaThemePartial);
}
function flattenMetaTheme(metaTheme) {
  return Object.fromEntries(Object.values(metaTheme).flatMap(function(metaTokenGroup) {
    return Object.entries(metaTokenGroup).map(function(_ref5) {
      var _ref6 = _slicedToArray(_ref5, 2), tokenName = _ref6[0], metaTokenProperties = _ref6[1];
      return [tokenName, metaTokenProperties];
    });
  }));
}
function resolveMetaThemeRefs(metaTheme) {
  var flattenedMetaTheme = flattenMetaTheme(metaTheme);
  return Object.fromEntries(Object.entries(metaTheme).map(function(_ref7) {
    var _ref8 = _slicedToArray(_ref7, 2), tokenGroupName = _ref8[0], metaTokenGroup = _ref8[1];
    return [tokenGroupName, Object.fromEntries(Object.entries(metaTokenGroup).map(function(_ref9) {
      var _ref10 = _slicedToArray(_ref9, 2), tokenName = _ref10[0], metaTokenProperties = _ref10[1];
      var tokenValue = metaTokenProperties.value;
      while (tokenValue.startsWith("var(--p-")) {
        var tokenNameRef = tokenValue.slice(8, -1);
        tokenValue = flattenedMetaTheme[tokenNameRef].value;
      }
      return [tokenName, Object.assign(Object.assign({}, metaTokenProperties), {}, {
        value: tokenValue
      })];
    }))];
  }));
}

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/constants.mjs
var themeNameLight = "light";
var themeNameDefault = themeNameLight;

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light.mjs
var metaThemeLightPartial = createMetaThemePartial({});
createMetaTheme(metaThemeLightPartial);

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light-uplift.mjs
var metaThemeLightUpliftPartial = createMetaThemePartial({
  border: {
    // v12.0.0
    "border-radius-0": {
      value: size[0]
    },
    "border-radius-050": {
      value: size["050"]
    },
    "border-radius-100": {
      value: size[100]
    },
    "border-radius-150": {
      value: size[150]
    },
    "border-radius-200": {
      value: size[200]
    },
    "border-radius-300": {
      value: size[300]
    },
    "border-radius-400": {
      value: size[400]
    },
    "border-radius-500": {
      value: size[500]
    },
    "border-radius-750": {
      value: size[750]
    },
    "border-width-0165": {
      value: size["0165"]
    },
    "border-width-025": {
      value: size["025"]
    },
    "border-width-050": {
      value: size["050"]
    },
    "border-width-100": {
      value: size[100]
    }
  },
  color: {
    // v12.0.0
    "color-bg-surface": {
      value: gray2[1]
    },
    "color-bg-surface-secondary": {
      value: gray2[4]
    },
    "color-bg-surface-secondary-hover": {
      value: gray2[6]
    },
    "color-bg-surface-secondary-active": {
      value: gray2[7]
    },
    "color-bg-surface-tertiary": {
      value: gray2[5]
    },
    "color-bg-fill-tertiary": {
      value: gray2[8]
    },
    "color-bg-fill-tertiary-hover": {
      value: gray2[9]
    },
    "color-bg-fill-tertiary-active": {
      value: gray2[10]
    },
    "color-input-bg-surface": {
      value: gray2[2]
    },
    "color-input-bg-surface-hover": {
      value: gray2[3]
    },
    "color-input-bg-surface-active": {
      value: gray2[4]
    },
    "color-bg-surface-selected": {
      value: gray2[3]
    },
    "color-bg-fill-success": {
      value: green2[12]
    },
    "color-bg-fill-success-hover": {
      value: green2[13]
    },
    "color-bg-fill-success-active": {
      value: green2[14]
    },
    "color-bg-fill-success-secondary": {
      value: green2[3]
    },
    "color-bg-surface-success": {
      value: green2[3]
    },
    "color-bg-surface-success-hover": {
      value: green2[4]
    },
    "color-bg-surface-success-active": {
      value: green2[5]
    },
    "color-bg-fill-critical": {
      value: red2[12]
    },
    "color-bg-fill-critical-hover": {
      value: red2[13]
    },
    "color-bg-fill-critical-active": {
      value: red2[14]
    },
    "color-bg-fill-critical-secondary": {
      value: red2[6]
    },
    "color-bg-surface-critical": {
      value: red2[4]
    },
    "color-bg-surface-critical-hover": {
      value: red2[5]
    },
    "color-bg-surface-critical-active": {
      value: red2[6]
    },
    "color-bg-fill-caution": {
      value: yellow2[6]
    },
    "color-bg-fill-caution-secondary": {
      value: yellow2[4]
    },
    "color-bg-surface-caution": {
      value: yellow2[2]
    },
    "color-bg-surface-caution-hover": {
      value: yellow2[3]
    },
    "color-bg-surface-caution-active": {
      value: yellow2[4]
    },
    "color-bg-fill-info": {
      value: azure[9]
    },
    "color-bg-fill-info-secondary": {
      value: azure[4]
    },
    "color-bg-surface-info": {
      value: azure[3]
    },
    "color-bg-surface-info-hover": {
      value: azure[4]
    },
    "color-bg-surface-info-active": {
      value: azure[6]
    },
    "color-bg-fill-warning": {
      value: orange2[9]
    },
    "color-bg-fill-warning-secondary": {
      value: orange2[7]
    },
    "color-bg-surface-warning": {
      value: orange2[3]
    },
    "color-bg-fill-magic": {
      value: purple2[12]
    },
    "color-bg-fill-magic-secondary": {
      value: purple2[6]
    },
    "color-bg-fill-magic-secondary-hover": {
      value: purple2[7]
    },
    "color-bg-fill-magic-secondary-active": {
      value: purple2[8]
    },
    "color-bg-surface-magic-hover": {
      value: purple2[4]
    },
    "color-bg-fill-secondary": {
      value: gray2[6]
    },
    "color-bg-fill-inverse": {
      value: gray2[15]
    },
    "color-bg-fill-inverse-hover": {
      value: gray2[14]
    },
    "color-bg-fill-inverse-active": {
      value: gray2[13]
    },
    "color-bg-surface-transparent": {
      value: blackAlpha[1]
    },
    "color-bg-fill-transparent-hover": {
      value: blackAlpha[5]
    },
    "color-bg-fill-transparent-active": {
      value: blackAlpha[6]
    },
    "color-bg-fill-disabled": {
      value: blackAlpha[5]
    },
    "color-bg-fill-transparent-secondary": {
      value: blackAlpha[6]
    },
    "color-bg-fill-brand-disabled": {
      value: blackAlpha[9]
    },
    "color-backdrop-bg": {
      value: blackAlpha[14]
    },
    "color-avatar-bg-fill": {
      value: gray2[11]
    },
    "color-avatar-one-bg-fill": {
      value: magenta[7]
    },
    "color-avatar-two-bg-fill": {
      value: green2[7]
    },
    "color-avatar-three-bg-fill": {
      value: cyan[7]
    },
    "color-avatar-four-bg-fill": {
      value: azure[7]
    },
    "color-avatar-five-bg-fill": {
      value: rose[7]
    },
    "color-text-secondary": {
      value: gray2[13]
    },
    "color-text-emphasis": {
      value: blue2[13]
    },
    "color-text-emphasis-hover": {
      value: blue2[14]
    },
    "color-text-emphasis-active": {
      value: blue2[15]
    },
    "color-text-brand": {
      value: gray2[14]
    },
    "color-text-brand-hover": {
      value: gray2[15]
    },
    "color-text-info-on-bg-fill": {
      value: azure[16]
    },
    "color-text-inverse-secondary": {
      value: gray2[11]
    },
    "color-avatar-text-on-bg-fill": {
      value: gray2[1]
    },
    "color-avatar-one-text-on-bg-fill": {
      value: magenta[14]
    },
    "color-avatar-two-text-on-bg-fill": {
      value: green2[14]
    },
    "color-avatar-three-text-on-bg-fill": {
      value: cyan[14]
    },
    "color-avatar-four-text-on-bg-fill": {
      value: azure[14]
    },
    "color-avatar-five-text-on-bg-fill": {
      value: rose[14]
    },
    "color-icon-secondary": {
      value: gray2[12]
    },
    "color-icon-emphasis": {
      value: blue2[13]
    },
    "color-icon-emphasis-hover": {
      value: blue2[14]
    },
    "color-icon-emphasis-active": {
      value: blue2[15]
    },
    "color-icon-brand": {
      value: gray2[16]
    },
    "color-border-secondary": {
      value: gray2[7]
    },
    "color-input-border": {
      value: gray2[12]
    },
    "color-input-border-hover": {
      value: gray2[13]
    },
    "color-input-border-active": {
      value: gray2[16]
    },
    "color-border-emphasis-hover": {
      value: blue2[14]
    },
    "color-border-emphasis-active": {
      value: blue2[15]
    },
    "color-border-focus": {
      value: blue2[13]
    },
    "color-border-brand": {
      value: gray2[8]
    },
    "color-border-critical-secondary": {
      value: red2[14]
    },
    "color-border-magic-secondary": {
      value: purple2[12]
    },
    // v11.0.0
    "color-bg-inverse": {
      value: gray2[16]
    },
    "color-bg-inset-strong": {
      value: gray2[15]
    },
    "color-bg-inverse-hover": {
      value: gray2[14]
    },
    "color-bg-inverse-active": {
      value: gray2[13]
    },
    "color-bg-strong-hover": {
      value: gray2[9]
    },
    "color-bg-strong-active": {
      value: gray2[10]
    },
    "color-bg-strong": {
      value: gray2[8]
    },
    "color-bg-subdued-active": {
      value: gray2[7]
    },
    "color-bg-disabled": {
      value: gray2[7]
    },
    "color-bg-interactive-disabled": {
      value: gray2[7]
    },
    "color-bg-app": {
      value: gray2[6]
    },
    "color-bg-app-hover": {
      value: gray2[2]
    },
    "color-bg-app-selected": {
      value: gray2[3]
    },
    "color-bg-active": {
      value: gray2[4]
    },
    "color-bg-subdued-hover": {
      value: gray2[6]
    },
    "color-bg-inset": {
      value: gray2[6]
    },
    "color-bg-hover": {
      value: gray2[3]
    },
    "color-bg-subdued": {
      value: gray2[4]
    },
    "color-bg-input": {
      value: gray2[1]
    },
    "color-bg": {
      value: gray2[1]
    },
    "color-bg-primary-active": {
      value: gray2[16]
    },
    "color-bg-primary-hover": {
      value: gray2[16]
    },
    "color-bg-primary": {
      value: gray2[15]
    },
    "color-bg-success-strong": {
      value: green2[12]
    },
    "color-bg-success": {
      value: green2[3]
    },
    "color-bg-primary-subdued-active": {
      value: gray2[6]
    },
    "color-bg-success-subdued": {
      value: green2[3]
    },
    "color-bg-primary-subdued-hover": {
      value: gray2[7]
    },
    "color-bg-success-subdued-hover": {
      value: green2[5]
    },
    "color-bg-primary-subdued": {
      value: gray2[8]
    },
    "color-bg-primary-subdued-selected": {
      value: gray2[6]
    },
    "color-bg-critical-strong-active": {
      value: red2[14]
    },
    "color-bg-critical-strong-hover": {
      value: red2[13]
    },
    "color-bg-critical-strong": {
      value: red2[12]
    },
    "color-bg-critical-subdued-active": {
      value: red2[6]
    },
    "color-bg-critical": {
      value: red2[6]
    },
    "color-bg-critical-subdued": {
      value: red2[4]
    },
    "color-bg-critical-subdued-hover": {
      value: red2[5]
    },
    "color-bg-caution-strong": {
      value: yellow2[6]
    },
    "color-bg-caution": {
      value: yellow2[4]
    },
    "color-bg-caution-subdued-active": {
      value: yellow2[4]
    },
    "color-bg-caution-subdued": {
      value: yellow2[2]
    },
    "color-bg-caution-subdued-hover": {
      value: yellow2[3]
    },
    "color-bg-info-strong": {
      value: azure[9]
    },
    "color-bg-info-subdued-active": {
      value: azure[6]
    },
    "color-bg-info": {
      value: azure[4]
    },
    "color-bg-info-subdued": {
      value: azure[3]
    },
    "color-bg-info-subdued-hover": {
      value: azure[4]
    },
    "color-bg-interactive-active": {
      value: gray2[14]
    },
    "color-bg-interactive-hover": {
      value: gray2[15]
    },
    "color-bg-interactive": {
      value: gray2[16]
    },
    "color-bg-interactive-subdued-active": {
      value: gray2[6]
    },
    "color-bg-interactive-subdued-hover": {
      value: gray2[7]
    },
    "color-bg-interactive-subdued": {
      value: gray2[8]
    },
    "color-bg-interactive-selected": {
      value: gray2[6]
    },
    "color-bg-warning": {
      value: orange2[7]
    },
    "color-bg-magic-strong": {
      value: purple2[12]
    },
    "color-bg-magic-hover": {
      value: purple2[7]
    },
    "color-bg-magic-active": {
      value: purple2[8]
    },
    "color-bg-magic": {
      value: purple2[6]
    },
    "color-bg-magic-subdued-hover": {
      value: purple2[4]
    },
    "color-bg-magic-subdued-active": {
      value: purple2[6]
    },
    "color-bg-magic-subdued": {
      value: purple2[3]
    },
    "color-border-input-hover": {
      value: gray2[13]
    },
    "color-border-inverse": {
      value: gray2[13]
    },
    "color-border-strong-hover": {
      value: gray2[11]
    },
    "color-border-input": {
      value: gray2[12]
    },
    "color-border-hover": {
      value: gray2[10]
    },
    "color-border-strong": {
      value: gray2[10]
    },
    "color-border": {
      value: gray2[8]
    },
    "color-border-disabled": {
      value: gray2[7]
    },
    "color-border-subdued": {
      value: gray2[7]
    },
    "color-border-interactive-disabled": {
      value: gray2[7]
    },
    "color-border-primary": {
      value: gray2[8]
    },
    "color-border-success": {
      value: green2[5]
    },
    "color-border-success-subdued": {
      value: green2[5]
    },
    "color-border-critical-active": {
      value: red2[11]
    },
    "color-border-critical-hover": {
      value: red2[10]
    },
    "color-border-critical": {
      value: red2[9]
    },
    "color-border-critical-subdued": {
      value: red2[9]
    },
    "color-border-caution": {
      value: yellow2[5]
    },
    "color-border-caution-subdued": {
      value: yellow2[5]
    },
    "color-border-info": {
      value: azure[9]
    },
    "color-border-info-subdued": {
      value: azure[9]
    },
    "color-border-interactive-active": {
      value: blue2[15]
    },
    "color-border-interactive-hover": {
      value: blue2[14]
    },
    "color-border-interactive": {
      value: blue2[13]
    },
    "color-border-interactive-focus": {
      value: blue2[13]
    },
    "color-border-interactive-subdued": {
      value: blue2[13]
    },
    "color-border-magic-strong": {
      value: purple2[12]
    },
    "color-border-magic": {
      value: purple2[10]
    },
    "color-icon-hover": {
      value: gray2[15]
    },
    "color-icon": {
      value: gray2[14]
    },
    "color-icon-subdued": {
      value: gray2[12]
    },
    "color-icon-disabled": {
      value: gray2[10]
    },
    "color-icon-interactive-disabled": {
      value: gray2[10]
    },
    "color-icon-inverse": {
      value: gray2[8]
    },
    "color-icon-on-color": {
      value: gray2[1]
    },
    "color-icon-primary": {
      value: gray2[16]
    },
    "color-icon-success": {
      value: green2[12]
    },
    "color-icon-critical": {
      value: red2[11]
    },
    "color-icon-caution": {
      value: yellow2[11]
    },
    "color-icon-info": {
      value: azure[11]
    },
    "color-icon-warning": {
      value: orange2[11]
    },
    "color-icon-interactive-active": {
      value: blue2[15]
    },
    "color-icon-interactive-hover": {
      value: blue2[14]
    },
    "color-icon-interactive": {
      value: blue2[13]
    },
    "color-icon-interactive-inverse": {
      value: blue2[8]
    },
    "color-icon-magic": {
      value: purple2[13]
    },
    "color-text": {
      value: gray2[15]
    },
    "color-text-subdued": {
      value: gray2[13]
    },
    "color-text-disabled": {
      value: gray2[11]
    },
    "color-text-interactive-disabled": {
      value: gray2[10]
    },
    "color-text-inverse-subdued": {
      value: gray2[10]
    },
    "color-text-inverse": {
      value: gray2[8]
    },
    "color-text-on-color": {
      value: gray2[1]
    },
    "color-text-success-strong": {
      value: green2[15]
    },
    "color-text-success": {
      value: green2[15]
    },
    "color-text-primary": {
      value: gray2[14]
    },
    "color-text-primary-hover": {
      value: gray2[14]
    },
    "color-text-critical-strong": {
      value: red2[14]
    },
    "color-text-critical-active": {
      value: red2[16]
    },
    "color-text-critical": {
      value: red2[14]
    },
    "color-text-caution-strong": {
      value: yellow2[15]
    },
    "color-text-caution": {
      value: yellow2[15]
    },
    "color-text-info-strong": {
      value: azure[16]
    },
    "color-text-info": {
      value: azure[14]
    },
    "color-text-warning-strong": {
      value: orange2[16]
    },
    "color-text-interactive-active": {
      value: blue2[15]
    },
    "color-text-interactive-hover": {
      value: blue2[14]
    },
    "color-text-interactive": {
      value: blue2[13]
    },
    "color-text-interactive-inverse": {
      value: blue2[8]
    },
    "color-text-magic-strong": {
      value: purple2[15]
    },
    "color-text-magic": {
      value: purple2[14]
    }
  },
  font: {
    // v12.0.0
    "font-size-275": {
      value: size[275]
    },
    "font-size-325": {
      value: size[325]
    },
    "font-size-350": {
      value: size[350]
    },
    "font-size-750": {
      value: size[750]
    },
    "font-size-900": {
      value: size[900]
    },
    "font-size-1000": {
      value: size[1e3]
    },
    "font-line-height-300": {
      value: size[300]
    },
    "font-line-height-400": {
      value: size[400]
    },
    "font-line-height-500": {
      value: size[500]
    },
    "font-line-height-600": {
      value: size[600]
    },
    "font-line-height-700": {
      value: size[700]
    },
    "font-line-height-800": {
      value: size[800]
    },
    "font-line-height-1000": {
      value: size[1e3]
    },
    "font-line-height-1200": {
      value: size[1200]
    },
    // v11.0.0
    "font-family-sans": {
      value: "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif"
    },
    "font-size-500": {
      value: "30px"
    },
    "font-size-600": {
      value: "36px"
    }
  },
  motion: {
    // v11.0.0
    "motion-ease-out": {
      value: "cubic-bezier(0.19, 0.91, 0.38, 1)"
    }
  },
  space: {
    // v12.0.0
    "space-050": {
      value: size["050"]
    },
    "space-100": {
      value: size[100]
    },
    "space-150": {
      value: size[150]
    },
    "space-200": {
      value: size[200]
    },
    "space-300": {
      value: size[300]
    },
    "space-400": {
      value: size[400]
    },
    "space-500": {
      value: size[500]
    },
    "space-600": {
      value: size[600]
    },
    "space-800": {
      value: size[800]
    },
    "space-1000": {
      value: size[1e3]
    },
    "space-1200": {
      value: size[1200]
    },
    "space-1600": {
      value: size[1600]
    },
    "space-2000": {
      value: size[2e3]
    },
    "space-2400": {
      value: size[2400]
    },
    "space-2800": {
      value: size[2800]
    },
    "space-3200": {
      value: size[3200]
    }
  },
  shadow: {
    // v11.0.0
    "shadow-inset-lg": {
      value: "inset -1px 0px 1px rgba(0, 0, 0, 0.2), inset 1px 0px 1px rgba(0, 0, 0, 0.2), inset 0px 2px 1px rgba(0, 0, 0, 0.6)"
    },
    "shadow-inset-md": {
      value: "inset -1px 0px 1px rgba(0, 0, 0, 0.12), inset 1px 0px 1px rgba(0, 0, 0, 0.12), inset 0px 2px 1px rgba(0, 0, 0, 0.2)"
    },
    "shadow-inset-sm": {
      value: "inset 0px 1px 1px rgba(0, 0, 0, 0.15), inset 0px 1px 2px rgba(255, 255, 255, 0.15)"
    },
    "shadow-xs": {
      value: "0px 1px 0px rgba(0, 0, 0, 0.07)"
    },
    "shadow-sm": {
      value: "0px 3px 1px -1px rgba(0, 0, 0, 0.07)"
    },
    "shadow-md": {
      value: "0px 4px 6px -2px rgba(0, 0, 0, 0.2)"
    },
    "shadow-lg": {
      value: "0px 8px 16px -4px rgba(0, 0, 0, 0.22)"
    },
    "shadow-xl": {
      value: "0px 12px 20px -8px rgba(0, 0, 0, 0.24)"
    },
    "shadow-2xl": {
      value: "0px 20px 20px -8px rgba(0, 0, 0, 0.28)"
    }
  }
});
createMetaTheme(metaThemeLightUpliftPartial);

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/index.mjs
var metaThemePartials = {
  light: metaThemeLightPartial,
  "Polaris-Summer-Editions-2023": metaThemeLightUpliftPartial
};
var metaThemeDefaultPartial = metaThemePartials[themeNameDefault];
var metaThemeDefault = createMetaTheme(metaThemeDefaultPartial);

// node_modules/@shopify/polaris-tokens/dist/esm/src/metadata.mjs
var metadata = resolveMetaThemeRefs(metaThemeDefault);

// node_modules/@shopify/polaris-tokens/dist/esm/build/index.mjs
var breakpoints2 = {
  "breakpoints-xs": "0rem",
  "breakpoints-sm": "30.625rem",
  "breakpoints-md": "48rem",
  "breakpoints-lg": "65rem",
  "breakpoints-xl": "90rem"
};
var motion2 = {
  "motion-duration-0": "0ms",
  "motion-duration-50": "50ms",
  "motion-duration-100": "100ms",
  "motion-duration-150": "150ms",
  "motion-duration-200": "200ms",
  "motion-duration-250": "250ms",
  "motion-duration-300": "300ms",
  "motion-duration-350": "350ms",
  "motion-duration-400": "400ms",
  "motion-duration-450": "450ms",
  "motion-duration-500": "500ms",
  "motion-duration-5000": "5000ms",
  "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
  "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
  "motion-ease-out": "cubic-bezier(0, 0, 0.58, 1)",
  "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
  "motion-linear": "cubic-bezier(0, 0, 1, 1)",
  "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
  "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
  "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
  "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
  "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
  "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
};
var space2 = {
  "space-0": "0rem",
  "space-025": "0.0625rem",
  "space-050": "0.125rem",
  "space-100": "0.25rem",
  "space-150": "0.375rem",
  "space-200": "0.5rem",
  "space-300": "0.75rem",
  "space-400": "1rem",
  "space-500": "1.25rem",
  "space-600": "1.5rem",
  "space-800": "2rem",
  "space-1000": "2.5rem",
  "space-1200": "3rem",
  "space-1600": "4rem",
  "space-2000": "5rem",
  "space-2400": "6rem",
  "space-2800": "7rem",
  "space-3200": "8rem",
  "space-button-group-gap": "0.5rem",
  "space-card-gap": "1rem",
  "space-card-padding": "1rem",
  "space-table-cell-padding": "0.375rem",
  "space-05": "0.125rem",
  "space-1": "0.25rem",
  "space-1_5-experimental": "0.375rem",
  "space-2": "0.5rem",
  "space-3": "0.75rem",
  "space-4": "1rem",
  "space-5": "1.25rem",
  "space-6": "1.5rem",
  "space-8": "2rem",
  "space-10": "2.5rem",
  "space-12": "3rem",
  "space-16": "4rem",
  "space-20": "5rem",
  "space-24": "6rem",
  "space-28": "7rem",
  "space-32": "8rem"
};
var zIndex2 = {
  "z-index-1": "100",
  "z-index-2": "400",
  "z-index-3": "510",
  "z-index-4": "512",
  "z-index-5": "513",
  "z-index-6": "514",
  "z-index-7": "515",
  "z-index-8": "516",
  "z-index-9": "517",
  "z-index-10": "518",
  "z-index-11": "519",
  "z-index-12": "520"
};
var tokens = {
  "border": {
    "border-radius-0": "0rem",
    "border-radius-050": "0.125rem",
    "border-radius-100": "0.25rem",
    "border-radius-150": "0.375rem",
    "border-radius-200": "0.5rem",
    "border-radius-300": "0.75rem",
    "border-radius-400": "1rem",
    "border-radius-500": "1.25rem",
    "border-radius-750": "1.875rem",
    "border-radius-full": "624.9375rem",
    "border-radius-0-experimental": "0rem",
    "border-radius-05": "0.125rem",
    "border-radius-1": "0.25rem",
    "border-radius-2": "0.5rem",
    "border-radius-3": "0.75rem",
    "border-radius-4": "1rem",
    "border-radius-5": "1.25rem",
    "border-radius-6": "1.875rem",
    "border-radius-1_5-experimental": "0.375rem",
    "border-width-0165": "0.04125rem",
    "border-width-025": "0.0625rem",
    "border-width-050": "0.125rem",
    "border-width-100": "0.25rem",
    "border-width-1": "0.0625rem",
    "border-width-2": "0.125rem",
    "border-width-3": "0.1875rem",
    "border-width-4": "0.25rem",
    "border-width-5": "0.3125rem",
    "border-width-1-experimental": "0.04125rem",
    "border-width-2-experimental": "0.0625rem"
  },
  "breakpoints": {
    "breakpoints-xs": "0rem",
    "breakpoints-sm": "30.625rem",
    "breakpoints-md": "48rem",
    "breakpoints-lg": "65rem",
    "breakpoints-xl": "90rem"
  },
  "color": {
    "color-border-inverse-active": "rgba(227, 227, 227, 1)",
    "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
    "color-border-warning": "rgba(255, 200, 121, 1)",
    "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
    "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
    "color-bg-fill-active": "rgba(247, 247, 247, 1)",
    "color-bg-fill-brand-selected": "rgba(48, 48, 48, 1)",
    "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
    "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
    "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
    "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
    "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
    "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
    "color-bg-fill-hover": "rgba(250, 250, 250, 1)",
    "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
    "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
    "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
    "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
    "color-bg-fill-selected": "rgba(204, 204, 204, 1)",
    "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
    "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
    "color-bg-fill-transparent-selected": "rgba(0, 0, 0, 0.06)",
    "color-bg-fill-transparent": "rgba(0, 0, 0, 0)",
    "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
    "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
    "color-bg-fill": "rgba(255, 255, 255, 1)",
    "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
    "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
    "color-text-link-active": "rgba(0, 46, 106, 1)",
    "color-text-link-hover": "rgba(0, 66, 153, 1)",
    "color-text-link": "rgba(0, 91, 211, 1)",
    "color-nav-bg": "rgba(235, 235, 235, 1)",
    "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
    "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
    "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
    "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
    "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
    "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
    "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
    "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
    "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
    "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
    "color-bg-surface-magic-active": "rgba(228, 222, 255, 1)",
    "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
    "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
    "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
    "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
    "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
    "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
    "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
    "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
    "color-text-brand-on-bg-fill": "rgba(255, 255, 255, 1)",
    "color-text-caution-active": "rgba(31, 28, 0, 1)",
    "color-text-caution-hover": "rgba(51, 46, 0, 1)",
    "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
    "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
    "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
    "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
    "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
    "color-text-info-active": "rgba(0, 33, 51, 1)",
    "color-text-info-hover": "rgba(0, 58, 90, 1)",
    "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
    "color-text-success-active": "rgba(9, 42, 27, 1)",
    "color-text-success-hover": "rgba(8, 61, 37, 1)",
    "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
    "color-text-warning-active": "rgba(37, 26, 0, 1)",
    "color-text-warning-hover": "rgba(65, 45, 0, 1)",
    "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
    "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
    "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
    "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
    "color-bg-surface": "rgba(255, 255, 255, 1)",
    "color-bg-surface-hover": "rgba(247, 247, 247, 1)",
    "color-bg-surface-active": "rgba(243, 243, 243, 1)",
    "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
    "color-bg-surface-secondary": "rgba(249, 250, 251, 1)",
    "color-bg-surface-secondary-hover": "rgba(241, 242, 244, 1)",
    "color-bg-surface-secondary-active": "rgba(235, 236, 239, 1)",
    "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
    "color-bg-fill-tertiary": "rgba(221, 224, 228, 1)",
    "color-bg-fill-tertiary-hover": "rgba(202, 206, 211, 1)",
    "color-bg-fill-tertiary-active": "rgba(202, 206, 211, 1)",
    "color-input-bg-surface": "rgba(255, 255, 255, 1)",
    "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
    "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
    "color-bg-fill-brand": "rgba(48, 48, 48, 1)",
    "color-bg-fill-brand-hover": "rgba(26, 26, 26, 1)",
    "color-bg-fill-brand-active": "rgba(26, 26, 26, 1)",
    "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
    "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
    "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
    "color-bg-surface-brand-selected": "rgba(241, 241, 241, 1)",
    "color-bg-surface-selected": "rgba(235, 236, 239, 1)",
    "color-bg-fill-success": "rgba(22, 166, 121, 1)",
    "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
    "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
    "color-bg-fill-success-secondary": "rgba(161, 237, 208, 1)",
    "color-bg-surface-success": "rgba(224, 248, 238, 1)",
    "color-bg-surface-success-hover": "rgba(240, 253, 248, 1)",
    "color-bg-surface-success-active": "rgba(192, 242, 221, 1)",
    "color-bg-fill-critical": "rgba(197, 40, 12, 1)",
    "color-bg-fill-critical-hover": "rgba(159, 32, 10, 1)",
    "color-bg-fill-critical-active": "rgba(115, 24, 7, 1)",
    "color-bg-fill-critical-secondary": "rgba(251, 197, 188, 1)",
    "color-bg-surface-critical": "rgba(253, 226, 221, 1)",
    "color-bg-surface-critical-hover": "rgba(254, 243, 241, 1)",
    "color-bg-surface-critical-active": "rgba(251, 197, 188, 1)",
    "color-bg-fill-caution": "rgba(216, 155, 13, 1)",
    "color-bg-fill-caution-secondary": "rgba(248, 217, 144, 1)",
    "color-bg-surface-caution": "rgba(252, 240, 212, 1)",
    "color-bg-surface-caution-hover": "rgba(254, 248, 236, 1)",
    "color-bg-surface-caution-active": "rgba(250, 229, 178, 1)",
    "color-bg-fill-info": "rgba(42, 172, 187, 1)",
    "color-bg-fill-info-secondary": "rgba(184, 233, 239, 1)",
    "color-bg-surface-info": "rgba(222, 245, 247, 1)",
    "color-bg-surface-info-hover": "rgba(238, 250, 251, 1)",
    "color-bg-surface-info-active": "rgba(184, 233, 239, 1)",
    "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
    "color-bg-fill-warning-secondary": "rgba(250, 201, 168, 1)",
    "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
    "color-bg-fill-magic": "rgba(121, 69, 227, 1)",
    "color-bg-fill-magic-secondary": "rgba(236, 227, 253, 1)",
    "color-bg-fill-magic-secondary-hover": "rgba(226, 214, 250, 1)",
    "color-bg-fill-magic-secondary-active": "rgba(203, 180, 248, 1)",
    "color-bg-surface-magic": "rgba(243, 241, 255, 1)",
    "color-bg-surface-magic-hover": "rgba(236, 227, 253, 1)",
    "color-bg-fill-secondary": "rgba(241, 242, 244, 1)",
    "color-bg-fill-inverse": "rgba(97, 106, 117, 1)",
    "color-bg-fill-inverse-hover": "rgba(97, 106, 117, 1)",
    "color-bg-fill-inverse-active": "rgba(135, 144, 155, 1)",
    "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
    "color-bg-fill-transparent-hover": "rgba(0, 0, 0, 0.05)",
    "color-bg-fill-transparent-active": "rgba(0, 0, 0, 0.06)",
    "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
    "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
    "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
    "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
    "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
    "color-avatar-one-bg-fill": "rgba(251, 207, 251, 1)",
    "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
    "color-avatar-three-bg-fill": "rgba(146, 237, 222, 1)",
    "color-avatar-four-bg-fill": "rgba(192, 225, 255, 1)",
    "color-avatar-five-bg-fill": "rgba(254, 209, 221, 1)",
    "color-text-secondary": "rgba(97, 106, 117, 1)",
    "color-text-emphasis": "rgba(36, 99, 188, 1)",
    "color-text-emphasis-hover": "rgba(20, 73, 149, 1)",
    "color-text-emphasis-active": "rgba(14, 53, 108, 1)",
    "color-text-brand": "rgba(0, 122, 92, 1)",
    "color-text-brand-hover": "rgba(18, 84, 67, 1)",
    "color-text-critical-hover": "rgba(95, 21, 7, 1)",
    "color-text-info-on-bg-fill": "rgba(16, 65, 71, 1)",
    "color-text-warning": "rgba(94, 66, 0, 1)",
    "color-text-inverse-secondary": "rgba(171, 177, 186, 1)",
    "color-text-link-inverse": "rgba(197, 208, 255, 1)",
    "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
    "color-avatar-one-text-on-bg-fill": "rgba(121, 26, 121, 1)",
    "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
    "color-avatar-three-text-on-bg-fill": "rgba(9, 83, 70, 1)",
    "color-avatar-four-text-on-bg-fill": "rgba(0, 82, 124, 1)",
    "color-avatar-five-text-on-bg-fill": "rgba(141, 4, 72, 1)",
    "color-icon-secondary": "rgba(135, 144, 155, 1)",
    "color-icon-emphasis": "rgba(36, 99, 188, 1)",
    "color-icon-emphasis-hover": "rgba(20, 73, 149, 1)",
    "color-icon-emphasis-active": "rgba(14, 53, 108, 1)",
    "color-icon-brand": "rgba(0, 122, 92, 1)",
    "color-border-secondary": "rgba(221, 224, 228, 1)",
    "color-border-tertiary": "rgba(204, 204, 204, 1)",
    "color-input-border": "rgba(171, 177, 186, 1)",
    "color-input-border-hover": "rgba(97, 106, 117, 1)",
    "color-input-border-active": "rgba(26, 26, 26, 1)",
    "color-border-emphasis": "rgba(0, 91, 211, 1)",
    "color-border-emphasis-hover": "rgba(20, 73, 149, 1)",
    "color-border-emphasis-active": "rgba(14, 53, 108, 1)",
    "color-border-focus": "rgba(62, 125, 213, 1)",
    "color-border-brand": "rgba(0, 122, 92, 1)",
    "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
    "color-border-magic-secondary": "rgba(121, 69, 227, 1)",
    "color-bg-inverse": "rgba(31, 33, 36, 1)",
    "color-bg-inset-strong": "rgba(97, 106, 117, 1)",
    "color-bg-inverse-hover": "rgba(97, 106, 117, 1)",
    "color-bg-inverse-active": "rgba(135, 144, 155, 1)",
    "color-bg-strong-hover": "rgba(202, 206, 211, 1)",
    "color-bg-strong-active": "rgba(202, 206, 211, 1)",
    "color-bg-strong": "rgba(221, 224, 228, 1)",
    "color-bg-subdued-active": "rgba(235, 236, 239, 1)",
    "color-bg-disabled": "rgba(235, 236, 239, 1)",
    "color-bg-interactive-disabled": "rgba(235, 236, 239, 1)",
    "color-bg-app": "rgba(241, 242, 244, 1)",
    "color-bg-app-active": "rgba(221, 224, 228, 1)",
    "color-bg-app-hover": "rgba(235, 236, 239, 1)",
    "color-bg-app-selected": "rgba(235, 236, 239, 1)",
    "color-bg-active": "rgba(235, 236, 239, 1)",
    "color-bg-subdued-hover": "rgba(241, 242, 244, 1)",
    "color-bg-inset": "rgba(241, 242, 244, 1)",
    "color-bg-hover": "rgba(241, 242, 244, 1)",
    "color-bg-subdued": "rgba(249, 250, 251, 1)",
    "color-bg-input": "rgba(255, 255, 255, 1)",
    "color-bg": "rgba(255, 255, 255, 1)",
    "color-bg-primary-active": "rgba(12, 59, 47, 1)",
    "color-bg-primary-hover": "rgba(18, 84, 67, 1)",
    "color-bg-primary": "rgba(0, 122, 92, 1)",
    "color-bg-success-strong": "rgba(22, 166, 121, 1)",
    "color-bg-success": "rgba(161, 237, 208, 1)",
    "color-bg-primary-subdued-active": "rgba(192, 242, 221, 1)",
    "color-bg-success-subdued-active": "rgba(192, 242, 221, 1)",
    "color-bg-success-subdued": "rgba(224, 248, 238, 1)",
    "color-bg-primary-subdued-hover": "rgba(224, 248, 238, 1)",
    "color-bg-success-subdued-hover": "rgba(240, 253, 248, 1)",
    "color-bg-primary-subdued": "rgba(240, 253, 248, 1)",
    "color-bg-primary-subdued-selected": "rgba(240, 253, 248, 1)",
    "color-bg-critical-strong-active": "rgba(115, 24, 7, 1)",
    "color-bg-critical-strong-hover": "rgba(159, 32, 10, 1)",
    "color-bg-critical-strong": "rgba(197, 40, 12, 1)",
    "color-bg-critical-subdued-active": "rgba(251, 197, 188, 1)",
    "color-bg-critical": "rgba(251, 197, 188, 1)",
    "color-bg-critical-subdued": "rgba(253, 226, 221, 1)",
    "color-bg-critical-subdued-hover": "rgba(254, 243, 241, 1)",
    "color-bg-caution-strong": "rgba(216, 155, 13, 1)",
    "color-bg-caution": "rgba(248, 217, 144, 1)",
    "color-bg-caution-subdued-active": "rgba(250, 229, 178, 1)",
    "color-bg-caution-subdued": "rgba(252, 240, 212, 1)",
    "color-bg-caution-subdued-hover": "rgba(254, 248, 236, 1)",
    "color-bg-info-strong": "rgba(42, 172, 187, 1)",
    "color-bg-info-subdued-active": "rgba(184, 233, 239, 1)",
    "color-bg-info": "rgba(184, 233, 239, 1)",
    "color-bg-info-subdued": "rgba(222, 245, 247, 1)",
    "color-bg-info-subdued-hover": "rgba(238, 250, 251, 1)",
    "color-bg-interactive-active": "rgba(14, 53, 108, 1)",
    "color-bg-interactive-hover": "rgba(20, 73, 149, 1)",
    "color-bg-interactive": "rgba(36, 99, 188, 1)",
    "color-bg-interactive-subdued-active": "rgba(187, 212, 247, 1)",
    "color-bg-interactive-subdued-hover": "rgba(232, 240, 253, 1)",
    "color-bg-interactive-subdued": "rgba(240, 245, 253, 1)",
    "color-bg-interactive-selected": "rgba(240, 245, 253, 1)",
    "color-bg-warning": "rgba(250, 201, 168, 1)",
    "color-bg-magic-strong": "rgba(121, 69, 227, 1)",
    "color-bg-magic-hover": "rgba(226, 214, 250, 1)",
    "color-bg-magic-active": "rgba(203, 180, 248, 1)",
    "color-bg-magic": "rgba(236, 227, 253, 1)",
    "color-bg-magic-subdued-hover": "rgba(236, 227, 253, 1)",
    "color-bg-magic-subdued-active": "rgba(226, 214, 250, 1)",
    "color-bg-magic-subdued": "rgba(242, 237, 253, 1)",
    "color-border-input-hover": "rgba(97, 106, 117, 1)",
    "color-border-inverse": "rgba(97, 106, 117, 1)",
    "color-border-strong-hover": "rgba(135, 144, 155, 1)",
    "color-border-input": "rgba(171, 177, 186, 1)",
    "color-border-hover": "rgba(171, 177, 186, 1)",
    "color-border-strong": "rgba(171, 177, 186, 1)",
    "color-border": "rgba(202, 206, 211, 1)",
    "color-border-disabled": "rgba(221, 224, 228, 1)",
    "color-border-subdued": "rgba(221, 224, 228, 1)",
    "color-border-interactive-disabled": "rgba(221, 224, 228, 1)",
    "color-border-primary": "rgba(0, 122, 92, 1)",
    "color-border-success": "rgba(22, 166, 121, 1)",
    "color-border-success-subdued": "rgba(80, 220, 169, 1)",
    "color-border-critical-active": "rgba(67, 14, 4, 1)",
    "color-border-critical-hover": "rgba(115, 24, 7, 1)",
    "color-border-critical": "rgba(197, 40, 12, 1)",
    "color-border-critical-subdued": "rgba(245, 107, 82, 1)",
    "color-border-caution": "rgba(216, 155, 13, 1)",
    "color-border-caution-subdued": "rgba(245, 196, 82, 1)",
    "color-border-info": "rgba(59, 195, 211, 1)",
    "color-border-info-subdued": "rgba(109, 211, 222, 1)",
    "color-border-interactive-active": "rgba(14, 53, 108, 1)",
    "color-border-interactive-hover": "rgba(20, 73, 149, 1)",
    "color-border-interactive": "rgba(62, 125, 213, 1)",
    "color-border-interactive-focus": "rgba(62, 125, 213, 1)",
    "color-border-interactive-subdued": "rgba(187, 212, 247, 1)",
    "color-border-magic-strong": "rgba(121, 69, 227, 1)",
    "color-border-magic": "rgba(173, 139, 241, 1)",
    "color-icon-hover": "rgba(31, 33, 36, 1)",
    "color-icon": "rgba(97, 106, 117, 1)",
    "color-icon-active": "rgba(31, 33, 36, 1)",
    "color-icon-subdued": "rgba(135, 144, 155, 1)",
    "color-icon-disabled": "rgba(171, 177, 186, 1)",
    "color-icon-interactive-disabled": "rgba(171, 177, 186, 1)",
    "color-icon-inverse": "rgba(221, 224, 228, 1)",
    "color-icon-on-color": "rgba(255, 255, 255, 1)",
    "color-icon-primary": "rgba(0, 122, 92, 1)",
    "color-icon-success": "rgba(22, 166, 121, 1)",
    "color-icon-critical": "rgba(197, 40, 12, 1)",
    "color-icon-caution": "rgba(183, 126, 11, 1)",
    "color-icon-info": "rgba(42, 172, 187, 1)",
    "color-icon-warning": "rgba(242, 117, 34, 1)",
    "color-icon-interactive-active": "rgba(14, 53, 108, 1)",
    "color-icon-interactive-hover": "rgba(20, 73, 149, 1)",
    "color-icon-interactive": "rgba(36, 99, 188, 1)",
    "color-icon-interactive-inverse": "rgba(102, 153, 225, 1)",
    "color-icon-magic": "rgba(121, 69, 227, 1)",
    "color-text": "rgba(31, 33, 36, 1)",
    "color-text-subdued": "rgba(97, 106, 117, 1)",
    "color-text-disabled": "rgba(135, 144, 155, 1)",
    "color-text-interactive-disabled": "rgba(135, 144, 155, 1)",
    "color-text-inverse-subdued": "rgba(171, 177, 186, 1)",
    "color-text-inverse": "rgba(241, 242, 244, 1)",
    "color-text-on-color": "rgba(255, 255, 255, 1)",
    "color-text-success-strong": "rgba(12, 59, 47, 1)",
    "color-text-success": "rgba(0, 122, 92, 1)",
    "color-text-primary": "rgba(0, 122, 92, 1)",
    "color-text-primary-hover": "rgba(18, 84, 67, 1)",
    "color-text-critical-strong": "rgba(67, 14, 4, 1)",
    "color-text-critical-active": "rgba(115, 24, 7, 1)",
    "color-text-critical": "rgba(197, 40, 12, 1)",
    "color-text-caution-strong": "rgba(77, 46, 5, 1)",
    "color-text-caution": "rgba(135, 92, 8, 1)",
    "color-text-info-strong": "rgba(16, 65, 71, 1)",
    "color-text-info": "rgba(32, 130, 141, 1)",
    "color-text-warning-strong": "rgba(77, 36, 5, 1)",
    "color-text-interactive-active": "rgba(14, 53, 108, 1)",
    "color-text-interactive-hover": "rgba(20, 73, 149, 1)",
    "color-text-interactive": "rgba(36, 99, 188, 1)",
    "color-text-interactive-inverse": "rgba(102, 153, 225, 1)",
    "color-text-magic-strong": "rgba(49, 13, 120, 1)",
    "color-text-magic": "rgba(90, 36, 205, 1)",
    "color-bg-backdrop-experimental": "rgba(0, 0, 0, 0.71)",
    "color-bg-primary-disabled-experimental": "rgba(212, 212, 212, 1)",
    "color-bg-secondary-experimental": "rgba(243, 243, 243, 1)",
    "color-bg-input-hover-experimental": "rgba(250, 250, 250, 1)",
    "color-border-input-active-experimental": "rgba(26, 26, 26, 1)",
    "color-border-critical-strong-experimental": "rgba(142, 31, 11, 1)",
    "color-bg-input-active-experimental": "rgba(247, 247, 247, 1)",
    "color-bg-transparent-experimental": "rgba(0, 0, 0, 0)",
    "color-bg-transparent-subdued-experimental": "rgba(0, 0, 0, 0.06)",
    "color-bg-transparent-hover-experimental": "rgba(0, 0, 0, 0.05)",
    "color-bg-transparent-active-experimental": "rgba(0, 0, 0, 0.06)",
    "color-bg-transparent-disabled-experimental": "rgba(0, 0, 0, 0.05)",
    "color-bg-transparent-secondary-disabled-experimental": "rgba(0, 0, 0, 0.08)",
    "color-bg-transparent-primary-disabled-experimental": "rgba(0, 0, 0, 0.17)",
    "color-bg-transparent-primary-experimental": "rgba(0, 0, 0, 0.62)",
    "color-bg-success-strong-hover-experimental": "rgba(19, 111, 69, 1)",
    "color-bg-success-strong-active-experimental": "rgba(12, 81, 50, 1)",
    "color-bg-warning-subdued-experimental": "rgba(255, 241, 227, 1)",
    "color-bg-warning-strong-experimental": "rgba(255, 184, 0, 1)",
    "color-text-warning-experimental": "rgba(65, 45, 0, 1)",
    "color-text-critical-hover-experimental": "rgba(95, 21, 7, 1)",
    "color-icon-info-strong-experimental": "rgba(0, 82, 124, 1)",
    "color-icon-warning-strong-experimental": "rgba(124, 88, 0, 1)",
    "color-icon-success-strong-experimental": "rgba(12, 81, 50, 1)",
    "color-icon-critical-strong-experimental": "rgba(142, 31, 11, 1)",
    "color-icon-critical-strong-hover-experimental": "rgba(95, 21, 7, 1)",
    "color-icon-critical-strong-active-experimental": "rgba(47, 10, 4, 1)",
    "color-avatar-background-experimental": "rgba(181, 181, 181, 1)",
    "color-avatar-color-experimental": "rgba(255, 255, 255, 1)",
    "color-avatar-style-one-background-experimental": "rgba(251, 207, 251, 1)",
    "color-avatar-style-one-color-experimental": "rgba(121, 26, 121, 1)",
    "color-avatar-style-two-background-experimental": "rgba(56, 250, 163, 1)",
    "color-avatar-style-two-color-experimental": "rgba(12, 81, 50, 1)",
    "color-avatar-style-three-background-experimental": "rgba(146, 237, 222, 1)",
    "color-avatar-style-three-color-experimental": "rgba(9, 83, 70, 1)",
    "color-avatar-style-four-background-experimental": "rgba(192, 225, 255, 1)",
    "color-avatar-style-four-color-experimental": "rgba(0, 82, 124, 1)",
    "color-avatar-style-five-background-experimental": "rgba(254, 209, 221, 1)",
    "color-avatar-style-five-color-experimental": "rgba(141, 4, 72, 1)"
  },
  "font": {
    "font-family-sans": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
    "font-size-275": "0.6875rem",
    "font-size-325": "0.8125rem",
    "font-size-350": "0.875rem",
    "font-size-750": "1.75rem",
    "font-size-900": "2rem",
    "font-size-1000": "2.5rem",
    "font-size-70-experimental": "0.6875rem",
    "font-size-75": "0.75rem",
    "font-size-80-experimental": "0.8125rem",
    "font-size-100": "0.875rem",
    "font-size-200": "1rem",
    "font-size-300": "1.25rem",
    "font-size-400": "1.5rem",
    "font-size-500": "1.75rem",
    "font-size-600": "2rem",
    "font-size-700": "2.5rem",
    "font-weight-regular": "400",
    "font-weight-medium": "500",
    "font-weight-semibold": "600",
    "font-weight-bold": "700",
    "font-letter-spacing-densest": "-0.03375rem",
    "font-letter-spacing-denser": "-0.01875rem",
    "font-letter-spacing-dense": "-0.0125rem",
    "font-letter-spacing-normal": "0rem",
    "font-line-height-300": "0.75rem",
    "font-line-height-400": "1rem",
    "font-line-height-500": "1.25rem",
    "font-line-height-600": "1.5rem",
    "font-line-height-700": "1.75rem",
    "font-line-height-800": "2rem",
    "font-line-height-1000": "2.5rem",
    "font-line-height-1200": "3rem",
    "font-line-height-075-experimental": "0.75rem",
    "font-line-height-1": "1rem",
    "font-line-height-2": "1.25rem",
    "font-line-height-3": "1.5rem",
    "font-line-height-4": "1.75rem",
    "font-line-height-5": "2rem",
    "font-line-height-6": "2.5rem",
    "font-line-height-7": "3rem"
  },
  "height": {
    "height-0": "0rem",
    "height-025": "0.0625rem",
    "height-050": "0.125rem",
    "height-100": "0.25rem",
    "height-150": "0.375rem",
    "height-200": "0.5rem",
    "height-300": "0.75rem",
    "height-400": "1rem",
    "height-500": "1.25rem",
    "height-600": "1.5rem",
    "height-700": "1.75rem",
    "height-800": "2rem",
    "height-900": "2.25rem",
    "height-1000": "2.5rem",
    "height-1200": "3rem",
    "height-1600": "4rem",
    "height-2000": "5rem",
    "height-2400": "6rem",
    "height-2800": "7rem",
    "height-3200": "8rem"
  },
  "motion": {
    "motion-duration-0": "0ms",
    "motion-duration-50": "50ms",
    "motion-duration-100": "100ms",
    "motion-duration-150": "150ms",
    "motion-duration-200": "200ms",
    "motion-duration-250": "250ms",
    "motion-duration-300": "300ms",
    "motion-duration-350": "350ms",
    "motion-duration-400": "400ms",
    "motion-duration-450": "450ms",
    "motion-duration-500": "500ms",
    "motion-duration-5000": "5000ms",
    "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
    "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
    "motion-ease-out": "cubic-bezier(0, 0, 0.58, 1)",
    "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
    "motion-linear": "cubic-bezier(0, 0, 1, 1)",
    "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
    "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
    "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
    "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
    "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
    "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
  },
  "shadow": {
    "shadow-0": "none",
    "shadow-100": "0rem 0rem 0.125rem rgba(31, 33, 36, 0.24)",
    "shadow-200": "0rem 0.0625rem 0.0625rem rgba(31, 33, 36, 0.1)",
    "shadow-300": "0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.1), 0rem 0.0625rem 0.375rem rgba(31, 33, 36, 0.05)",
    "shadow-400": "0rem 0.25rem 0.75rem rgba(31, 33, 36, 0.2), 0rem 0.125rem 0.375rem rgba(31, 33, 36, 0.05)",
    "shadow-500": "0rem 0.25rem 1.125rem -0.125rem rgba(31, 33, 36, 0.08), 0rem 0.75rem 1.125rem -0.125rem rgba(31, 33, 36, 0.15)",
    "shadow-600": "0rem 2rem 2rem rgba(31, 33, 36, 0.15), 0rem 2rem 3.5rem -0.125rem rgba(31, 33, 36, 0.16)",
    "shadow-bevel-100": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
    "shadow-inset-100": "inset 0rem 0rem 0.1875rem rgba(31, 33, 36, 0.56)",
    "shadow-inset-200": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
    "shadow-button": "inset 0rem -0.0625rem 0rem #B5B5B5, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
    "shadow-button-hover": "inset 0rem -0.0625rem 0rem #CCCCCC, inset 0.0625rem 0rem 0rem #EBEBEB, inset -0.0625rem 0rem 0rem #EBEBEB, inset 0rem 0.0625rem 0rem #EBEBEB",
    "shadow-button-inset": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
    "shadow-button-primary": "0rem 0.125rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.0625rem 0rem 0.0625rem #000 inset, 0rem 0.0625rem 0rem 0rem #000 inset",
    "shadow-button-primary-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0rem 0rem 0.03125rem #1A1A1A",
    "shadow-button-primary-inset": "0rem 0.1875rem 0rem 0rem #000 inset",
    "shadow-button-primary-critical": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
    "shadow-button-primary-critical-hover": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
    "shadow-button-primary-critical-inset": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
    "shadow-button-primary-success": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
    "shadow-button-primary-success-hover": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
    "shadow-button-primary-success-inset": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
    "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset",
    "shadow-inset-lg": "inset 0rem 0rem 0.4375rem 0.125rem rgba(31, 33, 36, 0.18)",
    "shadow-inset-md": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
    "shadow-inset-sm": "inset 0rem 0rem 0.1875rem rgba(31, 33, 36, 0.56)",
    "shadow-none": "none",
    "shadow-xs": "0rem 0rem 0.125rem rgba(31, 33, 36, 0.24)",
    "shadow-sm": "0rem 0.0625rem 0.0625rem rgba(31, 33, 36, 0.1)",
    "shadow-md": "0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.1), 0rem 0.0625rem 0.375rem rgba(31, 33, 36, 0.05)",
    "shadow-lg": "0rem 0.25rem 0.75rem rgba(31, 33, 36, 0.2), 0rem 0.125rem 0.375rem rgba(31, 33, 36, 0.05)",
    "shadow-xl": "0rem 0.25rem 1.125rem -0.125rem rgba(31, 33, 36, 0.08), 0rem 0.75rem 1.125rem -0.125rem rgba(31, 33, 36, 0.15)",
    "shadow-2xl": "0rem 2rem 2rem rgba(31, 33, 36, 0.15), 0rem 2rem 3.5rem -0.125rem rgba(31, 33, 36, 0.16)",
    "shadow-bevel-experimental": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
    "shadow-card-sm-experimental": "0rem 0.125rem 0rem rgba(0, 0, 0, 0.07), 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.07), 0.0625rem 0rem 0rem #E3E3E3, -0.0625rem 0rem 0rem #E3E3E3, 0rem -0.0625rem 0rem #E3E3E3",
    "shadow-card-md-experimental": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(0, 0, 0, 0.07),  0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.16),  0.0625rem 0rem 0rem 0rem rgba(227, 227, 227, 1),  -0.0625rem 0rem 0rem 0rem rgba(227, 227, 227, 1),  0rem 0.0625rem 0rem 0rem rgba(227, 227, 227, 1)",
    "shadow-card-lg-experimental": "0rem 0.25rem 0.375rem -0.125rem rgba(0, 0, 0, 0.2), inset 0rem -0.0625rem 0rem #D4D4D4, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
    "shadow-button-experimental": "inset 0rem -0.0625rem 0rem #B5B5B5, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
    "shadow-button-hover-experimental": "inset 0rem -0.0625rem 0rem #cccccc, inset 0.0625rem 0rem 0rem #ebebeb, inset -0.0625rem 0rem 0rem #ebebeb, inset 0rem 0.0625rem 0rem #ebebeb",
    "shadow-button-disabled-experimental": "inset 0rem 0rem 0rem 0.0625rem rgba(227, 227, 227, 1)",
    "shadow-button-primary-strong-inset-experimental": "0rem 0.1875rem 0rem 0rem #000 inset",
    "shadow-button-primary-strong-hover-experimental": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0rem 0rem 0.03125rem #1A1A1A",
    "shadow-button-primary-strong-experimental": "0rem 0.125rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.0625rem 0rem 0.0625rem #000 inset, 0rem 0.0625rem 0rem 0rem #000 inset",
    "shadow-button-primary-experimental": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
    "shadow-button-primary-hover-experimental": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
    "shadow-button-inset-experimental": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
    "shadow-border-inset-experimental": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
  },
  "space": {
    "space-0": "0rem",
    "space-025": "0.0625rem",
    "space-050": "0.125rem",
    "space-100": "0.25rem",
    "space-150": "0.375rem",
    "space-200": "0.5rem",
    "space-300": "0.75rem",
    "space-400": "1rem",
    "space-500": "1.25rem",
    "space-600": "1.5rem",
    "space-800": "2rem",
    "space-1000": "2.5rem",
    "space-1200": "3rem",
    "space-1600": "4rem",
    "space-2000": "5rem",
    "space-2400": "6rem",
    "space-2800": "7rem",
    "space-3200": "8rem",
    "space-button-group-gap": "0.5rem",
    "space-card-gap": "1rem",
    "space-card-padding": "1rem",
    "space-table-cell-padding": "0.375rem",
    "space-05": "0.125rem",
    "space-1": "0.25rem",
    "space-1_5-experimental": "0.375rem",
    "space-2": "0.5rem",
    "space-3": "0.75rem",
    "space-4": "1rem",
    "space-5": "1.25rem",
    "space-6": "1.5rem",
    "space-8": "2rem",
    "space-10": "2.5rem",
    "space-12": "3rem",
    "space-16": "4rem",
    "space-20": "5rem",
    "space-24": "6rem",
    "space-28": "7rem",
    "space-32": "8rem"
  },
  "text": {
    "text-heading-3xl-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-heading-3xl-font-size": "2rem",
    "text-heading-3xl-font-weight": "700",
    "text-heading-3xl-font-letter-spacing": "-0.03375rem",
    "text-heading-3xl-font-line-height": "3rem",
    "text-heading-2xl-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-heading-2xl-font-size": "1.75rem",
    "text-heading-2xl-font-weight": "700",
    "text-heading-2xl-font-letter-spacing": "-0.01875rem",
    "text-heading-2xl-font-line-height": "2.5rem",
    "text-heading-xl-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-heading-xl-font-size": "2rem",
    "text-heading-xl-font-weight": "700",
    "text-heading-xl-font-letter-spacing": "-0.0125rem",
    "text-heading-xl-font-line-height": "2rem",
    "text-heading-lg-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-heading-lg-font-size": "1.75rem",
    "text-heading-lg-font-weight": "600",
    "text-heading-lg-font-letter-spacing": "-0.0125rem",
    "text-heading-lg-font-line-height": "1.5rem",
    "text-heading-md-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-heading-md-font-size": "0.875rem",
    "text-heading-md-font-weight": "600",
    "text-heading-md-font-letter-spacing": "0rem",
    "text-heading-md-font-line-height": "1.25rem",
    "text-heading-sm-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-heading-sm-font-size": "0.8125rem",
    "text-heading-sm-font-weight": "600",
    "text-heading-sm-font-letter-spacing": "0rem",
    "text-heading-sm-font-line-height": "1.25rem",
    "text-body-lg-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-body-lg-font-size": "0.875rem",
    "text-body-lg-font-weight": "400",
    "text-body-lg-font-letter-spacing": "0rem",
    "text-body-lg-font-line-height": "1.25rem",
    "text-body-md-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-body-md-font-size": "0.8125rem",
    "text-body-md-font-weight": "400",
    "text-body-md-font-letter-spacing": "0rem",
    "text-body-md-font-line-height": "1.25rem",
    "text-body-sm-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-body-sm-font-size": "1.25rem",
    "text-body-sm-font-weight": "400",
    "text-body-sm-font-letter-spacing": "0rem",
    "text-body-sm-font-line-height": "1rem",
    "text-body-xs-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
    "text-body-xs-font-size": "0.6875rem",
    "text-body-xs-font-weight": "400",
    "text-body-xs-font-letter-spacing": "0rem",
    "text-body-xs-font-line-height": "0.75rem"
  },
  "width": {
    "width-0": "0rem",
    "width-025": "0.0625rem",
    "width-050": "0.125rem",
    "width-100": "0.25rem",
    "width-150": "0.375rem",
    "width-200": "0.5rem",
    "width-300": "0.75rem",
    "width-400": "1rem",
    "width-500": "1.25rem",
    "width-600": "1.5rem",
    "width-700": "1.75rem",
    "width-800": "2rem",
    "width-900": "2.25rem",
    "width-1000": "2.5rem",
    "width-1200": "3rem",
    "width-1600": "4rem",
    "width-2000": "5rem",
    "width-2400": "6rem",
    "width-2800": "7rem",
    "width-3200": "8rem"
  },
  "zIndex": {
    "z-index-1": "100",
    "z-index-2": "400",
    "z-index-3": "510",
    "z-index-4": "512",
    "z-index-5": "513",
    "z-index-6": "514",
    "z-index-7": "515",
    "z-index-8": "516",
    "z-index-9": "517",
    "z-index-10": "518",
    "z-index-11": "519",
    "z-index-12": "520"
  }
};
var themes = {
  "light": {
    "border": {
      "border-radius-0": "0rem",
      "border-radius-050": "0.125rem",
      "border-radius-100": "0.25rem",
      "border-radius-150": "0.375rem",
      "border-radius-200": "0.5rem",
      "border-radius-300": "0.75rem",
      "border-radius-400": "1rem",
      "border-radius-500": "1.25rem",
      "border-radius-750": "1.875rem",
      "border-radius-full": "624.9375rem",
      "border-radius-0-experimental": "0rem",
      "border-radius-05": "0.125rem",
      "border-radius-1": "0.25rem",
      "border-radius-2": "0.5rem",
      "border-radius-3": "0.75rem",
      "border-radius-4": "1rem",
      "border-radius-5": "1.25rem",
      "border-radius-6": "1.875rem",
      "border-radius-1_5-experimental": "0.375rem",
      "border-width-0165": "0.04125rem",
      "border-width-025": "0.0625rem",
      "border-width-050": "0.125rem",
      "border-width-100": "0.25rem",
      "border-width-1": "0.0625rem",
      "border-width-2": "0.125rem",
      "border-width-3": "0.1875rem",
      "border-width-4": "0.25rem",
      "border-width-5": "0.3125rem",
      "border-width-1-experimental": "0.04125rem",
      "border-width-2-experimental": "0.0625rem"
    },
    "breakpoints": {
      "breakpoints-xs": "0rem",
      "breakpoints-sm": "30.625rem",
      "breakpoints-md": "48rem",
      "breakpoints-lg": "65rem",
      "breakpoints-xl": "90rem"
    },
    "color": {
      "color-border-inverse-active": "rgba(227, 227, 227, 1)",
      "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
      "color-border-warning": "rgba(255, 200, 121, 1)",
      "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
      "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
      "color-bg-fill-active": "rgba(247, 247, 247, 1)",
      "color-bg-fill-brand-selected": "rgba(48, 48, 48, 1)",
      "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
      "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
      "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
      "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
      "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
      "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
      "color-bg-fill-hover": "rgba(250, 250, 250, 1)",
      "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
      "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
      "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
      "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
      "color-bg-fill-selected": "rgba(204, 204, 204, 1)",
      "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
      "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
      "color-bg-fill-transparent-selected": "rgba(0, 0, 0, 0.06)",
      "color-bg-fill-transparent": "rgba(0, 0, 0, 0)",
      "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
      "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
      "color-bg-fill": "rgba(255, 255, 255, 1)",
      "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
      "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
      "color-text-link-active": "rgba(0, 46, 106, 1)",
      "color-text-link-hover": "rgba(0, 66, 153, 1)",
      "color-text-link": "rgba(0, 91, 211, 1)",
      "color-nav-bg": "rgba(235, 235, 235, 1)",
      "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
      "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
      "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
      "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
      "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
      "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
      "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
      "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
      "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
      "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
      "color-bg-surface-magic-active": "rgba(228, 222, 255, 1)",
      "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
      "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
      "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
      "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
      "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
      "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
      "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
      "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
      "color-text-brand-on-bg-fill": "rgba(255, 255, 255, 1)",
      "color-text-caution-active": "rgba(31, 28, 0, 1)",
      "color-text-caution-hover": "rgba(51, 46, 0, 1)",
      "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
      "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
      "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
      "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
      "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
      "color-text-info-active": "rgba(0, 33, 51, 1)",
      "color-text-info-hover": "rgba(0, 58, 90, 1)",
      "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
      "color-text-success-active": "rgba(9, 42, 27, 1)",
      "color-text-success-hover": "rgba(8, 61, 37, 1)",
      "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
      "color-text-warning-active": "rgba(37, 26, 0, 1)",
      "color-text-warning-hover": "rgba(65, 45, 0, 1)",
      "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
      "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
      "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
      "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
      "color-bg-surface": "rgba(255, 255, 255, 1)",
      "color-bg-surface-hover": "rgba(247, 247, 247, 1)",
      "color-bg-surface-active": "rgba(243, 243, 243, 1)",
      "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
      "color-bg-surface-secondary": "rgba(249, 250, 251, 1)",
      "color-bg-surface-secondary-hover": "rgba(241, 242, 244, 1)",
      "color-bg-surface-secondary-active": "rgba(235, 236, 239, 1)",
      "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
      "color-bg-fill-tertiary": "rgba(221, 224, 228, 1)",
      "color-bg-fill-tertiary-hover": "rgba(202, 206, 211, 1)",
      "color-bg-fill-tertiary-active": "rgba(202, 206, 211, 1)",
      "color-input-bg-surface": "rgba(255, 255, 255, 1)",
      "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
      "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
      "color-bg-fill-brand": "rgba(48, 48, 48, 1)",
      "color-bg-fill-brand-hover": "rgba(26, 26, 26, 1)",
      "color-bg-fill-brand-active": "rgba(26, 26, 26, 1)",
      "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
      "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
      "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
      "color-bg-surface-brand-selected": "rgba(241, 241, 241, 1)",
      "color-bg-surface-selected": "rgba(235, 236, 239, 1)",
      "color-bg-fill-success": "rgba(22, 166, 121, 1)",
      "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
      "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
      "color-bg-fill-success-secondary": "rgba(161, 237, 208, 1)",
      "color-bg-surface-success": "rgba(224, 248, 238, 1)",
      "color-bg-surface-success-hover": "rgba(240, 253, 248, 1)",
      "color-bg-surface-success-active": "rgba(192, 242, 221, 1)",
      "color-bg-fill-critical": "rgba(197, 40, 12, 1)",
      "color-bg-fill-critical-hover": "rgba(159, 32, 10, 1)",
      "color-bg-fill-critical-active": "rgba(115, 24, 7, 1)",
      "color-bg-fill-critical-secondary": "rgba(251, 197, 188, 1)",
      "color-bg-surface-critical": "rgba(253, 226, 221, 1)",
      "color-bg-surface-critical-hover": "rgba(254, 243, 241, 1)",
      "color-bg-surface-critical-active": "rgba(251, 197, 188, 1)",
      "color-bg-fill-caution": "rgba(216, 155, 13, 1)",
      "color-bg-fill-caution-secondary": "rgba(248, 217, 144, 1)",
      "color-bg-surface-caution": "rgba(252, 240, 212, 1)",
      "color-bg-surface-caution-hover": "rgba(254, 248, 236, 1)",
      "color-bg-surface-caution-active": "rgba(250, 229, 178, 1)",
      "color-bg-fill-info": "rgba(42, 172, 187, 1)",
      "color-bg-fill-info-secondary": "rgba(184, 233, 239, 1)",
      "color-bg-surface-info": "rgba(222, 245, 247, 1)",
      "color-bg-surface-info-hover": "rgba(238, 250, 251, 1)",
      "color-bg-surface-info-active": "rgba(184, 233, 239, 1)",
      "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
      "color-bg-fill-warning-secondary": "rgba(250, 201, 168, 1)",
      "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
      "color-bg-fill-magic": "rgba(121, 69, 227, 1)",
      "color-bg-fill-magic-secondary": "rgba(236, 227, 253, 1)",
      "color-bg-fill-magic-secondary-hover": "rgba(226, 214, 250, 1)",
      "color-bg-fill-magic-secondary-active": "rgba(203, 180, 248, 1)",
      "color-bg-surface-magic": "rgba(243, 241, 255, 1)",
      "color-bg-surface-magic-hover": "rgba(236, 227, 253, 1)",
      "color-bg-fill-secondary": "rgba(241, 242, 244, 1)",
      "color-bg-fill-inverse": "rgba(97, 106, 117, 1)",
      "color-bg-fill-inverse-hover": "rgba(97, 106, 117, 1)",
      "color-bg-fill-inverse-active": "rgba(135, 144, 155, 1)",
      "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
      "color-bg-fill-transparent-hover": "rgba(0, 0, 0, 0.05)",
      "color-bg-fill-transparent-active": "rgba(0, 0, 0, 0.06)",
      "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
      "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
      "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
      "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
      "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
      "color-avatar-one-bg-fill": "rgba(251, 207, 251, 1)",
      "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
      "color-avatar-three-bg-fill": "rgba(146, 237, 222, 1)",
      "color-avatar-four-bg-fill": "rgba(192, 225, 255, 1)",
      "color-avatar-five-bg-fill": "rgba(254, 209, 221, 1)",
      "color-text-secondary": "rgba(97, 106, 117, 1)",
      "color-text-emphasis": "rgba(36, 99, 188, 1)",
      "color-text-emphasis-hover": "rgba(20, 73, 149, 1)",
      "color-text-emphasis-active": "rgba(14, 53, 108, 1)",
      "color-text-brand": "rgba(0, 122, 92, 1)",
      "color-text-brand-hover": "rgba(18, 84, 67, 1)",
      "color-text-critical-hover": "rgba(95, 21, 7, 1)",
      "color-text-info-on-bg-fill": "rgba(16, 65, 71, 1)",
      "color-text-warning": "rgba(94, 66, 0, 1)",
      "color-text-inverse-secondary": "rgba(171, 177, 186, 1)",
      "color-text-link-inverse": "rgba(197, 208, 255, 1)",
      "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
      "color-avatar-one-text-on-bg-fill": "rgba(121, 26, 121, 1)",
      "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
      "color-avatar-three-text-on-bg-fill": "rgba(9, 83, 70, 1)",
      "color-avatar-four-text-on-bg-fill": "rgba(0, 82, 124, 1)",
      "color-avatar-five-text-on-bg-fill": "rgba(141, 4, 72, 1)",
      "color-icon-secondary": "rgba(135, 144, 155, 1)",
      "color-icon-emphasis": "rgba(36, 99, 188, 1)",
      "color-icon-emphasis-hover": "rgba(20, 73, 149, 1)",
      "color-icon-emphasis-active": "rgba(14, 53, 108, 1)",
      "color-icon-brand": "rgba(0, 122, 92, 1)",
      "color-border-secondary": "rgba(221, 224, 228, 1)",
      "color-border-tertiary": "rgba(204, 204, 204, 1)",
      "color-input-border": "rgba(171, 177, 186, 1)",
      "color-input-border-hover": "rgba(97, 106, 117, 1)",
      "color-input-border-active": "rgba(26, 26, 26, 1)",
      "color-border-emphasis": "rgba(0, 91, 211, 1)",
      "color-border-emphasis-hover": "rgba(20, 73, 149, 1)",
      "color-border-emphasis-active": "rgba(14, 53, 108, 1)",
      "color-border-focus": "rgba(62, 125, 213, 1)",
      "color-border-brand": "rgba(0, 122, 92, 1)",
      "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
      "color-border-magic-secondary": "rgba(121, 69, 227, 1)",
      "color-bg-inverse": "rgba(31, 33, 36, 1)",
      "color-bg-inset-strong": "rgba(97, 106, 117, 1)",
      "color-bg-inverse-hover": "rgba(97, 106, 117, 1)",
      "color-bg-inverse-active": "rgba(135, 144, 155, 1)",
      "color-bg-strong-hover": "rgba(202, 206, 211, 1)",
      "color-bg-strong-active": "rgba(202, 206, 211, 1)",
      "color-bg-strong": "rgba(221, 224, 228, 1)",
      "color-bg-subdued-active": "rgba(235, 236, 239, 1)",
      "color-bg-disabled": "rgba(235, 236, 239, 1)",
      "color-bg-interactive-disabled": "rgba(235, 236, 239, 1)",
      "color-bg-app": "rgba(241, 242, 244, 1)",
      "color-bg-app-active": "rgba(221, 224, 228, 1)",
      "color-bg-app-hover": "rgba(235, 236, 239, 1)",
      "color-bg-app-selected": "rgba(235, 236, 239, 1)",
      "color-bg-active": "rgba(235, 236, 239, 1)",
      "color-bg-subdued-hover": "rgba(241, 242, 244, 1)",
      "color-bg-inset": "rgba(241, 242, 244, 1)",
      "color-bg-hover": "rgba(241, 242, 244, 1)",
      "color-bg-subdued": "rgba(249, 250, 251, 1)",
      "color-bg-input": "rgba(255, 255, 255, 1)",
      "color-bg": "rgba(255, 255, 255, 1)",
      "color-bg-primary-active": "rgba(12, 59, 47, 1)",
      "color-bg-primary-hover": "rgba(18, 84, 67, 1)",
      "color-bg-primary": "rgba(0, 122, 92, 1)",
      "color-bg-success-strong": "rgba(22, 166, 121, 1)",
      "color-bg-success": "rgba(161, 237, 208, 1)",
      "color-bg-primary-subdued-active": "rgba(192, 242, 221, 1)",
      "color-bg-success-subdued-active": "rgba(192, 242, 221, 1)",
      "color-bg-success-subdued": "rgba(224, 248, 238, 1)",
      "color-bg-primary-subdued-hover": "rgba(224, 248, 238, 1)",
      "color-bg-success-subdued-hover": "rgba(240, 253, 248, 1)",
      "color-bg-primary-subdued": "rgba(240, 253, 248, 1)",
      "color-bg-primary-subdued-selected": "rgba(240, 253, 248, 1)",
      "color-bg-critical-strong-active": "rgba(115, 24, 7, 1)",
      "color-bg-critical-strong-hover": "rgba(159, 32, 10, 1)",
      "color-bg-critical-strong": "rgba(197, 40, 12, 1)",
      "color-bg-critical-subdued-active": "rgba(251, 197, 188, 1)",
      "color-bg-critical": "rgba(251, 197, 188, 1)",
      "color-bg-critical-subdued": "rgba(253, 226, 221, 1)",
      "color-bg-critical-subdued-hover": "rgba(254, 243, 241, 1)",
      "color-bg-caution-strong": "rgba(216, 155, 13, 1)",
      "color-bg-caution": "rgba(248, 217, 144, 1)",
      "color-bg-caution-subdued-active": "rgba(250, 229, 178, 1)",
      "color-bg-caution-subdued": "rgba(252, 240, 212, 1)",
      "color-bg-caution-subdued-hover": "rgba(254, 248, 236, 1)",
      "color-bg-info-strong": "rgba(42, 172, 187, 1)",
      "color-bg-info-subdued-active": "rgba(184, 233, 239, 1)",
      "color-bg-info": "rgba(184, 233, 239, 1)",
      "color-bg-info-subdued": "rgba(222, 245, 247, 1)",
      "color-bg-info-subdued-hover": "rgba(238, 250, 251, 1)",
      "color-bg-interactive-active": "rgba(14, 53, 108, 1)",
      "color-bg-interactive-hover": "rgba(20, 73, 149, 1)",
      "color-bg-interactive": "rgba(36, 99, 188, 1)",
      "color-bg-interactive-subdued-active": "rgba(187, 212, 247, 1)",
      "color-bg-interactive-subdued-hover": "rgba(232, 240, 253, 1)",
      "color-bg-interactive-subdued": "rgba(240, 245, 253, 1)",
      "color-bg-interactive-selected": "rgba(240, 245, 253, 1)",
      "color-bg-warning": "rgba(250, 201, 168, 1)",
      "color-bg-magic-strong": "rgba(121, 69, 227, 1)",
      "color-bg-magic-hover": "rgba(226, 214, 250, 1)",
      "color-bg-magic-active": "rgba(203, 180, 248, 1)",
      "color-bg-magic": "rgba(236, 227, 253, 1)",
      "color-bg-magic-subdued-hover": "rgba(236, 227, 253, 1)",
      "color-bg-magic-subdued-active": "rgba(226, 214, 250, 1)",
      "color-bg-magic-subdued": "rgba(242, 237, 253, 1)",
      "color-border-input-hover": "rgba(97, 106, 117, 1)",
      "color-border-inverse": "rgba(97, 106, 117, 1)",
      "color-border-strong-hover": "rgba(135, 144, 155, 1)",
      "color-border-input": "rgba(171, 177, 186, 1)",
      "color-border-hover": "rgba(171, 177, 186, 1)",
      "color-border-strong": "rgba(171, 177, 186, 1)",
      "color-border": "rgba(202, 206, 211, 1)",
      "color-border-disabled": "rgba(221, 224, 228, 1)",
      "color-border-subdued": "rgba(221, 224, 228, 1)",
      "color-border-interactive-disabled": "rgba(221, 224, 228, 1)",
      "color-border-primary": "rgba(0, 122, 92, 1)",
      "color-border-success": "rgba(22, 166, 121, 1)",
      "color-border-success-subdued": "rgba(80, 220, 169, 1)",
      "color-border-critical-active": "rgba(67, 14, 4, 1)",
      "color-border-critical-hover": "rgba(115, 24, 7, 1)",
      "color-border-critical": "rgba(197, 40, 12, 1)",
      "color-border-critical-subdued": "rgba(245, 107, 82, 1)",
      "color-border-caution": "rgba(216, 155, 13, 1)",
      "color-border-caution-subdued": "rgba(245, 196, 82, 1)",
      "color-border-info": "rgba(59, 195, 211, 1)",
      "color-border-info-subdued": "rgba(109, 211, 222, 1)",
      "color-border-interactive-active": "rgba(14, 53, 108, 1)",
      "color-border-interactive-hover": "rgba(20, 73, 149, 1)",
      "color-border-interactive": "rgba(62, 125, 213, 1)",
      "color-border-interactive-focus": "rgba(62, 125, 213, 1)",
      "color-border-interactive-subdued": "rgba(187, 212, 247, 1)",
      "color-border-magic-strong": "rgba(121, 69, 227, 1)",
      "color-border-magic": "rgba(173, 139, 241, 1)",
      "color-icon-hover": "rgba(31, 33, 36, 1)",
      "color-icon": "rgba(97, 106, 117, 1)",
      "color-icon-active": "rgba(31, 33, 36, 1)",
      "color-icon-subdued": "rgba(135, 144, 155, 1)",
      "color-icon-disabled": "rgba(171, 177, 186, 1)",
      "color-icon-interactive-disabled": "rgba(171, 177, 186, 1)",
      "color-icon-inverse": "rgba(221, 224, 228, 1)",
      "color-icon-on-color": "rgba(255, 255, 255, 1)",
      "color-icon-primary": "rgba(0, 122, 92, 1)",
      "color-icon-success": "rgba(22, 166, 121, 1)",
      "color-icon-critical": "rgba(197, 40, 12, 1)",
      "color-icon-caution": "rgba(183, 126, 11, 1)",
      "color-icon-info": "rgba(42, 172, 187, 1)",
      "color-icon-warning": "rgba(242, 117, 34, 1)",
      "color-icon-interactive-active": "rgba(14, 53, 108, 1)",
      "color-icon-interactive-hover": "rgba(20, 73, 149, 1)",
      "color-icon-interactive": "rgba(36, 99, 188, 1)",
      "color-icon-interactive-inverse": "rgba(102, 153, 225, 1)",
      "color-icon-magic": "rgba(121, 69, 227, 1)",
      "color-text": "rgba(31, 33, 36, 1)",
      "color-text-subdued": "rgba(97, 106, 117, 1)",
      "color-text-disabled": "rgba(135, 144, 155, 1)",
      "color-text-interactive-disabled": "rgba(135, 144, 155, 1)",
      "color-text-inverse-subdued": "rgba(171, 177, 186, 1)",
      "color-text-inverse": "rgba(241, 242, 244, 1)",
      "color-text-on-color": "rgba(255, 255, 255, 1)",
      "color-text-success-strong": "rgba(12, 59, 47, 1)",
      "color-text-success": "rgba(0, 122, 92, 1)",
      "color-text-primary": "rgba(0, 122, 92, 1)",
      "color-text-primary-hover": "rgba(18, 84, 67, 1)",
      "color-text-critical-strong": "rgba(67, 14, 4, 1)",
      "color-text-critical-active": "rgba(115, 24, 7, 1)",
      "color-text-critical": "rgba(197, 40, 12, 1)",
      "color-text-caution-strong": "rgba(77, 46, 5, 1)",
      "color-text-caution": "rgba(135, 92, 8, 1)",
      "color-text-info-strong": "rgba(16, 65, 71, 1)",
      "color-text-info": "rgba(32, 130, 141, 1)",
      "color-text-warning-strong": "rgba(77, 36, 5, 1)",
      "color-text-interactive-active": "rgba(14, 53, 108, 1)",
      "color-text-interactive-hover": "rgba(20, 73, 149, 1)",
      "color-text-interactive": "rgba(36, 99, 188, 1)",
      "color-text-interactive-inverse": "rgba(102, 153, 225, 1)",
      "color-text-magic-strong": "rgba(49, 13, 120, 1)",
      "color-text-magic": "rgba(90, 36, 205, 1)",
      "color-bg-backdrop-experimental": "rgba(0, 0, 0, 0.71)",
      "color-bg-primary-disabled-experimental": "rgba(212, 212, 212, 1)",
      "color-bg-secondary-experimental": "rgba(243, 243, 243, 1)",
      "color-bg-input-hover-experimental": "rgba(250, 250, 250, 1)",
      "color-border-input-active-experimental": "rgba(26, 26, 26, 1)",
      "color-border-critical-strong-experimental": "rgba(142, 31, 11, 1)",
      "color-bg-input-active-experimental": "rgba(247, 247, 247, 1)",
      "color-bg-transparent-experimental": "rgba(0, 0, 0, 0)",
      "color-bg-transparent-subdued-experimental": "rgba(0, 0, 0, 0.06)",
      "color-bg-transparent-hover-experimental": "rgba(0, 0, 0, 0.05)",
      "color-bg-transparent-active-experimental": "rgba(0, 0, 0, 0.06)",
      "color-bg-transparent-disabled-experimental": "rgba(0, 0, 0, 0.05)",
      "color-bg-transparent-secondary-disabled-experimental": "rgba(0, 0, 0, 0.08)",
      "color-bg-transparent-primary-disabled-experimental": "rgba(0, 0, 0, 0.17)",
      "color-bg-transparent-primary-experimental": "rgba(0, 0, 0, 0.62)",
      "color-bg-success-strong-hover-experimental": "rgba(19, 111, 69, 1)",
      "color-bg-success-strong-active-experimental": "rgba(12, 81, 50, 1)",
      "color-bg-warning-subdued-experimental": "rgba(255, 241, 227, 1)",
      "color-bg-warning-strong-experimental": "rgba(255, 184, 0, 1)",
      "color-text-warning-experimental": "rgba(65, 45, 0, 1)",
      "color-text-critical-hover-experimental": "rgba(95, 21, 7, 1)",
      "color-icon-info-strong-experimental": "rgba(0, 82, 124, 1)",
      "color-icon-warning-strong-experimental": "rgba(124, 88, 0, 1)",
      "color-icon-success-strong-experimental": "rgba(12, 81, 50, 1)",
      "color-icon-critical-strong-experimental": "rgba(142, 31, 11, 1)",
      "color-icon-critical-strong-hover-experimental": "rgba(95, 21, 7, 1)",
      "color-icon-critical-strong-active-experimental": "rgba(47, 10, 4, 1)",
      "color-avatar-background-experimental": "rgba(181, 181, 181, 1)",
      "color-avatar-color-experimental": "rgba(255, 255, 255, 1)",
      "color-avatar-style-one-background-experimental": "rgba(251, 207, 251, 1)",
      "color-avatar-style-one-color-experimental": "rgba(121, 26, 121, 1)",
      "color-avatar-style-two-background-experimental": "rgba(56, 250, 163, 1)",
      "color-avatar-style-two-color-experimental": "rgba(12, 81, 50, 1)",
      "color-avatar-style-three-background-experimental": "rgba(146, 237, 222, 1)",
      "color-avatar-style-three-color-experimental": "rgba(9, 83, 70, 1)",
      "color-avatar-style-four-background-experimental": "rgba(192, 225, 255, 1)",
      "color-avatar-style-four-color-experimental": "rgba(0, 82, 124, 1)",
      "color-avatar-style-five-background-experimental": "rgba(254, 209, 221, 1)",
      "color-avatar-style-five-color-experimental": "rgba(141, 4, 72, 1)"
    },
    "font": {
      "font-family-sans": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
      "font-size-275": "0.6875rem",
      "font-size-325": "0.8125rem",
      "font-size-350": "0.875rem",
      "font-size-750": "1.75rem",
      "font-size-900": "2rem",
      "font-size-1000": "2.5rem",
      "font-size-70-experimental": "0.6875rem",
      "font-size-75": "0.75rem",
      "font-size-80-experimental": "0.8125rem",
      "font-size-100": "0.875rem",
      "font-size-200": "1rem",
      "font-size-300": "1.25rem",
      "font-size-400": "1.5rem",
      "font-size-500": "1.75rem",
      "font-size-600": "2rem",
      "font-size-700": "2.5rem",
      "font-weight-regular": "400",
      "font-weight-medium": "500",
      "font-weight-semibold": "600",
      "font-weight-bold": "700",
      "font-letter-spacing-densest": "-0.03375rem",
      "font-letter-spacing-denser": "-0.01875rem",
      "font-letter-spacing-dense": "-0.0125rem",
      "font-letter-spacing-normal": "0rem",
      "font-line-height-300": "0.75rem",
      "font-line-height-400": "1rem",
      "font-line-height-500": "1.25rem",
      "font-line-height-600": "1.5rem",
      "font-line-height-700": "1.75rem",
      "font-line-height-800": "2rem",
      "font-line-height-1000": "2.5rem",
      "font-line-height-1200": "3rem",
      "font-line-height-075-experimental": "0.75rem",
      "font-line-height-1": "1rem",
      "font-line-height-2": "1.25rem",
      "font-line-height-3": "1.5rem",
      "font-line-height-4": "1.75rem",
      "font-line-height-5": "2rem",
      "font-line-height-6": "2.5rem",
      "font-line-height-7": "3rem"
    },
    "height": {
      "height-0": "0rem",
      "height-025": "0.0625rem",
      "height-050": "0.125rem",
      "height-100": "0.25rem",
      "height-150": "0.375rem",
      "height-200": "0.5rem",
      "height-300": "0.75rem",
      "height-400": "1rem",
      "height-500": "1.25rem",
      "height-600": "1.5rem",
      "height-700": "1.75rem",
      "height-800": "2rem",
      "height-900": "2.25rem",
      "height-1000": "2.5rem",
      "height-1200": "3rem",
      "height-1600": "4rem",
      "height-2000": "5rem",
      "height-2400": "6rem",
      "height-2800": "7rem",
      "height-3200": "8rem"
    },
    "motion": {
      "motion-duration-0": "0ms",
      "motion-duration-50": "50ms",
      "motion-duration-100": "100ms",
      "motion-duration-150": "150ms",
      "motion-duration-200": "200ms",
      "motion-duration-250": "250ms",
      "motion-duration-300": "300ms",
      "motion-duration-350": "350ms",
      "motion-duration-400": "400ms",
      "motion-duration-450": "450ms",
      "motion-duration-500": "500ms",
      "motion-duration-5000": "5000ms",
      "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
      "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
      "motion-ease-out": "cubic-bezier(0, 0, 0.58, 1)",
      "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
      "motion-linear": "cubic-bezier(0, 0, 1, 1)",
      "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
      "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
      "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
      "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
      "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
      "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
    },
    "shadow": {
      "shadow-0": "none",
      "shadow-100": "0rem 0rem 0.125rem rgba(31, 33, 36, 0.24)",
      "shadow-200": "0rem 0.0625rem 0.0625rem rgba(31, 33, 36, 0.1)",
      "shadow-300": "0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.1), 0rem 0.0625rem 0.375rem rgba(31, 33, 36, 0.05)",
      "shadow-400": "0rem 0.25rem 0.75rem rgba(31, 33, 36, 0.2), 0rem 0.125rem 0.375rem rgba(31, 33, 36, 0.05)",
      "shadow-500": "0rem 0.25rem 1.125rem -0.125rem rgba(31, 33, 36, 0.08), 0rem 0.75rem 1.125rem -0.125rem rgba(31, 33, 36, 0.15)",
      "shadow-600": "0rem 2rem 2rem rgba(31, 33, 36, 0.15), 0rem 2rem 3.5rem -0.125rem rgba(31, 33, 36, 0.16)",
      "shadow-bevel-100": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
      "shadow-inset-100": "inset 0rem 0rem 0.1875rem rgba(31, 33, 36, 0.56)",
      "shadow-inset-200": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
      "shadow-button": "inset 0rem -0.0625rem 0rem #B5B5B5, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
      "shadow-button-hover": "inset 0rem -0.0625rem 0rem #CCCCCC, inset 0.0625rem 0rem 0rem #EBEBEB, inset -0.0625rem 0rem 0rem #EBEBEB, inset 0rem 0.0625rem 0rem #EBEBEB",
      "shadow-button-inset": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
      "shadow-button-primary": "0rem 0.125rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.0625rem 0rem 0.0625rem #000 inset, 0rem 0.0625rem 0rem 0rem #000 inset",
      "shadow-button-primary-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0rem 0rem 0.03125rem #1A1A1A",
      "shadow-button-primary-inset": "0rem 0.1875rem 0rem 0rem #000 inset",
      "shadow-button-primary-critical": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
      "shadow-button-primary-critical-hover": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
      "shadow-button-primary-critical-inset": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
      "shadow-button-primary-success": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
      "shadow-button-primary-success-hover": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
      "shadow-button-primary-success-inset": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
      "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset",
      "shadow-inset-lg": "inset 0rem 0rem 0.4375rem 0.125rem rgba(31, 33, 36, 0.18)",
      "shadow-inset-md": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
      "shadow-inset-sm": "inset 0rem 0rem 0.1875rem rgba(31, 33, 36, 0.56)",
      "shadow-none": "none",
      "shadow-xs": "0rem 0rem 0.125rem rgba(31, 33, 36, 0.24)",
      "shadow-sm": "0rem 0.0625rem 0.0625rem rgba(31, 33, 36, 0.1)",
      "shadow-md": "0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.1), 0rem 0.0625rem 0.375rem rgba(31, 33, 36, 0.05)",
      "shadow-lg": "0rem 0.25rem 0.75rem rgba(31, 33, 36, 0.2), 0rem 0.125rem 0.375rem rgba(31, 33, 36, 0.05)",
      "shadow-xl": "0rem 0.25rem 1.125rem -0.125rem rgba(31, 33, 36, 0.08), 0rem 0.75rem 1.125rem -0.125rem rgba(31, 33, 36, 0.15)",
      "shadow-2xl": "0rem 2rem 2rem rgba(31, 33, 36, 0.15), 0rem 2rem 3.5rem -0.125rem rgba(31, 33, 36, 0.16)",
      "shadow-bevel-experimental": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
      "shadow-card-sm-experimental": "0rem 0.125rem 0rem rgba(0, 0, 0, 0.07), 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.07), 0.0625rem 0rem 0rem #E3E3E3, -0.0625rem 0rem 0rem #E3E3E3, 0rem -0.0625rem 0rem #E3E3E3",
      "shadow-card-md-experimental": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(0, 0, 0, 0.07),  0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.16),  0.0625rem 0rem 0rem 0rem rgba(227, 227, 227, 1),  -0.0625rem 0rem 0rem 0rem rgba(227, 227, 227, 1),  0rem 0.0625rem 0rem 0rem rgba(227, 227, 227, 1)",
      "shadow-card-lg-experimental": "0rem 0.25rem 0.375rem -0.125rem rgba(0, 0, 0, 0.2), inset 0rem -0.0625rem 0rem #D4D4D4, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
      "shadow-button-experimental": "inset 0rem -0.0625rem 0rem #B5B5B5, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
      "shadow-button-hover-experimental": "inset 0rem -0.0625rem 0rem #cccccc, inset 0.0625rem 0rem 0rem #ebebeb, inset -0.0625rem 0rem 0rem #ebebeb, inset 0rem 0.0625rem 0rem #ebebeb",
      "shadow-button-disabled-experimental": "inset 0rem 0rem 0rem 0.0625rem rgba(227, 227, 227, 1)",
      "shadow-button-primary-strong-inset-experimental": "0rem 0.1875rem 0rem 0rem #000 inset",
      "shadow-button-primary-strong-hover-experimental": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0rem 0rem 0.03125rem #1A1A1A",
      "shadow-button-primary-strong-experimental": "0rem 0.125rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.0625rem 0rem 0.0625rem #000 inset, 0rem 0.0625rem 0rem 0rem #000 inset",
      "shadow-button-primary-experimental": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
      "shadow-button-primary-hover-experimental": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
      "shadow-button-inset-experimental": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
      "shadow-border-inset-experimental": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
    },
    "space": {
      "space-0": "0rem",
      "space-025": "0.0625rem",
      "space-050": "0.125rem",
      "space-100": "0.25rem",
      "space-150": "0.375rem",
      "space-200": "0.5rem",
      "space-300": "0.75rem",
      "space-400": "1rem",
      "space-500": "1.25rem",
      "space-600": "1.5rem",
      "space-800": "2rem",
      "space-1000": "2.5rem",
      "space-1200": "3rem",
      "space-1600": "4rem",
      "space-2000": "5rem",
      "space-2400": "6rem",
      "space-2800": "7rem",
      "space-3200": "8rem",
      "space-button-group-gap": "0.5rem",
      "space-card-gap": "1rem",
      "space-card-padding": "1rem",
      "space-table-cell-padding": "0.375rem",
      "space-05": "0.125rem",
      "space-1": "0.25rem",
      "space-1_5-experimental": "0.375rem",
      "space-2": "0.5rem",
      "space-3": "0.75rem",
      "space-4": "1rem",
      "space-5": "1.25rem",
      "space-6": "1.5rem",
      "space-8": "2rem",
      "space-10": "2.5rem",
      "space-12": "3rem",
      "space-16": "4rem",
      "space-20": "5rem",
      "space-24": "6rem",
      "space-28": "7rem",
      "space-32": "8rem"
    },
    "text": {
      "text-heading-3xl-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-3xl-font-size": "2rem",
      "text-heading-3xl-font-weight": "700",
      "text-heading-3xl-font-letter-spacing": "-0.03375rem",
      "text-heading-3xl-font-line-height": "3rem",
      "text-heading-2xl-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-2xl-font-size": "1.75rem",
      "text-heading-2xl-font-weight": "700",
      "text-heading-2xl-font-letter-spacing": "-0.01875rem",
      "text-heading-2xl-font-line-height": "2.5rem",
      "text-heading-xl-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-xl-font-size": "2rem",
      "text-heading-xl-font-weight": "700",
      "text-heading-xl-font-letter-spacing": "-0.0125rem",
      "text-heading-xl-font-line-height": "2rem",
      "text-heading-lg-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-lg-font-size": "1.75rem",
      "text-heading-lg-font-weight": "600",
      "text-heading-lg-font-letter-spacing": "-0.0125rem",
      "text-heading-lg-font-line-height": "1.5rem",
      "text-heading-md-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-md-font-size": "0.875rem",
      "text-heading-md-font-weight": "600",
      "text-heading-md-font-letter-spacing": "0rem",
      "text-heading-md-font-line-height": "1.25rem",
      "text-heading-sm-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-sm-font-size": "0.8125rem",
      "text-heading-sm-font-weight": "600",
      "text-heading-sm-font-letter-spacing": "0rem",
      "text-heading-sm-font-line-height": "1.25rem",
      "text-body-lg-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-lg-font-size": "0.875rem",
      "text-body-lg-font-weight": "400",
      "text-body-lg-font-letter-spacing": "0rem",
      "text-body-lg-font-line-height": "1.25rem",
      "text-body-md-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-md-font-size": "0.8125rem",
      "text-body-md-font-weight": "400",
      "text-body-md-font-letter-spacing": "0rem",
      "text-body-md-font-line-height": "1.25rem",
      "text-body-sm-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-sm-font-size": "1.25rem",
      "text-body-sm-font-weight": "400",
      "text-body-sm-font-letter-spacing": "0rem",
      "text-body-sm-font-line-height": "1rem",
      "text-body-xs-font-family": "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-xs-font-size": "0.6875rem",
      "text-body-xs-font-weight": "400",
      "text-body-xs-font-letter-spacing": "0rem",
      "text-body-xs-font-line-height": "0.75rem"
    },
    "width": {
      "width-0": "0rem",
      "width-025": "0.0625rem",
      "width-050": "0.125rem",
      "width-100": "0.25rem",
      "width-150": "0.375rem",
      "width-200": "0.5rem",
      "width-300": "0.75rem",
      "width-400": "1rem",
      "width-500": "1.25rem",
      "width-600": "1.5rem",
      "width-700": "1.75rem",
      "width-800": "2rem",
      "width-900": "2.25rem",
      "width-1000": "2.5rem",
      "width-1200": "3rem",
      "width-1600": "4rem",
      "width-2000": "5rem",
      "width-2400": "6rem",
      "width-2800": "7rem",
      "width-3200": "8rem"
    },
    "zIndex": {
      "z-index-1": "100",
      "z-index-2": "400",
      "z-index-3": "510",
      "z-index-4": "512",
      "z-index-5": "513",
      "z-index-6": "514",
      "z-index-7": "515",
      "z-index-8": "516",
      "z-index-9": "517",
      "z-index-10": "518",
      "z-index-11": "519",
      "z-index-12": "520"
    }
  },
  "Polaris-Summer-Editions-2023": {
    "border": {
      "border-radius-0": "0px",
      "border-radius-050": "2px",
      "border-radius-100": "4px",
      "border-radius-150": "6px",
      "border-radius-200": "8px",
      "border-radius-300": "12px",
      "border-radius-400": "16px",
      "border-radius-500": "20px",
      "border-radius-750": "30px",
      "border-radius-full": "624.9375rem",
      "border-radius-0-experimental": "0rem",
      "border-radius-05": "0.125rem",
      "border-radius-1": "0.25rem",
      "border-radius-2": "0.5rem",
      "border-radius-3": "0.75rem",
      "border-radius-4": "1rem",
      "border-radius-5": "1.25rem",
      "border-radius-6": "1.875rem",
      "border-radius-1_5-experimental": "0.375rem",
      "border-width-0165": "0.66px",
      "border-width-025": "1px",
      "border-width-050": "2px",
      "border-width-100": "4px",
      "border-width-1": "0.0625rem",
      "border-width-2": "0.125rem",
      "border-width-3": "0.1875rem",
      "border-width-4": "0.25rem",
      "border-width-5": "0.3125rem",
      "border-width-1-experimental": "0.04125rem",
      "border-width-2-experimental": "0.0625rem"
    },
    "breakpoints": {
      "breakpoints-xs": "0rem",
      "breakpoints-sm": "30.625rem",
      "breakpoints-md": "48rem",
      "breakpoints-lg": "65rem",
      "breakpoints-xl": "90rem"
    },
    "color": {
      "color-border-inverse-active": "rgba(227, 227, 227, 1)",
      "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
      "color-border-warning": "rgba(255, 200, 121, 1)",
      "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
      "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
      "color-bg-fill-active": "rgba(247, 247, 247, 1)",
      "color-bg-fill-brand-selected": "rgba(48, 48, 48, 1)",
      "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
      "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
      "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
      "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
      "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
      "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
      "color-bg-fill-hover": "rgba(250, 250, 250, 1)",
      "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
      "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
      "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
      "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
      "color-bg-fill-selected": "rgba(204, 204, 204, 1)",
      "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
      "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
      "color-bg-fill-transparent-selected": "rgba(0, 0, 0, 0.06)",
      "color-bg-fill-transparent": "rgba(0, 0, 0, 0)",
      "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
      "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
      "color-bg-fill": "rgba(255, 255, 255, 1)",
      "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
      "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
      "color-text-link-active": "rgba(0, 46, 106, 1)",
      "color-text-link-hover": "rgba(0, 66, 153, 1)",
      "color-text-link": "rgba(0, 91, 211, 1)",
      "color-nav-bg": "rgba(235, 235, 235, 1)",
      "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
      "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
      "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
      "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
      "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
      "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
      "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
      "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
      "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
      "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
      "color-bg-surface-magic-active": "rgba(228, 222, 255, 1)",
      "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
      "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
      "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
      "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
      "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
      "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
      "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
      "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
      "color-text-brand-on-bg-fill": "rgba(255, 255, 255, 1)",
      "color-text-caution-active": "rgba(31, 28, 0, 1)",
      "color-text-caution-hover": "rgba(51, 46, 0, 1)",
      "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
      "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
      "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
      "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
      "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
      "color-text-info-active": "rgba(0, 33, 51, 1)",
      "color-text-info-hover": "rgba(0, 58, 90, 1)",
      "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
      "color-text-success-active": "rgba(9, 42, 27, 1)",
      "color-text-success-hover": "rgba(8, 61, 37, 1)",
      "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
      "color-text-warning-active": "rgba(37, 26, 0, 1)",
      "color-text-warning-hover": "rgba(65, 45, 0, 1)",
      "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
      "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
      "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
      "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
      "color-bg-surface": "rgba(255, 255, 255, 1)",
      "color-bg-surface-hover": "rgba(247, 247, 247, 1)",
      "color-bg-surface-active": "rgba(243, 243, 243, 1)",
      "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
      "color-bg-surface-secondary": "rgba(247, 247, 247, 1)",
      "color-bg-surface-secondary-hover": "rgba(241, 241, 241, 1)",
      "color-bg-surface-secondary-active": "rgba(235, 235, 235, 1)",
      "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
      "color-bg-fill-tertiary": "rgba(227, 227, 227, 1)",
      "color-bg-fill-tertiary-hover": "rgba(212, 212, 212, 1)",
      "color-bg-fill-tertiary-active": "rgba(204, 204, 204, 1)",
      "color-input-bg-surface": "rgba(253, 253, 253, 1)",
      "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
      "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
      "color-bg-fill-brand": "rgba(48, 48, 48, 1)",
      "color-bg-fill-brand-hover": "rgba(26, 26, 26, 1)",
      "color-bg-fill-brand-active": "rgba(26, 26, 26, 1)",
      "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
      "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
      "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
      "color-bg-surface-brand-selected": "rgba(241, 241, 241, 1)",
      "color-bg-surface-selected": "rgba(250, 250, 250, 1)",
      "color-bg-fill-success": "rgba(41, 132, 90, 1)",
      "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
      "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
      "color-bg-fill-success-secondary": "rgba(205, 254, 225, 1)",
      "color-bg-surface-success": "rgba(205, 254, 225, 1)",
      "color-bg-surface-success-hover": "rgba(180, 254, 210, 1)",
      "color-bg-surface-success-active": "rgba(146, 254, 194, 1)",
      "color-bg-fill-critical": "rgba(229, 28, 0, 1)",
      "color-bg-fill-critical-hover": "rgba(181, 38, 11, 1)",
      "color-bg-fill-critical-active": "rgba(142, 31, 11, 1)",
      "color-bg-fill-critical-secondary": "rgba(254, 218, 217, 1)",
      "color-bg-surface-critical": "rgba(254, 233, 232, 1)",
      "color-bg-surface-critical-hover": "rgba(254, 226, 225, 1)",
      "color-bg-surface-critical-active": "rgba(254, 218, 217, 1)",
      "color-bg-fill-caution": "rgba(255, 230, 0, 1)",
      "color-bg-fill-caution-secondary": "rgba(255, 239, 157, 1)",
      "color-bg-surface-caution": "rgba(255, 248, 219, 1)",
      "color-bg-surface-caution-hover": "rgba(255, 244, 191, 1)",
      "color-bg-surface-caution-active": "rgba(255, 239, 157, 1)",
      "color-bg-fill-info": "rgba(145, 208, 255, 1)",
      "color-bg-fill-info-secondary": "rgba(224, 240, 255, 1)",
      "color-bg-surface-info": "rgba(234, 244, 255, 1)",
      "color-bg-surface-info-hover": "rgba(224, 240, 255, 1)",
      "color-bg-surface-info-active": "rgba(202, 230, 255, 1)",
      "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
      "color-bg-fill-warning-secondary": "rgba(255, 214, 164, 1)",
      "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
      "color-bg-fill-magic": "rgba(128, 81, 255, 1)",
      "color-bg-fill-magic-secondary": "rgba(228, 222, 255, 1)",
      "color-bg-fill-magic-secondary-hover": "rgba(223, 217, 255, 1)",
      "color-bg-fill-magic-secondary-active": "rgba(212, 204, 255, 1)",
      "color-bg-surface-magic": "rgba(243, 241, 255, 1)",
      "color-bg-surface-magic-hover": "rgba(239, 236, 255, 1)",
      "color-bg-fill-secondary": "rgba(241, 241, 241, 1)",
      "color-bg-fill-inverse": "rgba(48, 48, 48, 1)",
      "color-bg-fill-inverse-hover": "rgba(74, 74, 74, 1)",
      "color-bg-fill-inverse-active": "rgba(97, 97, 97, 1)",
      "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
      "color-bg-fill-transparent-hover": "rgba(0, 0, 0, 0.05)",
      "color-bg-fill-transparent-active": "rgba(0, 0, 0, 0.06)",
      "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
      "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
      "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
      "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
      "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
      "color-avatar-one-bg-fill": "rgba(251, 207, 251, 1)",
      "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
      "color-avatar-three-bg-fill": "rgba(146, 237, 222, 1)",
      "color-avatar-four-bg-fill": "rgba(192, 225, 255, 1)",
      "color-avatar-five-bg-fill": "rgba(254, 209, 221, 1)",
      "color-text-secondary": "rgba(97, 97, 97, 1)",
      "color-text-emphasis": "rgba(0, 91, 211, 1)",
      "color-text-emphasis-hover": "rgba(0, 66, 153, 1)",
      "color-text-emphasis-active": "rgba(0, 46, 106, 1)",
      "color-text-brand": "rgba(74, 74, 74, 1)",
      "color-text-brand-hover": "rgba(48, 48, 48, 1)",
      "color-text-critical-hover": "rgba(95, 21, 7, 1)",
      "color-text-info-on-bg-fill": "rgba(0, 33, 51, 1)",
      "color-text-warning": "rgba(94, 66, 0, 1)",
      "color-text-inverse-secondary": "rgba(181, 181, 181, 1)",
      "color-text-link-inverse": "rgba(197, 208, 255, 1)",
      "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
      "color-avatar-one-text-on-bg-fill": "rgba(121, 26, 121, 1)",
      "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
      "color-avatar-three-text-on-bg-fill": "rgba(9, 83, 70, 1)",
      "color-avatar-four-text-on-bg-fill": "rgba(0, 82, 124, 1)",
      "color-avatar-five-text-on-bg-fill": "rgba(141, 4, 72, 1)",
      "color-icon-secondary": "rgba(138, 138, 138, 1)",
      "color-icon-emphasis": "rgba(0, 91, 211, 1)",
      "color-icon-emphasis-hover": "rgba(0, 66, 153, 1)",
      "color-icon-emphasis-active": "rgba(0, 46, 106, 1)",
      "color-icon-brand": "rgba(26, 26, 26, 1)",
      "color-border-secondary": "rgba(235, 235, 235, 1)",
      "color-border-tertiary": "rgba(204, 204, 204, 1)",
      "color-input-border": "rgba(138, 138, 138, 1)",
      "color-input-border-hover": "rgba(97, 97, 97, 1)",
      "color-input-border-active": "rgba(26, 26, 26, 1)",
      "color-border-emphasis": "rgba(0, 91, 211, 1)",
      "color-border-emphasis-hover": "rgba(0, 66, 153, 1)",
      "color-border-emphasis-active": "rgba(0, 46, 106, 1)",
      "color-border-focus": "rgba(0, 91, 211, 1)",
      "color-border-brand": "rgba(227, 227, 227, 1)",
      "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
      "color-border-magic-secondary": "rgba(128, 81, 255, 1)",
      "color-bg-inverse": "rgba(26, 26, 26, 1)",
      "color-bg-inset-strong": "rgba(48, 48, 48, 1)",
      "color-bg-inverse-hover": "rgba(74, 74, 74, 1)",
      "color-bg-inverse-active": "rgba(97, 97, 97, 1)",
      "color-bg-strong-hover": "rgba(212, 212, 212, 1)",
      "color-bg-strong-active": "rgba(204, 204, 204, 1)",
      "color-bg-strong": "rgba(227, 227, 227, 1)",
      "color-bg-subdued-active": "rgba(235, 235, 235, 1)",
      "color-bg-disabled": "rgba(235, 235, 235, 1)",
      "color-bg-interactive-disabled": "rgba(235, 235, 235, 1)",
      "color-bg-app": "rgba(241, 241, 241, 1)",
      "color-bg-app-active": "rgba(221, 224, 228, 1)",
      "color-bg-app-hover": "rgba(253, 253, 253, 1)",
      "color-bg-app-selected": "rgba(250, 250, 250, 1)",
      "color-bg-active": "rgba(247, 247, 247, 1)",
      "color-bg-subdued-hover": "rgba(241, 241, 241, 1)",
      "color-bg-inset": "rgba(241, 241, 241, 1)",
      "color-bg-hover": "rgba(250, 250, 250, 1)",
      "color-bg-subdued": "rgba(247, 247, 247, 1)",
      "color-bg-input": "rgba(255, 255, 255, 1)",
      "color-bg": "rgba(255, 255, 255, 1)",
      "color-bg-primary-active": "rgba(26, 26, 26, 1)",
      "color-bg-primary-hover": "rgba(26, 26, 26, 1)",
      "color-bg-primary": "rgba(48, 48, 48, 1)",
      "color-bg-success-strong": "rgba(41, 132, 90, 1)",
      "color-bg-success": "rgba(205, 254, 225, 1)",
      "color-bg-primary-subdued-active": "rgba(241, 241, 241, 1)",
      "color-bg-success-subdued-active": "rgba(192, 242, 221, 1)",
      "color-bg-success-subdued": "rgba(205, 254, 225, 1)",
      "color-bg-primary-subdued-hover": "rgba(235, 235, 235, 1)",
      "color-bg-success-subdued-hover": "rgba(146, 254, 194, 1)",
      "color-bg-primary-subdued": "rgba(227, 227, 227, 1)",
      "color-bg-primary-subdued-selected": "rgba(241, 241, 241, 1)",
      "color-bg-critical-strong-active": "rgba(142, 31, 11, 1)",
      "color-bg-critical-strong-hover": "rgba(181, 38, 11, 1)",
      "color-bg-critical-strong": "rgba(229, 28, 0, 1)",
      "color-bg-critical-subdued-active": "rgba(254, 218, 217, 1)",
      "color-bg-critical": "rgba(254, 218, 217, 1)",
      "color-bg-critical-subdued": "rgba(254, 233, 232, 1)",
      "color-bg-critical-subdued-hover": "rgba(254, 226, 225, 1)",
      "color-bg-caution-strong": "rgba(255, 230, 0, 1)",
      "color-bg-caution": "rgba(255, 239, 157, 1)",
      "color-bg-caution-subdued-active": "rgba(255, 239, 157, 1)",
      "color-bg-caution-subdued": "rgba(255, 248, 219, 1)",
      "color-bg-caution-subdued-hover": "rgba(255, 244, 191, 1)",
      "color-bg-info-strong": "rgba(145, 208, 255, 1)",
      "color-bg-info-subdued-active": "rgba(202, 230, 255, 1)",
      "color-bg-info": "rgba(224, 240, 255, 1)",
      "color-bg-info-subdued": "rgba(234, 244, 255, 1)",
      "color-bg-info-subdued-hover": "rgba(224, 240, 255, 1)",
      "color-bg-interactive-active": "rgba(74, 74, 74, 1)",
      "color-bg-interactive-hover": "rgba(48, 48, 48, 1)",
      "color-bg-interactive": "rgba(26, 26, 26, 1)",
      "color-bg-interactive-subdued-active": "rgba(241, 241, 241, 1)",
      "color-bg-interactive-subdued-hover": "rgba(235, 235, 235, 1)",
      "color-bg-interactive-subdued": "rgba(227, 227, 227, 1)",
      "color-bg-interactive-selected": "rgba(241, 241, 241, 1)",
      "color-bg-warning": "rgba(255, 214, 164, 1)",
      "color-bg-magic-strong": "rgba(128, 81, 255, 1)",
      "color-bg-magic-hover": "rgba(223, 217, 255, 1)",
      "color-bg-magic-active": "rgba(212, 204, 255, 1)",
      "color-bg-magic": "rgba(228, 222, 255, 1)",
      "color-bg-magic-subdued-hover": "rgba(239, 236, 255, 1)",
      "color-bg-magic-subdued-active": "rgba(228, 222, 255, 1)",
      "color-bg-magic-subdued": "rgba(243, 241, 255, 1)",
      "color-border-input-hover": "rgba(97, 97, 97, 1)",
      "color-border-inverse": "rgba(97, 97, 97, 1)",
      "color-border-strong-hover": "rgba(181, 181, 181, 1)",
      "color-border-input": "rgba(138, 138, 138, 1)",
      "color-border-hover": "rgba(204, 204, 204, 1)",
      "color-border-strong": "rgba(204, 204, 204, 1)",
      "color-border": "rgba(227, 227, 227, 1)",
      "color-border-disabled": "rgba(235, 235, 235, 1)",
      "color-border-subdued": "rgba(235, 235, 235, 1)",
      "color-border-interactive-disabled": "rgba(235, 235, 235, 1)",
      "color-border-primary": "rgba(227, 227, 227, 1)",
      "color-border-success": "rgba(146, 254, 194, 1)",
      "color-border-success-subdued": "rgba(146, 254, 194, 1)",
      "color-border-critical-active": "rgba(239, 77, 47, 1)",
      "color-border-critical-hover": "rgba(253, 129, 122, 1)",
      "color-border-critical": "rgba(253, 176, 172, 1)",
      "color-border-critical-subdued": "rgba(253, 176, 172, 1)",
      "color-border-caution": "rgba(255, 235, 120, 1)",
      "color-border-caution-subdued": "rgba(255, 235, 120, 1)",
      "color-border-info": "rgba(145, 208, 255, 1)",
      "color-border-info-subdued": "rgba(145, 208, 255, 1)",
      "color-border-interactive-active": "rgba(0, 46, 106, 1)",
      "color-border-interactive-hover": "rgba(0, 66, 153, 1)",
      "color-border-interactive": "rgba(0, 91, 211, 1)",
      "color-border-interactive-focus": "rgba(0, 91, 211, 1)",
      "color-border-interactive-subdued": "rgba(0, 91, 211, 1)",
      "color-border-magic-strong": "rgba(128, 81, 255, 1)",
      "color-border-magic": "rgba(170, 149, 255, 1)",
      "color-icon-hover": "rgba(48, 48, 48, 1)",
      "color-icon": "rgba(74, 74, 74, 1)",
      "color-icon-active": "rgba(31, 33, 36, 1)",
      "color-icon-subdued": "rgba(138, 138, 138, 1)",
      "color-icon-disabled": "rgba(204, 204, 204, 1)",
      "color-icon-interactive-disabled": "rgba(204, 204, 204, 1)",
      "color-icon-inverse": "rgba(227, 227, 227, 1)",
      "color-icon-on-color": "rgba(255, 255, 255, 1)",
      "color-icon-primary": "rgba(26, 26, 26, 1)",
      "color-icon-success": "rgba(41, 132, 90, 1)",
      "color-icon-critical": "rgba(239, 77, 47, 1)",
      "color-icon-caution": "rgba(153, 138, 0, 1)",
      "color-icon-info": "rgba(0, 148, 213, 1)",
      "color-icon-warning": "rgba(178, 132, 0, 1)",
      "color-icon-interactive-active": "rgba(0, 46, 106, 1)",
      "color-icon-interactive-hover": "rgba(0, 66, 153, 1)",
      "color-icon-interactive": "rgba(0, 91, 211, 1)",
      "color-icon-interactive-inverse": "rgba(197, 208, 255, 1)",
      "color-icon-magic": "rgba(113, 38, 255, 1)",
      "color-text": "rgba(48, 48, 48, 1)",
      "color-text-subdued": "rgba(97, 97, 97, 1)",
      "color-text-disabled": "rgba(181, 181, 181, 1)",
      "color-text-interactive-disabled": "rgba(204, 204, 204, 1)",
      "color-text-inverse-subdued": "rgba(204, 204, 204, 1)",
      "color-text-inverse": "rgba(227, 227, 227, 1)",
      "color-text-on-color": "rgba(255, 255, 255, 1)",
      "color-text-success-strong": "rgba(8, 61, 37, 1)",
      "color-text-success": "rgba(8, 61, 37, 1)",
      "color-text-primary": "rgba(74, 74, 74, 1)",
      "color-text-primary-hover": "rgba(74, 74, 74, 1)",
      "color-text-critical-strong": "rgba(142, 31, 11, 1)",
      "color-text-critical-active": "rgba(47, 10, 4, 1)",
      "color-text-critical": "rgba(142, 31, 11, 1)",
      "color-text-caution-strong": "rgba(51, 46, 0, 1)",
      "color-text-caution": "rgba(51, 46, 0, 1)",
      "color-text-info-strong": "rgba(0, 33, 51, 1)",
      "color-text-info": "rgba(0, 82, 124, 1)",
      "color-text-warning-strong": "rgba(37, 26, 0, 1)",
      "color-text-interactive-active": "rgba(0, 46, 106, 1)",
      "color-text-interactive-hover": "rgba(0, 66, 153, 1)",
      "color-text-interactive": "rgba(0, 91, 211, 1)",
      "color-text-interactive-inverse": "rgba(197, 208, 255, 1)",
      "color-text-magic-strong": "rgba(59, 0, 147, 1)",
      "color-text-magic": "rgba(87, 0, 209, 1)",
      "color-bg-backdrop-experimental": "rgba(0, 0, 0, 0.71)",
      "color-bg-primary-disabled-experimental": "rgba(212, 212, 212, 1)",
      "color-bg-secondary-experimental": "rgba(243, 243, 243, 1)",
      "color-bg-input-hover-experimental": "rgba(250, 250, 250, 1)",
      "color-border-input-active-experimental": "rgba(26, 26, 26, 1)",
      "color-border-critical-strong-experimental": "rgba(142, 31, 11, 1)",
      "color-bg-input-active-experimental": "rgba(247, 247, 247, 1)",
      "color-bg-transparent-experimental": "rgba(0, 0, 0, 0)",
      "color-bg-transparent-subdued-experimental": "rgba(0, 0, 0, 0.06)",
      "color-bg-transparent-hover-experimental": "rgba(0, 0, 0, 0.05)",
      "color-bg-transparent-active-experimental": "rgba(0, 0, 0, 0.06)",
      "color-bg-transparent-disabled-experimental": "rgba(0, 0, 0, 0.05)",
      "color-bg-transparent-secondary-disabled-experimental": "rgba(0, 0, 0, 0.08)",
      "color-bg-transparent-primary-disabled-experimental": "rgba(0, 0, 0, 0.17)",
      "color-bg-transparent-primary-experimental": "rgba(0, 0, 0, 0.62)",
      "color-bg-success-strong-hover-experimental": "rgba(19, 111, 69, 1)",
      "color-bg-success-strong-active-experimental": "rgba(12, 81, 50, 1)",
      "color-bg-warning-subdued-experimental": "rgba(255, 241, 227, 1)",
      "color-bg-warning-strong-experimental": "rgba(255, 184, 0, 1)",
      "color-text-warning-experimental": "rgba(65, 45, 0, 1)",
      "color-text-critical-hover-experimental": "rgba(95, 21, 7, 1)",
      "color-icon-info-strong-experimental": "rgba(0, 82, 124, 1)",
      "color-icon-warning-strong-experimental": "rgba(124, 88, 0, 1)",
      "color-icon-success-strong-experimental": "rgba(12, 81, 50, 1)",
      "color-icon-critical-strong-experimental": "rgba(142, 31, 11, 1)",
      "color-icon-critical-strong-hover-experimental": "rgba(95, 21, 7, 1)",
      "color-icon-critical-strong-active-experimental": "rgba(47, 10, 4, 1)",
      "color-avatar-background-experimental": "rgba(181, 181, 181, 1)",
      "color-avatar-color-experimental": "rgba(255, 255, 255, 1)",
      "color-avatar-style-one-background-experimental": "rgba(251, 207, 251, 1)",
      "color-avatar-style-one-color-experimental": "rgba(121, 26, 121, 1)",
      "color-avatar-style-two-background-experimental": "rgba(56, 250, 163, 1)",
      "color-avatar-style-two-color-experimental": "rgba(12, 81, 50, 1)",
      "color-avatar-style-three-background-experimental": "rgba(146, 237, 222, 1)",
      "color-avatar-style-three-color-experimental": "rgba(9, 83, 70, 1)",
      "color-avatar-style-four-background-experimental": "rgba(192, 225, 255, 1)",
      "color-avatar-style-four-color-experimental": "rgba(0, 82, 124, 1)",
      "color-avatar-style-five-background-experimental": "rgba(254, 209, 221, 1)",
      "color-avatar-style-five-color-experimental": "rgba(141, 4, 72, 1)"
    },
    "font": {
      "font-family-sans": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
      "font-size-275": "11px",
      "font-size-325": "13px",
      "font-size-350": "14px",
      "font-size-750": "30px",
      "font-size-900": "36px",
      "font-size-1000": "40px",
      "font-size-70-experimental": "0.6875rem",
      "font-size-75": "0.75rem",
      "font-size-80-experimental": "0.8125rem",
      "font-size-100": "0.875rem",
      "font-size-200": "1rem",
      "font-size-300": "1.25rem",
      "font-size-400": "1.5rem",
      "font-size-500": "30px",
      "font-size-600": "36px",
      "font-size-700": "2.5rem",
      "font-weight-regular": "400",
      "font-weight-medium": "500",
      "font-weight-semibold": "600",
      "font-weight-bold": "700",
      "font-letter-spacing-densest": "-0.03375rem",
      "font-letter-spacing-denser": "-0.01875rem",
      "font-letter-spacing-dense": "-0.0125rem",
      "font-letter-spacing-normal": "0rem",
      "font-line-height-300": "12px",
      "font-line-height-400": "16px",
      "font-line-height-500": "20px",
      "font-line-height-600": "24px",
      "font-line-height-700": "28px",
      "font-line-height-800": "32px",
      "font-line-height-1000": "40px",
      "font-line-height-1200": "48px",
      "font-line-height-075-experimental": "0.75rem",
      "font-line-height-1": "1rem",
      "font-line-height-2": "1.25rem",
      "font-line-height-3": "1.5rem",
      "font-line-height-4": "1.75rem",
      "font-line-height-5": "2rem",
      "font-line-height-6": "2.5rem",
      "font-line-height-7": "3rem"
    },
    "height": {
      "height-0": "0rem",
      "height-025": "0.0625rem",
      "height-050": "0.125rem",
      "height-100": "0.25rem",
      "height-150": "0.375rem",
      "height-200": "0.5rem",
      "height-300": "0.75rem",
      "height-400": "1rem",
      "height-500": "1.25rem",
      "height-600": "1.5rem",
      "height-700": "1.75rem",
      "height-800": "2rem",
      "height-900": "2.25rem",
      "height-1000": "2.5rem",
      "height-1200": "3rem",
      "height-1600": "4rem",
      "height-2000": "5rem",
      "height-2400": "6rem",
      "height-2800": "7rem",
      "height-3200": "8rem"
    },
    "motion": {
      "motion-duration-0": "0ms",
      "motion-duration-50": "50ms",
      "motion-duration-100": "100ms",
      "motion-duration-150": "150ms",
      "motion-duration-200": "200ms",
      "motion-duration-250": "250ms",
      "motion-duration-300": "300ms",
      "motion-duration-350": "350ms",
      "motion-duration-400": "400ms",
      "motion-duration-450": "450ms",
      "motion-duration-500": "500ms",
      "motion-duration-5000": "5000ms",
      "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
      "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
      "motion-ease-out": "cubic-bezier(0.19, 0.91, 0.38, 1)",
      "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
      "motion-linear": "cubic-bezier(0, 0, 1, 1)",
      "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
      "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
      "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
      "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
      "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
      "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
    },
    "shadow": {
      "shadow-0": "none",
      "shadow-100": "0rem 0rem 0.125rem rgba(31, 33, 36, 0.24)",
      "shadow-200": "0rem 0.0625rem 0.0625rem rgba(31, 33, 36, 0.1)",
      "shadow-300": "0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.1), 0rem 0.0625rem 0.375rem rgba(31, 33, 36, 0.05)",
      "shadow-400": "0rem 0.25rem 0.75rem rgba(31, 33, 36, 0.2), 0rem 0.125rem 0.375rem rgba(31, 33, 36, 0.05)",
      "shadow-500": "0rem 0.25rem 1.125rem -0.125rem rgba(31, 33, 36, 0.08), 0rem 0.75rem 1.125rem -0.125rem rgba(31, 33, 36, 0.15)",
      "shadow-600": "0rem 2rem 2rem rgba(31, 33, 36, 0.15), 0rem 2rem 3.5rem -0.125rem rgba(31, 33, 36, 0.16)",
      "shadow-bevel-100": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
      "shadow-inset-100": "inset 0rem 0rem 0.1875rem rgba(31, 33, 36, 0.56)",
      "shadow-inset-200": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
      "shadow-button": "inset 0rem -0.0625rem 0rem #B5B5B5, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
      "shadow-button-hover": "inset 0rem -0.0625rem 0rem #CCCCCC, inset 0.0625rem 0rem 0rem #EBEBEB, inset -0.0625rem 0rem 0rem #EBEBEB, inset 0rem 0.0625rem 0rem #EBEBEB",
      "shadow-button-inset": "inset 0rem 0.125rem 0.25rem rgba(31, 33, 36, 0.32)",
      "shadow-button-primary": "0rem 0.125rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.0625rem 0rem 0.0625rem #000 inset, 0rem 0.0625rem 0rem 0rem #000 inset",
      "shadow-button-primary-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0rem 0rem 0.03125rem #1A1A1A",
      "shadow-button-primary-inset": "0rem 0.1875rem 0rem 0rem #000 inset",
      "shadow-button-primary-critical": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
      "shadow-button-primary-critical-hover": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
      "shadow-button-primary-critical-inset": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
      "shadow-button-primary-success": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
      "shadow-button-primary-success-hover": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
      "shadow-button-primary-success-inset": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
      "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset",
      "shadow-inset-lg": "inset -1px 0px 1px rgba(0, 0, 0, 0.2), inset 1px 0px 1px rgba(0, 0, 0, 0.2), inset 0px 2px 1px rgba(0, 0, 0, 0.6)",
      "shadow-inset-md": "inset -1px 0px 1px rgba(0, 0, 0, 0.12), inset 1px 0px 1px rgba(0, 0, 0, 0.12), inset 0px 2px 1px rgba(0, 0, 0, 0.2)",
      "shadow-inset-sm": "inset 0px 1px 1px rgba(0, 0, 0, 0.15), inset 0px 1px 2px rgba(255, 255, 255, 0.15)",
      "shadow-none": "none",
      "shadow-xs": "0px 1px 0px rgba(0, 0, 0, 0.07)",
      "shadow-sm": "0px 3px 1px -1px rgba(0, 0, 0, 0.07)",
      "shadow-md": "0px 4px 6px -2px rgba(0, 0, 0, 0.2)",
      "shadow-lg": "0px 8px 16px -4px rgba(0, 0, 0, 0.22)",
      "shadow-xl": "0px 12px 20px -8px rgba(0, 0, 0, 0.24)",
      "shadow-2xl": "0px 20px 20px -8px rgba(0, 0, 0, 0.28)",
      "shadow-bevel-experimental": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
      "shadow-card-sm-experimental": "0rem 0.125rem 0rem rgba(0, 0, 0, 0.07), 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.07), 0.0625rem 0rem 0rem #E3E3E3, -0.0625rem 0rem 0rem #E3E3E3, 0rem -0.0625rem 0rem #E3E3E3",
      "shadow-card-md-experimental": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(0, 0, 0, 0.07),  0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.16),  0.0625rem 0rem 0rem 0rem rgba(227, 227, 227, 1),  -0.0625rem 0rem 0rem 0rem rgba(227, 227, 227, 1),  0rem 0.0625rem 0rem 0rem rgba(227, 227, 227, 1)",
      "shadow-card-lg-experimental": "0rem 0.25rem 0.375rem -0.125rem rgba(0, 0, 0, 0.2), inset 0rem -0.0625rem 0rem #D4D4D4, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
      "shadow-button-experimental": "inset 0rem -0.0625rem 0rem #B5B5B5, inset -0.0625rem 0rem 0rem #E3E3E3, inset 0.0625rem 0rem 0rem #E3E3E3, inset 0rem 0.0625rem 0rem #E3E3E3",
      "shadow-button-hover-experimental": "inset 0rem -0.0625rem 0rem #cccccc, inset 0.0625rem 0rem 0rem #ebebeb, inset -0.0625rem 0rem 0rem #ebebeb, inset 0rem 0.0625rem 0rem #ebebeb",
      "shadow-button-disabled-experimental": "inset 0rem 0rem 0rem 0.0625rem rgba(227, 227, 227, 1)",
      "shadow-button-primary-strong-inset-experimental": "0rem 0.1875rem 0rem 0rem #000 inset",
      "shadow-button-primary-strong-hover-experimental": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.16) inset, 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0rem 0rem 0.03125rem #1A1A1A",
      "shadow-button-primary-strong-experimental": "0rem 0.125rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.125rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.0625rem 0rem 0.0625rem #000 inset, 0rem 0.0625rem 0rem 0rem #000 inset",
      "shadow-button-primary-experimental": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.4) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.2) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
      "shadow-button-primary-hover-experimental": "-0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem 0.03125rem 0rem 0rem rgba(0, 0, 0, 0.25), 0rem -0.09375rem 0rem 0rem rgba(255, 255, 255, 0.07) inset, 0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset",
      "shadow-button-inset-experimental": "0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.60) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.20) inset",
      "shadow-border-inset-experimental": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
    },
    "space": {
      "space-0": "0rem",
      "space-025": "0.0625rem",
      "space-050": "2px",
      "space-100": "4px",
      "space-150": "6px",
      "space-200": "8px",
      "space-300": "12px",
      "space-400": "16px",
      "space-500": "20px",
      "space-600": "24px",
      "space-800": "32px",
      "space-1000": "40px",
      "space-1200": "48px",
      "space-1600": "64px",
      "space-2000": "80px",
      "space-2400": "96px",
      "space-2800": "112px",
      "space-3200": "128px",
      "space-button-group-gap": "8px",
      "space-card-gap": "16px",
      "space-card-padding": "16px",
      "space-table-cell-padding": "6px",
      "space-05": "0.125rem",
      "space-1": "0.25rem",
      "space-1_5-experimental": "0.375rem",
      "space-2": "0.5rem",
      "space-3": "0.75rem",
      "space-4": "1rem",
      "space-5": "1.25rem",
      "space-6": "1.5rem",
      "space-8": "2rem",
      "space-10": "2.5rem",
      "space-12": "3rem",
      "space-16": "4rem",
      "space-20": "5rem",
      "space-24": "6rem",
      "space-28": "7rem",
      "space-32": "8rem"
    },
    "text": {
      "text-heading-3xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-3xl-font-size": "36px",
      "text-heading-3xl-font-weight": "700",
      "text-heading-3xl-font-letter-spacing": "-0.03375rem",
      "text-heading-3xl-font-line-height": "48px",
      "text-heading-2xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-2xl-font-size": "30px",
      "text-heading-2xl-font-weight": "700",
      "text-heading-2xl-font-letter-spacing": "-0.01875rem",
      "text-heading-2xl-font-line-height": "40px",
      "text-heading-xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-xl-font-size": "36px",
      "text-heading-xl-font-weight": "700",
      "text-heading-xl-font-letter-spacing": "-0.0125rem",
      "text-heading-xl-font-line-height": "32px",
      "text-heading-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-lg-font-size": "30px",
      "text-heading-lg-font-weight": "600",
      "text-heading-lg-font-letter-spacing": "-0.0125rem",
      "text-heading-lg-font-line-height": "24px",
      "text-heading-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-md-font-size": "14px",
      "text-heading-md-font-weight": "600",
      "text-heading-md-font-letter-spacing": "0rem",
      "text-heading-md-font-line-height": "20px",
      "text-heading-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-heading-sm-font-size": "13px",
      "text-heading-sm-font-weight": "600",
      "text-heading-sm-font-letter-spacing": "0rem",
      "text-heading-sm-font-line-height": "20px",
      "text-body-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-lg-font-size": "14px",
      "text-body-lg-font-weight": "400",
      "text-body-lg-font-letter-spacing": "0rem",
      "text-body-lg-font-line-height": "20px",
      "text-body-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-md-font-size": "13px",
      "text-body-md-font-weight": "400",
      "text-body-md-font-letter-spacing": "0rem",
      "text-body-md-font-line-height": "20px",
      "text-body-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-sm-font-size": "1.25rem",
      "text-body-sm-font-weight": "400",
      "text-body-sm-font-letter-spacing": "0rem",
      "text-body-sm-font-line-height": "16px",
      "text-body-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
      "text-body-xs-font-size": "11px",
      "text-body-xs-font-weight": "400",
      "text-body-xs-font-letter-spacing": "0rem",
      "text-body-xs-font-line-height": "12px"
    },
    "width": {
      "width-0": "0rem",
      "width-025": "0.0625rem",
      "width-050": "0.125rem",
      "width-100": "0.25rem",
      "width-150": "0.375rem",
      "width-200": "0.5rem",
      "width-300": "0.75rem",
      "width-400": "1rem",
      "width-500": "1.25rem",
      "width-600": "1.5rem",
      "width-700": "1.75rem",
      "width-800": "2rem",
      "width-900": "2.25rem",
      "width-1000": "2.5rem",
      "width-1200": "3rem",
      "width-1600": "4rem",
      "width-2000": "5rem",
      "width-2400": "6rem",
      "width-2800": "7rem",
      "width-3200": "8rem"
    },
    "zIndex": {
      "z-index-1": "100",
      "z-index-2": "400",
      "z-index-3": "510",
      "z-index-4": "512",
      "z-index-5": "513",
      "z-index-6": "514",
      "z-index-7": "515",
      "z-index-8": "516",
      "z-index-9": "517",
      "z-index-10": "518",
      "z-index-11": "519",
      "z-index-12": "520"
    }
  }
};

// node_modules/@shopify/polaris/build/esm/utilities/use-theme.js
function getTheme(themeName) {
  return themes[themeName];
}
var ThemeContext = (0, import_react4.createContext)(null);
function useTheme() {
  const theme = (0, import_react4.useContext)(ThemeContext);
  if (!theme) {
    throw new Error("No theme was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return theme;
}

// node_modules/@shopify/polaris/build/esm/utilities/use-index-resource-state.js
var import_react5 = __toESM(require_react());
var SelectionType;
(function(SelectionType3) {
  SelectionType3["All"] = "all";
  SelectionType3["Page"] = "page";
  SelectionType3["Multi"] = "multi";
  SelectionType3["Single"] = "single";
  SelectionType3["Range"] = "range";
})(SelectionType || (SelectionType = {}));
function defaultResourceIDResolver(resource) {
  if ("id" in resource) {
    return resource.id;
  }
  throw new Error("Your resource does not directly contain an `id`. Pass a `resourceIDResolver` to `useIndexResourceState`");
}
function useIndexResourceState(resources, {
  selectedResources: initSelectedResources = [],
  allResourcesSelected: initAllResourcesSelected = false,
  resourceIDResolver = defaultResourceIDResolver,
  resourceFilter = void 0
} = {
  selectedResources: [],
  allResourcesSelected: false,
  resourceIDResolver: defaultResourceIDResolver,
  resourceFilter: void 0
}) {
  const [selectedResources, setSelectedResources] = (0, import_react5.useState)(initSelectedResources);
  const [allResourcesSelected, setAllResourcesSelected] = (0, import_react5.useState)(initAllResourcesSelected);
  const handleSelectionChange = (0, import_react5.useCallback)((selectionType, isSelecting, selection) => {
    if (selectionType === SelectionType.All) {
      setAllResourcesSelected(isSelecting);
    } else if (allResourcesSelected) {
      setAllResourcesSelected(false);
    }
    switch (selectionType) {
      case SelectionType.Single:
        setSelectedResources((newSelectedResources) => isSelecting ? [...newSelectedResources, selection] : newSelectedResources.filter((id) => id !== selection));
        break;
      case SelectionType.All:
      case SelectionType.Page:
        if (resourceFilter) {
          const filteredResources = resources.filter(resourceFilter);
          setSelectedResources(isSelecting && selectedResources.length < filteredResources.length ? filteredResources.map(resourceIDResolver) : []);
        } else {
          setSelectedResources(isSelecting ? resources.map(resourceIDResolver) : []);
        }
        break;
      case SelectionType.Multi:
        if (!selection)
          break;
        setSelectedResources((currentSelectedResources) => {
          const ids = [];
          const filteredResources = resourceFilter ? resources.filter(resourceFilter) : resources;
          for (let i = selection[0]; i <= selection[1]; i++) {
            if (filteredResources.includes(resources[i])) {
              const id = resourceIDResolver(resources[i]);
              if (isSelecting && !currentSelectedResources.includes(id) || !isSelecting && currentSelectedResources.includes(id)) {
                ids.push(id);
              }
            }
          }
          return isSelecting ? [...currentSelectedResources, ...ids] : currentSelectedResources.filter((id) => !ids.includes(id));
        });
        break;
      case SelectionType.Range:
        if (!selection)
          break;
        setSelectedResources((currentSelectedResources) => {
          const filteredResources = resourceFilter ? resources.filter(resourceFilter) : resources;
          const resourceIds = filteredResources.map(resourceIDResolver);
          const selectedIds = resourceIds.slice(Number(selection[0]), Number(selection[1]) + 1);
          const isIndeterminate = selectedIds.some((id) => {
            return selectedResources.includes(id);
          });
          const isChecked = selectedIds.every((id) => {
            return selectedResources.includes(id);
          });
          const isSelectingAllInRange = !isChecked && (isSelecting || isIndeterminate);
          const nextSelectedResources = isSelectingAllInRange ? [...(/* @__PURE__ */ new Set([...currentSelectedResources, ...selectedIds])).values()] : currentSelectedResources.filter((id) => !selectedIds.includes(id));
          return nextSelectedResources;
        });
        break;
    }
  }, [allResourcesSelected, resourceFilter, selectedResources, resources, resourceIDResolver]);
  const clearSelection = (0, import_react5.useCallback)(() => {
    setSelectedResources([]);
    setAllResourcesSelected(false);
  }, []);
  const removeSelectedResources = (0, import_react5.useCallback)((removeResources) => {
    const selectedResourcesCopy = [...selectedResources];
    const newSelectedResources = selectedResourcesCopy.filter((resource) => !removeResources.includes(resource));
    setSelectedResources(newSelectedResources);
    if (newSelectedResources.length === 0) {
      setAllResourcesSelected(false);
    }
  }, [selectedResources]);
  return {
    selectedResources,
    allResourcesSelected,
    handleSelectionChange,
    clearSelection,
    removeSelectedResources
  };
}

// node_modules/@shopify/polaris/build/esm/utilities/breakpoints.js
var import_react6 = __toESM(require_react());
var Breakpoints = {
  // TODO: Update to smDown
  navigationBarCollapsed: "767.95px",
  // TODO: Update to lgDown
  stackedContent: "1039.95px"
};
var noWindowMatches = {
  media: "",
  addListener: noop,
  removeListener: noop,
  matches: false,
  onchange: noop,
  addEventListener: noop,
  removeEventListener: noop,
  dispatchEvent: (_) => true
};
function noop() {
}
function navigationBarCollapsed() {
  return typeof window === "undefined" ? noWindowMatches : window.matchMedia(`(max-width: ${Breakpoints.navigationBarCollapsed})`);
}
function stackedContent() {
  return typeof window === "undefined" ? noWindowMatches : window.matchMedia(`(max-width: ${Breakpoints.stackedContent})`);
}
var breakpointsQueryEntries = getBreakpointsQueryEntries(breakpoints2);
function getMatches(defaults) {
  if (!isServer) {
    return Object.fromEntries(breakpointsQueryEntries.map(([directionAlias, query]) => [directionAlias, window.matchMedia(query).matches]));
  }
  if (typeof defaults === "object" && defaults !== null) {
    return Object.fromEntries(breakpointsQueryEntries.map(([directionAlias]) => [directionAlias, defaults[directionAlias] ?? false]));
  }
  return Object.fromEntries(breakpointsQueryEntries.map(([directionAlias]) => [directionAlias, defaults ?? false]));
}
function useBreakpoints(options) {
  const [breakpoints3, setBreakpoints] = (0, import_react6.useState)(getMatches(options == null ? void 0 : options.defaults));
  useIsomorphicLayoutEffect(() => {
    const mediaQueryLists = breakpointsQueryEntries.map(([_, query]) => window.matchMedia(query));
    const handler = () => setBreakpoints(getMatches());
    mediaQueryLists.forEach((mql) => {
      if (mql.addListener) {
        mql.addListener(handler);
      } else {
        mql.addEventListener("change", handler);
      }
    });
    return () => {
      mediaQueryLists.forEach((mql) => {
        if (mql.removeListener) {
          mql.removeListener(handler);
        } else {
          mql.removeEventListener("change", handler);
        }
      });
    };
  }, []);
  return breakpoints3;
}
function getBreakpointsQueryEntries(breakpoints3) {
  const mediaConditionEntries = Object.entries(getMediaConditions(breakpoints3));
  return mediaConditionEntries.map(([breakpointsToken, mediaConditions]) => Object.entries(mediaConditions).map(([direction, mediaCondition]) => {
    const breakpointsAlias = breakpointsToken.split("-")[1];
    const directionAlias = `${breakpointsAlias}${capitalize(direction)}`;
    return [directionAlias, mediaCondition];
  })).flat();
}
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

// node_modules/@shopify/polaris/build/esm/components/AppProvider/AppProvider.js
var import_react25 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/features/context.js
var import_react7 = __toESM(require_react());
var classNamePolarisSummerEditions2023 = "Polaris-Summer-Editions-2023";
var classNamePolarisSummerEditions2023ShadowBevelOptOut = "Polaris-SE23-Shadow-Bevel-Opt-Out";
var FeaturesContext = (0, import_react7.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/debounce.js
function debounce(func, waitArg, options) {
  let lastArgs;
  let lastThis;
  let maxWait;
  let result;
  let timerId;
  let lastCallTime;
  let lastInvokeTime = 0;
  let leading = false;
  let maxing = false;
  let trailing = true;
  const useRAF = !waitArg && waitArg !== 0;
  if (typeof func !== "function") {
    throw new TypeError("Expected a function");
  }
  const wait = waitArg || 0;
  if (typeof options === "object") {
    leading = Boolean(options.leading);
    maxing = "maxWait" in options;
    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : void 0;
    trailing = "trailing" in options ? Boolean(options.trailing) : trailing;
  }
  function invokeFunc(time) {
    const args = lastArgs;
    const thisArg = lastThis;
    lastArgs = void 0;
    lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function startTimer(pendingFunc, wait2) {
    if (useRAF) {
      cancelAnimationFrame(timerId);
      return requestAnimationFrame(pendingFunc);
    }
    return setTimeout(pendingFunc, wait2);
  }
  function cancelTimer(id) {
    if (useRAF) {
      return cancelAnimationFrame(id);
    }
    clearTimeout(id);
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = startTimer(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    const timeSinceLastCall = time - lastCallTime;
    const timeSinceLastInvoke = time - lastInvokeTime;
    const timeWaiting = wait - timeSinceLastCall;
    return maxing && maxWait ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    const timeSinceLastCall = time - lastCallTime;
    const timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && maxWait && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    const time = Date.now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = startTimer(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      cancelTimer(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(Date.now());
  }
  function pending() {
    return timerId !== void 0;
  }
  function debounced(...args) {
    const time = Date.now();
    const isInvoking = shouldInvoke(time);
    lastArgs = args;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        timerId = startTimer(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = startTimer(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  debounced.pending = pending;
  return debounced;
}

// node_modules/@shopify/polaris/build/esm/utilities/geometry.js
var Rect = class _Rect {
  static get zero() {
    return new _Rect();
  }
  constructor({
    top = 0,
    left = 0,
    width: width2 = 0,
    height: height2 = 0
  } = {}) {
    this.top = top;
    this.left = left;
    this.width = width2;
    this.height = height2;
  }
  get center() {
    return {
      x: this.left + this.width / 2,
      y: this.top + this.height / 2
    };
  }
};
function getRectForNode(node) {
  if (!(node instanceof Element)) {
    return new Rect({
      width: window.innerWidth,
      height: window.innerHeight
    });
  }
  const rect = node.getBoundingClientRect();
  return new Rect({
    top: rect.top,
    left: rect.left,
    width: rect.width,
    height: rect.height
  });
}

// node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/sticky-manager.js
var SIXTY_FPS = 1e3 / 60;
var StickyManager = class {
  constructor(container) {
    this.stickyItems = [];
    this.stuckItems = [];
    this.container = null;
    this.topBarOffset = 0;
    this.handleResize = debounce(() => {
      this.manageStickyItems();
    }, SIXTY_FPS, {
      leading: true,
      trailing: true,
      maxWait: SIXTY_FPS
    });
    this.handleScroll = debounce(() => {
      this.manageStickyItems();
    }, SIXTY_FPS, {
      leading: true,
      trailing: true,
      maxWait: SIXTY_FPS
    });
    if (container) {
      this.setContainer(container);
    }
  }
  registerStickyItem(stickyItem) {
    this.stickyItems.push(stickyItem);
  }
  unregisterStickyItem(nodeToRemove) {
    const nodeIndex = this.stickyItems.findIndex(({
      stickyNode
    }) => nodeToRemove === stickyNode);
    this.stickyItems.splice(nodeIndex, 1);
  }
  setContainer(el) {
    this.container = el;
    if (isDocument(el)) {
      this.setTopBarOffset(el);
    }
    this.container.addEventListener("scroll", this.handleScroll);
    window.addEventListener("resize", this.handleResize);
    this.manageStickyItems();
  }
  removeScrollListener() {
    if (this.container) {
      this.container.removeEventListener("scroll", this.handleScroll);
      window.removeEventListener("resize", this.handleResize);
    }
  }
  manageStickyItems() {
    if (this.stickyItems.length <= 0) {
      return;
    }
    const scrollTop = this.container ? scrollTopFor(this.container) : 0;
    const containerTop = getRectForNode(this.container).top + this.topBarOffset;
    this.stickyItems.forEach((stickyItem) => {
      const {
        handlePositioning
      } = stickyItem;
      const {
        sticky,
        top,
        left,
        width: width2
      } = this.evaluateStickyItem(stickyItem, scrollTop, containerTop);
      this.updateStuckItems(stickyItem, sticky);
      handlePositioning(sticky, top, left, width2);
    });
  }
  evaluateStickyItem(stickyItem, scrollTop, containerTop) {
    var _a;
    const {
      stickyNode,
      placeHolderNode,
      boundingElement,
      offset,
      disableWhenStacked
    } = stickyItem;
    if (disableWhenStacked && stackedContent().matches) {
      return {
        sticky: false,
        top: 0,
        left: 0,
        width: "auto"
      };
    }
    const stickyOffset = offset ? this.getOffset(stickyNode) + parseInt(space2["space-5"], 10) : this.getOffset(stickyNode);
    const scrollPosition2 = scrollTop + stickyOffset;
    const placeHolderNodeCurrentTop = placeHolderNode.getBoundingClientRect().top - containerTop + scrollTop;
    const top = containerTop + stickyOffset;
    const width2 = placeHolderNode.getBoundingClientRect().width;
    const left = placeHolderNode.getBoundingClientRect().left;
    let sticky;
    if (boundingElement == null) {
      sticky = scrollPosition2 >= placeHolderNodeCurrentTop;
    } else {
      const stickyItemHeight = stickyNode.getBoundingClientRect().height || ((_a = stickyNode.firstElementChild) == null ? void 0 : _a.getBoundingClientRect().height) || 0;
      const stickyItemBottomPosition = boundingElement.getBoundingClientRect().bottom - stickyItemHeight + scrollTop - containerTop;
      sticky = scrollPosition2 >= placeHolderNodeCurrentTop && scrollPosition2 < stickyItemBottomPosition;
    }
    return {
      sticky,
      top,
      left,
      width: width2
    };
  }
  updateStuckItems(item, sticky) {
    const {
      stickyNode
    } = item;
    if (sticky && !this.isNodeStuck(stickyNode)) {
      this.addStuckItem(item);
    } else if (!sticky && this.isNodeStuck(stickyNode)) {
      this.removeStuckItem(item);
    }
  }
  addStuckItem(stickyItem) {
    this.stuckItems.push(stickyItem);
  }
  removeStuckItem(stickyItem) {
    const {
      stickyNode: nodeToRemove
    } = stickyItem;
    const nodeIndex = this.stuckItems.findIndex(({
      stickyNode
    }) => nodeToRemove === stickyNode);
    this.stuckItems.splice(nodeIndex, 1);
  }
  getOffset(node) {
    if (this.stuckItems.length === 0) {
      return 0;
    }
    let offset = 0;
    let count = 0;
    const stuckNodesLength = this.stuckItems.length;
    const nodeRect = getRectForNode(node);
    while (count < stuckNodesLength) {
      const stuckNode = this.stuckItems[count].stickyNode;
      if (stuckNode !== node) {
        const stuckNodeRect = getRectForNode(stuckNode);
        if (!horizontallyOverlaps(nodeRect, stuckNodeRect)) {
          offset += getRectForNode(stuckNode).height;
        }
      } else {
        break;
      }
      count++;
    }
    return offset;
  }
  isNodeStuck(node) {
    const nodeFound = this.stuckItems.findIndex(({
      stickyNode
    }) => node === stickyNode);
    return nodeFound >= 0;
  }
  setTopBarOffset(container) {
    const topbarElement = container.querySelector(`:not(${scrollable.selector}) ${dataPolarisTopBar.selector}`);
    this.topBarOffset = topbarElement ? topbarElement.clientHeight : 0;
  }
};
function isDocument(node) {
  return node === document;
}
function scrollTopFor(container) {
  return isDocument(container) ? document.body.scrollTop || document.documentElement.scrollTop : container.scrollTop;
}
function horizontallyOverlaps(rect1, rect2) {
  const rect1Left = rect1.left;
  const rect1Right = rect1.left + rect1.width;
  const rect2Left = rect2.left;
  const rect2Right = rect2.left + rect2.width;
  return rect2Right < rect1Left || rect1Right < rect2Left;
}

// node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/scroll-lock-manager.js
var SCROLL_LOCKING_ATTRIBUTE = "data-lock-scrolling";
var SCROLL_LOCKING_HIDDEN_ATTRIBUTE = "data-lock-scrolling-hidden";
var SCROLL_LOCKING_WRAPPER_ATTRIBUTE = "data-lock-scrolling-wrapper";
var scrollPosition = 0;
function isScrollBarVisible() {
  const {
    body
  } = document;
  return body.scrollHeight > body.clientHeight;
}
var ScrollLockManager = class {
  constructor() {
    this.scrollLocks = 0;
    this.locked = false;
  }
  registerScrollLock() {
    this.scrollLocks += 1;
    this.handleScrollLocking();
  }
  unregisterScrollLock() {
    this.scrollLocks -= 1;
    this.handleScrollLocking();
  }
  handleScrollLocking() {
    if (isServer)
      return;
    const {
      scrollLocks
    } = this;
    const {
      body
    } = document;
    const wrapper = body.firstElementChild;
    if (scrollLocks === 0) {
      body.removeAttribute(SCROLL_LOCKING_ATTRIBUTE);
      body.removeAttribute(SCROLL_LOCKING_HIDDEN_ATTRIBUTE);
      if (wrapper) {
        wrapper.removeAttribute(SCROLL_LOCKING_WRAPPER_ATTRIBUTE);
      }
      window.scroll(0, scrollPosition);
      this.locked = false;
    } else if (scrollLocks > 0 && !this.locked) {
      scrollPosition = window.pageYOffset;
      body.setAttribute(SCROLL_LOCKING_ATTRIBUTE, "");
      if (!isScrollBarVisible()) {
        body.setAttribute(SCROLL_LOCKING_HIDDEN_ATTRIBUTE, "");
      }
      if (wrapper) {
        wrapper.setAttribute(SCROLL_LOCKING_WRAPPER_ATTRIBUTE, "");
        wrapper.scrollTop = scrollPosition;
      }
      this.locked = true;
    }
  }
  resetScrollPosition() {
    scrollPosition = 0;
  }
};

// node_modules/@shopify/polaris/build/esm/utilities/get.js
var OBJECT_NOTATION_MATCHER = /\[(.*?)\]|(\w+)/g;
function get(obj, keypath, defaultValue) {
  if (obj == null)
    return void 0;
  const keys = Array.isArray(keypath) ? keypath : getKeypath(keypath);
  let acc = obj;
  for (let i = 0; i < keys.length; i++) {
    const val = acc[keys[i]];
    if (val === void 0)
      return defaultValue;
    acc = val;
  }
  return acc;
}
function getKeypath(str) {
  const path = [];
  let result;
  while (result = OBJECT_NOTATION_MATCHER.exec(str)) {
    const [, first, second] = result;
    path.push(first || second);
  }
  return path;
}

// node_modules/@shopify/polaris/build/esm/utilities/merge.js
function merge(...objs) {
  let final = {};
  for (const obj of objs) {
    final = mergeRecursively(final, obj);
  }
  return final;
}
function mergeRecursively(inputObjA, objB) {
  const objA = Array.isArray(inputObjA) ? [...inputObjA] : {
    ...inputObjA
  };
  for (const key in objB) {
    if (!Object.prototype.hasOwnProperty.call(objB, key)) {
      continue;
    } else if (isMergeableValue(objB[key]) && isMergeableValue(objA[key])) {
      objA[key] = mergeRecursively(objA[key], objB[key]);
    } else {
      objA[key] = objB[key];
    }
  }
  return objA;
}
function isMergeableValue(value) {
  return value !== null && typeof value === "object";
}

// node_modules/@shopify/polaris/build/esm/utilities/i18n/I18n.js
var REPLACE_REGEX = /{([^}]*)}/g;
var I18n = class {
  /**
   * @param translation A locale object or array of locale objects that overrides default translations. If specifying an array then your desired language dictionary should come first, followed by your fallback language dictionaries
   */
  constructor(translation) {
    this.translation = {};
    this.translation = Array.isArray(translation) ? merge(...translation.slice().reverse()) : translation;
  }
  translate(id, replacements) {
    const text2 = get(this.translation, id, "");
    if (!text2) {
      return "";
    }
    if (replacements) {
      return text2.replace(REPLACE_REGEX, (match) => {
        const replacement = match.substring(1, match.length - 1);
        if (replacements[replacement] === void 0) {
          const replacementData = JSON.stringify(replacements);
          throw new Error(`Error in translation for key '${id}'. No replacement found for key '${replacement}'. The following replacements were passed: '${replacementData}'`);
        }
        return replacements[replacement];
      });
    }
    return text2;
  }
  translationKeyExists(path) {
    return Boolean(get(this.translation, path));
  }
};

// node_modules/@shopify/polaris/build/esm/utilities/i18n/context.js
var import_react8 = __toESM(require_react());
var I18nContext = (0, import_react8.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/context.js
var import_react9 = __toESM(require_react());
var ScrollLockManagerContext = (0, import_react9.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/context.js
var import_react10 = __toESM(require_react());
var StickyManagerContext = (0, import_react10.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/link/context.js
var import_react11 = __toESM(require_react());
var LinkContext = (0, import_react11.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/components/MediaQueryProvider/MediaQueryProvider.js
var import_react14 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/media-query/context.js
var import_react12 = __toESM(require_react());
var MediaQueryContext = (0, import_react12.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/components/EventListener/EventListener.js
var import_react13 = __toESM(require_react());
var EventListener = class extends import_react13.PureComponent {
  componentDidMount() {
    this.attachListener();
  }
  componentDidUpdate({
    passive,
    ...detachProps
  }) {
    this.detachListener(detachProps);
    this.attachListener();
  }
  componentWillUnmount() {
    this.detachListener();
  }
  render() {
    return null;
  }
  attachListener() {
    const {
      event,
      handler,
      capture,
      passive
    } = this.props;
    window.addEventListener(event, handler, {
      capture,
      passive
    });
  }
  detachListener(prevProps) {
    const {
      event,
      handler,
      capture
    } = prevProps || this.props;
    window.removeEventListener(event, handler, capture);
  }
};

// node_modules/@shopify/polaris/build/esm/components/MediaQueryProvider/MediaQueryProvider.js
var MediaQueryProvider = function MediaQueryProvider2({
  children: children2
}) {
  const [isNavigationCollapsed, setIsNavigationCollapsed] = (0, import_react14.useState)(navigationBarCollapsed().matches);
  const handleResize = (0, import_react14.useCallback)(debounce(() => {
    if (isNavigationCollapsed !== navigationBarCollapsed().matches) {
      setIsNavigationCollapsed(!isNavigationCollapsed);
    }
  }, 40, {
    trailing: true,
    leading: true,
    maxWait: 40
  }), [isNavigationCollapsed]);
  (0, import_react14.useEffect)(() => {
    setIsNavigationCollapsed(navigationBarCollapsed().matches);
  }, []);
  const context = (0, import_react14.useMemo)(() => ({
    isNavigationCollapsed
  }), [isNavigationCollapsed]);
  return import_react14.default.createElement(MediaQueryContext.Provider, {
    value: context
  }, import_react14.default.createElement(EventListener, {
    event: "resize",
    handler: handleResize
  }), children2);
};

// node_modules/@shopify/polaris/build/esm/components/PortalsManager/PortalsManager.js
var import_react18 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-is-after-initial-mount.js
var import_react15 = __toESM(require_react());
function useIsAfterInitialMount() {
  const [isAfterInitialMount, setIsAfterInitialMount] = (0, import_react15.useState)(false);
  (0, import_react15.useEffect)(() => {
    setIsAfterInitialMount(true);
  }, []);
  return isAfterInitialMount;
}

// node_modules/@shopify/polaris/build/esm/utilities/portals/context.js
var import_react16 = __toESM(require_react());
var PortalsManagerContext = (0, import_react16.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/components/PortalsManager/components/PortalsContainer/PortalsContainer.js
var import_react17 = __toESM(require_react());
function PortalsContainerComponent(_props, ref) {
  return import_react17.default.createElement("div", {
    id: "PolarisPortalsContainer",
    ref
  });
}
var PortalsContainer = (0, import_react17.forwardRef)(PortalsContainerComponent);

// node_modules/@shopify/polaris/build/esm/components/PortalsManager/PortalsManager.js
function PortalsManager({
  children: children2,
  container
}) {
  const isMounted = useIsAfterInitialMount();
  const ref = (0, import_react18.useRef)(null);
  const contextValue = (0, import_react18.useMemo)(() => {
    if (container) {
      return {
        container
      };
    } else if (isMounted) {
      return {
        container: ref.current
      };
    } else {
      return {
        container: null
      };
    }
  }, [container, isMounted]);
  return import_react18.default.createElement(PortalsManagerContext.Provider, {
    value: contextValue
  }, children2, container ? null : import_react18.default.createElement(PortalsContainer, {
    ref
  }));
}

// node_modules/@shopify/polaris/build/esm/components/FocusManager/FocusManager.js
var import_react20 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/focus-manager/context.js
var import_react19 = __toESM(require_react());
var FocusManagerContext = (0, import_react19.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/components/FocusManager/FocusManager.js
function FocusManager({
  children: children2
}) {
  const [trapFocusList, setTrapFocusList] = (0, import_react20.useState)([]);
  const add = (0, import_react20.useCallback)((id) => {
    setTrapFocusList((list) => [...list, id]);
  }, []);
  const remove = (0, import_react20.useCallback)((id) => {
    let removed = true;
    setTrapFocusList((list) => {
      const clone = [...list];
      const index = clone.indexOf(id);
      if (index === -1) {
        removed = false;
      } else {
        clone.splice(index, 1);
      }
      return clone;
    });
    return removed;
  }, []);
  const value = (0, import_react20.useMemo)(() => ({
    trapFocusList,
    add,
    remove
  }), [add, trapFocusList, remove]);
  return import_react20.default.createElement(FocusManagerContext.Provider, {
    value
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/EphemeralPresenceManager/EphemeralPresenceManager.js
var import_react22 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/ephemeral-presence-manager/context.js
var import_react21 = __toESM(require_react());
var EphemeralPresenceManagerContext = (0, import_react21.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/components/EphemeralPresenceManager/EphemeralPresenceManager.js
var defaultState = {
  tooltip: 0
};
function EphemeralPresenceManager({
  children: children2
}) {
  const [presenceCounter, setPresenceCounter] = (0, import_react22.useState)(defaultState);
  const addPresence = (0, import_react22.useCallback)((key) => {
    setPresenceCounter((prevList) => ({
      ...prevList,
      [key]: prevList[key] + 1
    }));
  }, []);
  const removePresence = (0, import_react22.useCallback)((key) => {
    setPresenceCounter((prevList) => ({
      ...prevList,
      [key]: prevList[key] - 1
    }));
  }, []);
  const value = (0, import_react22.useMemo)(() => ({
    presenceList: Object.entries(presenceCounter).reduce((previousValue, currentValue) => {
      const [key, value2] = currentValue;
      return {
        ...previousValue,
        [key]: value2 >= 1
      };
    }, {}),
    presenceCounter,
    addPresence,
    removePresence
  }), [addPresence, removePresence, presenceCounter]);
  return import_react22.default.createElement(EphemeralPresenceManagerContext.Provider, {
    value
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/utilities/index-filters/IndexFiltersManager.js
var import_react24 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/index-filters/context.js
var import_react23 = __toESM(require_react());
var IndexFiltersModeContext = (0, import_react23.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/index-filters/types.js
var IndexFiltersMode;
(function(IndexFiltersMode2) {
  IndexFiltersMode2["Default"] = "DEFAULT";
  IndexFiltersMode2["Filtering"] = "FILTERING";
  IndexFiltersMode2["EditingColumns"] = "EDITING_COLUMNS";
})(IndexFiltersMode || (IndexFiltersMode = {}));

// node_modules/@shopify/polaris/build/esm/utilities/index-filters/IndexFiltersManager.js
function IndexFiltersManager({
  children: children2
}) {
  const [mode, setMode] = (0, import_react24.useState)(IndexFiltersMode.Default);
  const value = (0, import_react24.useMemo)(() => ({
    mode,
    setMode
  }), [mode, setMode]);
  return import_react24.default.createElement(IndexFiltersModeContext.Provider, {
    value
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/AppProvider/AppProvider.js
var MAX_SCROLLBAR_WIDTH = 20;
var SCROLLBAR_TEST_ELEMENT_PARENT_SIZE = 30;
var SCROLLBAR_TEST_ELEMENT_CHILD_SIZE = SCROLLBAR_TEST_ELEMENT_PARENT_SIZE + 10;
function measureScrollbars() {
  var _a;
  const parentEl = document.createElement("div");
  parentEl.setAttribute("style", `position: absolute; opacity: 0; transform: translate3d(-9999px, -9999px, 0); pointer-events: none; width:${SCROLLBAR_TEST_ELEMENT_PARENT_SIZE}px; height:${SCROLLBAR_TEST_ELEMENT_PARENT_SIZE}px;`);
  const child = document.createElement("div");
  child.setAttribute("style", `width:100%; height: ${SCROLLBAR_TEST_ELEMENT_CHILD_SIZE}; overflow:scroll`);
  parentEl.appendChild(child);
  document.body.appendChild(parentEl);
  const scrollbarWidth = SCROLLBAR_TEST_ELEMENT_PARENT_SIZE - (((_a = parentEl.firstElementChild) == null ? void 0 : _a.clientWidth) ?? 0);
  const scrollbarWidthWithSafetyHatch = Math.min(scrollbarWidth, MAX_SCROLLBAR_WIDTH);
  document.documentElement.style.setProperty("--pc-app-provider-scrollbar-width", `${scrollbarWidthWithSafetyHatch}px`);
  document.body.removeChild(parentEl);
}
var AppProvider = class extends import_react25.Component {
  constructor(props) {
    super(props);
    this.setBodyStyles = () => {
      document.body.style.backgroundColor = "var(--p-color-bg-app)";
      document.body.style.color = "var(--p-color-text)";
    };
    this.setRootAttributes = () => {
      const features = this.getFeatures();
      document.documentElement.classList.toggle(classNamePolarisSummerEditions2023, features.polarisSummerEditions2023);
      document.documentElement.classList.toggle(classNamePolarisSummerEditions2023ShadowBevelOptOut, features.polarisSummerEditions2023ShadowBevelOptOut);
    };
    this.getFeatures = () => {
      const {
        features
      } = this.props;
      return {
        ...features,
        polarisSummerEditions2023: (features == null ? void 0 : features.polarisSummerEditions2023) ?? false,
        polarisSummerEditions2023ShadowBevelOptOut: (features == null ? void 0 : features.polarisSummerEditions2023ShadowBevelOptOut) ?? false
      };
    };
    this.getThemeName = () => this.getFeatures().polarisSummerEditions2023 ? "Polaris-Summer-Editions-2023" : themeNameDefault;
    this.stickyManager = new StickyManager();
    this.scrollLockManager = new ScrollLockManager();
    const {
      i18n,
      linkComponent
    } = this.props;
    this.state = {
      link: linkComponent,
      intl: new I18n(i18n)
    };
  }
  componentDidMount() {
    if (document != null) {
      this.stickyManager.setContainer(document);
      this.setBodyStyles();
      this.setRootAttributes();
    }
    measureScrollbars();
  }
  componentDidUpdate({
    i18n: prevI18n,
    linkComponent: prevLinkComponent
  }) {
    const {
      i18n,
      linkComponent
    } = this.props;
    this.setRootAttributes();
    if (i18n === prevI18n && linkComponent === prevLinkComponent) {
      return;
    }
    this.setState({
      link: linkComponent,
      intl: new I18n(i18n)
    });
  }
  render() {
    const {
      children: children2
    } = this.props;
    const features = this.getFeatures();
    const themeName = this.getThemeName();
    const {
      intl,
      link
    } = this.state;
    return import_react25.default.createElement(ThemeContext.Provider, {
      value: getTheme(themeName)
    }, import_react25.default.createElement(FeaturesContext.Provider, {
      value: features
    }, import_react25.default.createElement(I18nContext.Provider, {
      value: intl
    }, import_react25.default.createElement(ScrollLockManagerContext.Provider, {
      value: this.scrollLockManager
    }, import_react25.default.createElement(StickyManagerContext.Provider, {
      value: this.stickyManager
    }, import_react25.default.createElement(LinkContext.Provider, {
      value: link
    }, import_react25.default.createElement(MediaQueryProvider, null, import_react25.default.createElement(PortalsManager, null, import_react25.default.createElement(FocusManager, null, import_react25.default.createElement(EphemeralPresenceManager, null, import_react25.default.createElement(IndexFiltersManager, null, children2)))))))))));
  }
};

// node_modules/@shopify/polaris/build/esm/components/AccountConnection/AccountConnection.js
var import_react71 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Button/utils.js
var import_react65 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Button/Button.js
var import_react64 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/is-object.js
function isObject(value) {
  const type = typeof value;
  return value != null && (type === "object" || type === "function");
}

// node_modules/@shopify/polaris/build/esm/utilities/css.js
function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}
function variationName(name, value) {
  return `${name}${value.charAt(0).toUpperCase()}${value.slice(1)}`;
}
function sanitizeCustomProperties(styles136) {
  const nonNullValues = Object.entries(styles136).filter(([_, value]) => value != null);
  return nonNullValues.length ? Object.fromEntries(nonNullValues) : void 0;
}
function getResponsiveProps(componentName, componentProp, tokenSubgroup, responsiveProp) {
  if (!responsiveProp)
    return {};
  let result;
  if (!isObject(responsiveProp)) {
    result = {
      [breakpointsAliases[0]]: `var(--p-${tokenSubgroup}-${responsiveProp})`
    };
  } else {
    result = Object.fromEntries(Object.entries(responsiveProp).map(([breakpointAlias, aliasOrScale]) => [breakpointAlias, `var(--p-${tokenSubgroup}-${aliasOrScale})`]));
  }
  return Object.fromEntries(Object.entries(result).map(([breakpointAlias, value]) => [`--pc-${componentName}-${componentProp}-${breakpointAlias}`, value]));
}
function getResponsiveValue(componentName, componentProp, responsiveProp) {
  if (!responsiveProp)
    return {};
  if (!isObject(responsiveProp)) {
    return {
      [`--pc-${componentName}-${componentProp}-${breakpointsAliases[0]}`]: responsiveProp
    };
  }
  return Object.fromEntries(Object.entries(responsiveProp).map(([breakpointAlias, responsiveValue]) => [`--pc-${componentName}-${componentProp}-${breakpointAlias}`, responsiveValue]));
}

// node_modules/@shopify/polaris/build/esm/utilities/is-element-in-viewport.js
function isElementInViewport(element) {
  const {
    top,
    left,
    bottom,
    right
  } = element.getBoundingClientRect();
  return top >= 0 && right <= window.innerWidth && bottom <= window.innerHeight && left >= 0;
}

// node_modules/@shopify/polaris/build/esm/utilities/focus.js
var FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled="true"]):not([tabindex="-1"]):not(:disabled),*[tabindex]';
var KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled="true"]):not([tabindex="-1"]):not(:disabled),*[tabindex]:not([tabindex="-1"])';
var MENUITEM_FOCUSABLE_SELECTORS = 'a[role="menuitem"],frame[role="menuitem"],iframe[role="menuitem"],input[role="menuitem"]:not([type=hidden]):not(:disabled),select[role="menuitem"]:not(:disabled),textarea[role="menuitem"]:not(:disabled),button[role="menuitem"]:not(:disabled),*[tabindex]:not([tabindex="-1"])';
var handleMouseUpByBlurring = ({
  currentTarget
}) => currentTarget.blur();
function nextFocusableNode(node, filter) {
  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];
  const sliceLocation = allFocusableElements.indexOf(node) + 1;
  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);
  for (const focusableElement of focusableElementsAfterNode) {
    if (isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) {
      return focusableElement;
    }
  }
  return null;
}
function findFirstFocusableNode(element, onlyDescendants = true) {
  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {
    return element;
  }
  return element.querySelector(FOCUSABLE_SELECTOR);
}
function findFirstFocusableNodeIncludingDisabled(element) {
  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;
  if (matches(element, focusableSelector)) {
    return element;
  }
  return element.querySelector(focusableSelector);
}
function focusFirstFocusableNode(element, onlyDescendants = true) {
  var _a;
  (_a = findFirstFocusableNode(element, onlyDescendants)) == null ? void 0 : _a.focus();
}
function focusNextFocusableNode(node, filter) {
  const nextFocusable = nextFocusableNode(node, filter);
  if (nextFocusable && nextFocusable instanceof HTMLElement) {
    nextFocusable.focus();
    return true;
  }
  return false;
}
function findFirstKeyboardFocusableNode(element, onlyDescendants = true) {
  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {
    return element;
  }
  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);
}
function focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {
  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);
  if (firstFocusable) {
    firstFocusable.focus();
    return true;
  }
  return false;
}
function findLastKeyboardFocusableNode(element, onlyDescendants = true) {
  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {
    return element;
  }
  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);
  return allFocusable[allFocusable.length - 1];
}
function focusLastKeyboardFocusableNode(element, onlyDescendants = true) {
  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);
  if (lastFocusable) {
    lastFocusable.focus();
    return true;
  }
  return false;
}
function wrapFocusPreviousFocusableMenuItem(parentElement, currentFocusedElement) {
  const allFocusableChildren = getMenuFocusableDescendants(parentElement);
  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);
  if (currentItemIdx === -1) {
    allFocusableChildren[0].focus();
  } else {
    allFocusableChildren[(currentItemIdx - 1 + allFocusableChildren.length) % allFocusableChildren.length].focus();
  }
}
function wrapFocusNextFocusableMenuItem(parentElement, currentFocusedElement) {
  const allFocusableChildren = getMenuFocusableDescendants(parentElement);
  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);
  if (currentItemIdx === -1) {
    allFocusableChildren[0].focus();
  } else {
    allFocusableChildren[(currentItemIdx + 1) % allFocusableChildren.length].focus();
  }
}
function getMenuFocusableDescendants(element) {
  return element.querySelectorAll(MENUITEM_FOCUSABLE_SELECTORS);
}
function getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement) {
  let currentItemIdx = 0;
  for (const focusableChild of allFocusableChildren) {
    if (focusableChild === currentFocusedElement) {
      break;
    }
    currentItemIdx++;
  }
  return currentItemIdx === allFocusableChildren.length ? -1 : currentItemIdx;
}
function matches(node, selector) {
  if (node.matches) {
    return node.matches(selector);
  }
  const matches2 = (node.ownerDocument || document).querySelectorAll(selector);
  let i = matches2.length;
  while (--i >= 0 && matches2.item(i) !== node)
    return i > -1;
}

// node_modules/@shopify/polaris/build/esm/utilities/use-disable-interaction.js
var import_react26 = __toESM(require_react());
function useDisableClick(disabled, handleClick) {
  const handleClickWrapper = (0, import_react26.useCallback)((event) => {
    if (disabled) {
      event.preventDefault();
      event.stopPropagation();
    }
  }, [disabled]);
  if (!disabled) {
    return handleClick;
  }
  return handleClickWrapper;
}

// node_modules/@shopify/polaris/build/esm/components/Button/Button.scss.js
var styles = {
  "Button": "Polaris-Button",
  "pressed": "Polaris-Button--pressed",
  "Content": "Polaris-Button__Content",
  "primary": "Polaris-Button--primary",
  "plain": "Polaris-Button--plain",
  "disabled": "Polaris-Button--disabled",
  "connectedDisclosure": "Polaris-Button--connectedDisclosure",
  "textAlignLeft": "Polaris-Button--textAlignLeft",
  "textAlignStart": "Polaris-Button--textAlignStart",
  "textAlignCenter": "Polaris-Button--textAlignCenter",
  "textAlignRight": "Polaris-Button--textAlignRight",
  "textAlignEnd": "Polaris-Button--textAlignEnd",
  "Icon": "Polaris-Button__Icon",
  "fullWidth": "Polaris-Button--fullWidth",
  "hidden": "Polaris-Button--hidden",
  "Spinner": "Polaris-Button__Spinner",
  "destructive": "Polaris-Button--destructive",
  "primaryPlain": "Polaris-Button--primaryPlain",
  "success": "Polaris-Button--success",
  "iconOnly": "Polaris-Button--iconOnly",
  "outline": "Polaris-Button--outline",
  "loading": "Polaris-Button--loading",
  "removeUnderline": "Polaris-Button--removeUnderline",
  "sizeSlim": "Polaris-Button--sizeSlim",
  "sizeLarge": "Polaris-Button--sizeLarge",
  "sizeMicro": "Polaris-Button--sizeMicro",
  "monochrome": "Polaris-Button--monochrome",
  "Text": "Polaris-Button__Text",
  "ConnectedDisclosureWrapper": "Polaris-Button__ConnectedDisclosureWrapper",
  "ConnectedDisclosure": "Polaris-Button__ConnectedDisclosure"
};

// node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.js
var import_react28 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.scss.js
var styles2 = {
  "Spinner": "Polaris-Spinner",
  "sizeSmall": "Polaris-Spinner--sizeSmall",
  "sizeLarge": "Polaris-Spinner--sizeLarge"
};

// node_modules/@shopify/polaris/build/esm/components/Text/Text.js
var import_react27 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Text/Text.scss.js
var styles3 = {
  "root": "Polaris-Text--root",
  "block": "Polaris-Text--block",
  "truncate": "Polaris-Text--truncate",
  "visuallyHidden": "Polaris-Text--visuallyHidden",
  "start": "Polaris-Text--start",
  "center": "Polaris-Text--center",
  "end": "Polaris-Text--end",
  "justify": "Polaris-Text--justify",
  "success": "Polaris-Text--success",
  "critical": "Polaris-Text--critical",
  "warning": "Polaris-Text--warning",
  "subdued": "Polaris-Text--subdued",
  "text-inverse": "Polaris-Text__text--inverse",
  "headingXs": "Polaris-Text--headingXs",
  "headingSm": "Polaris-Text--headingSm",
  "headingMd": "Polaris-Text--headingMd",
  "headingLg": "Polaris-Text--headingLg",
  "headingXl": "Polaris-Text--headingXl",
  "heading2xl": "Polaris-Text--heading2xl",
  "heading3xl": "Polaris-Text--heading3xl",
  "heading4xl": "Polaris-Text--heading4xl",
  "bodySm": "Polaris-Text--bodySm",
  "bodyMd": "Polaris-Text--bodyMd",
  "bodyLg": "Polaris-Text--bodyLg",
  "regular": "Polaris-Text--regular",
  "medium": "Polaris-Text--medium",
  "semibold": "Polaris-Text--semibold",
  "bold": "Polaris-Text--bold",
  "break": "Polaris-Text--break",
  "numeric": "Polaris-Text--numeric",
  "line-through": "Polaris-Text__line--through"
};

// node_modules/@shopify/polaris/build/esm/components/Text/Text.js
var Text = ({
  alignment,
  as,
  breakWord,
  children: children2,
  color: color2,
  fontWeight,
  id,
  numeric = false,
  truncate = false,
  variant,
  visuallyHidden = false,
  textDecorationLine
}) => {
  const Component7 = as || (visuallyHidden ? "span" : "p");
  const className = classNames(styles3.root, variant && styles3[variant], fontWeight && styles3[fontWeight], (alignment || truncate) && styles3.block, alignment && styles3[alignment], breakWord && styles3.break, color2 && styles3[color2], numeric && styles3.numeric, truncate && styles3.truncate, visuallyHidden && styles3.visuallyHidden, textDecorationLine && styles3[textDecorationLine]);
  return import_react27.default.createElement(Component7, Object.assign({
    className
  }, id && {
    id
  }), children2);
};

// node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.js
function Spinner({
  size: size2 = "large",
  accessibilityLabel,
  hasFocusableParent
}) {
  const isAfterInitialMount = useIsAfterInitialMount();
  const className = classNames(styles2.Spinner, size2 && styles2[variationName("size", size2)]);
  const spinnerSVGMarkup = size2 === "large" ? import_react28.default.createElement("svg", {
    viewBox: "0 0 44 44",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react28.default.createElement("path", {
    d: "M15.542 1.487A21.507 21.507 0 00.5 22c0 11.874 9.626 21.5 21.5 21.5 9.847 0 18.364-6.675 20.809-16.072a1.5 1.5 0 00-2.904-.756C37.803 34.755 30.473 40.5 22 40.5 11.783 40.5 3.5 32.217 3.5 22c0-8.137 5.3-15.247 12.942-17.65a1.5 1.5 0 10-.9-2.863z"
  })) : import_react28.default.createElement("svg", {
    viewBox: "0 0 20 20",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react28.default.createElement("path", {
    d: "M7.229 1.173a9.25 9.25 0 1011.655 11.412 1.25 1.25 0 10-2.4-.698 6.75 6.75 0 11-8.506-8.329 1.25 1.25 0 10-.75-2.385z"
  }));
  const spanAttributes = {
    ...!hasFocusableParent && {
      role: "status"
    }
  };
  const accessibilityLabelMarkup = (isAfterInitialMount || !hasFocusableParent) && import_react28.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel);
  return import_react28.default.createElement(import_react28.default.Fragment, null, import_react28.default.createElement("span", {
    className
  }, spinnerSVGMarkup), import_react28.default.createElement("span", spanAttributes, accessibilityLabelMarkup));
}

// node_modules/@shopify/polaris/build/esm/components/Popover/Popover.js
var import_react44 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Popover/set-activator-attributes.js
function setActivatorAttributes(activator, {
  id,
  active = false,
  ariaHaspopup,
  activatorDisabled = false
}) {
  if (!activatorDisabled) {
    activator.tabIndex = activator.tabIndex || 0;
  }
  activator.setAttribute("aria-controls", id);
  activator.setAttribute("aria-owns", id);
  activator.setAttribute("aria-expanded", String(active));
  if (ariaHaspopup != null) {
    activator.setAttribute("aria-haspopup", String(ariaHaspopup));
  }
}

// node_modules/@shopify/polaris/build/esm/components/Portal/Portal.js
var import_react30 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@shopify/polaris/build/esm/utilities/portals/hooks.js
var import_react29 = __toESM(require_react());
function usePortalsManager() {
  const portalsManager = (0, import_react29.useContext)(PortalsManagerContext);
  if (!portalsManager) {
    throw new Error("No portals manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return portalsManager;
}

// node_modules/@shopify/polaris/build/esm/components/Portal/Portal.js
function Portal({
  children: children2,
  idPrefix = "",
  onPortalCreated = noop2
}) {
  const {
    container
  } = usePortalsManager();
  const uniqueId = (0, import_react30.useId)();
  const portalId = idPrefix !== "" ? `${idPrefix}-${uniqueId}` : uniqueId;
  (0, import_react30.useEffect)(() => {
    onPortalCreated();
  }, [onPortalCreated]);
  return container ? (0, import_react_dom.createPortal)(import_react30.default.createElement("div", {
    "data-portal-id": portalId
  }, children2), container) : null;
}
function noop2() {
}

// node_modules/@shopify/polaris/build/esm/components/Popover/components/PopoverOverlay/PopoverOverlay.js
var import_react43 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/components.js
var import_react31 = __toESM(require_react());
function wrapWithComponent(element, Component7, props) {
  if (element == null) {
    return null;
  }
  return isElementOfType(element, Component7) ? element : import_react31.default.createElement(Component7, props, element);
}
var isComponent = true ? hotReloadComponentCheck : (AComponent, AnotherComponent) => AComponent === AnotherComponent;
function isElementOfType(element, Component7) {
  var _a;
  if (element == null || !(0, import_react31.isValidElement)(element) || typeof element.type === "string") {
    return false;
  }
  const {
    type: defaultType
  } = element;
  const overrideType = (_a = element.props) == null ? void 0 : _a.__type__;
  const type = overrideType || defaultType;
  const Components = Array.isArray(Component7) ? Component7 : [Component7];
  return Components.some((AComponent) => typeof type !== "string" && isComponent(AComponent, type));
}
function elementChildren(children2, predicate = () => true) {
  return import_react31.Children.toArray(children2).filter((child) => (0, import_react31.isValidElement)(child) && predicate(child));
}
function ConditionalWrapper({
  condition,
  wrapper,
  children: children2
}) {
  return condition ? wrapper(children2) : children2;
}
function ConditionalRender({
  condition,
  children: children2
}) {
  return condition ? children2 : null;
}
function hotReloadComponentCheck(AComponent, AnotherComponent) {
  const componentName = AComponent.name;
  const anotherComponentName = AnotherComponent.displayName;
  return AComponent === AnotherComponent || Boolean(componentName) && componentName === anotherComponentName;
}

// node_modules/@shopify/polaris/build/esm/components/Popover/Popover.scss.js
var styles4 = {
  "Popover": "Polaris-Popover",
  "PopoverOverlay": "Polaris-Popover__PopoverOverlay",
  "PopoverOverlay-entering": "Polaris-Popover__PopoverOverlay--entering",
  "PopoverOverlay-open": "Polaris-Popover__PopoverOverlay--open",
  "measuring": "Polaris-Popover--measuring",
  "PopoverOverlay-exiting": "Polaris-Popover__PopoverOverlay--exiting",
  "fullWidth": "Polaris-Popover--fullWidth",
  "Content": "Polaris-Popover__Content",
  "positionedAbove": "Polaris-Popover--positionedAbove",
  "ContentContainer": "Polaris-Popover__ContentContainer",
  "Content-fullHeight": "Polaris-Popover__Content--fullHeight",
  "Content-fluidContent": "Polaris-Popover__Content--fluidContent",
  "Pane": "Polaris-Popover__Pane",
  "Pane-fixed": "Polaris-Popover__Pane--fixed",
  "Pane-subdued": "Polaris-Popover__Pane--subdued",
  "Pane-captureOverscroll": "Polaris-Popover__Pane--captureOverscroll",
  "Section": "Polaris-Popover__Section",
  "FocusTracker": "Polaris-Popover__FocusTracker",
  "PopoverOverlay-hideOnPrint": "Polaris-Popover__PopoverOverlay--hideOnPrint"
};

// node_modules/@shopify/polaris/build/esm/components/KeypressListener/KeypressListener.js
var import_react32 = __toESM(require_react());
function KeypressListener({
  keyCode,
  handler,
  keyEvent = "keyup",
  options,
  useCapture
}) {
  const tracked = (0, import_react32.useRef)({
    handler,
    keyCode
  });
  useIsomorphicLayoutEffect(() => {
    tracked.current = {
      handler,
      keyCode
    };
  }, [handler, keyCode]);
  const handleKeyEvent = (0, import_react32.useCallback)((event) => {
    const {
      handler: handler2,
      keyCode: keyCode2
    } = tracked.current;
    if (event.keyCode === keyCode2) {
      handler2(event);
    }
  }, []);
  (0, import_react32.useEffect)(() => {
    document.addEventListener(keyEvent, handleKeyEvent, useCapture || options);
    return () => {
      document.removeEventListener(keyEvent, handleKeyEvent, useCapture || options);
    };
  }, [keyEvent, handleKeyEvent, useCapture, options]);
  return null;
}

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.js
var import_react38 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/utilities/math.js
function calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset = 0) {
  const activatorTop = activatorRect.top;
  const activatorBottom = activatorTop + activatorRect.height;
  const spaceAbove = activatorRect.top - topBarOffset;
  const spaceBelow = containerRect.height - activatorRect.top - activatorRect.height;
  const desiredHeight = overlayRect.height;
  const verticalMargins = overlayMargins.activator + overlayMargins.container;
  const minimumSpaceToScroll = overlayMargins.container;
  const distanceToTopScroll = activatorRect.top - Math.max(scrollableContainerRect.top, 0);
  const distanceToBottomScroll = containerRect.top + Math.min(containerRect.height, scrollableContainerRect.top + scrollableContainerRect.height) - (activatorRect.top + activatorRect.height);
  const enoughSpaceFromTopScroll = distanceToTopScroll >= minimumSpaceToScroll;
  const enoughSpaceFromBottomScroll = distanceToBottomScroll >= minimumSpaceToScroll;
  const heightIfBelow = Math.min(spaceBelow, desiredHeight);
  const heightIfAbove = Math.min(spaceAbove, desiredHeight);
  const containerRectTop = fixed ? 0 : containerRect.top;
  const positionIfAbove = {
    height: heightIfAbove - verticalMargins,
    top: activatorTop + containerRectTop - heightIfAbove,
    positioning: "above"
  };
  const positionIfBelow = {
    height: heightIfBelow - verticalMargins,
    top: activatorBottom + containerRectTop,
    positioning: "below"
  };
  if (preferredPosition === "above") {
    return (enoughSpaceFromTopScroll || distanceToTopScroll >= distanceToBottomScroll && !enoughSpaceFromBottomScroll) && (spaceAbove > desiredHeight || spaceAbove > spaceBelow) ? positionIfAbove : positionIfBelow;
  }
  if (preferredPosition === "below") {
    return (enoughSpaceFromBottomScroll || distanceToBottomScroll >= distanceToTopScroll && !enoughSpaceFromTopScroll) && (spaceBelow > desiredHeight || spaceBelow > spaceAbove) ? positionIfBelow : positionIfAbove;
  }
  if (enoughSpaceFromTopScroll && enoughSpaceFromBottomScroll) {
    return spaceAbove > spaceBelow ? positionIfAbove : positionIfBelow;
  }
  return distanceToTopScroll > minimumSpaceToScroll ? positionIfAbove : positionIfBelow;
}
function calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment) {
  const maximum = containerRect.width - overlayRect.width;
  if (preferredAlignment === "left") {
    return Math.min(maximum, Math.max(0, activatorRect.left - overlayMargins.horizontal));
  } else if (preferredAlignment === "right") {
    const activatorRight = containerRect.width - (activatorRect.left + activatorRect.width);
    return Math.min(maximum, Math.max(0, activatorRight - overlayMargins.horizontal));
  }
  return Math.min(maximum, Math.max(0, activatorRect.center.x - overlayRect.width / 2));
}
function rectIsOutsideOfRect(inner, outer) {
  const {
    center
  } = inner;
  return center.y < outer.top || center.y > outer.top + outer.height;
}
function intersectionWithViewport(rect, viewport = windowRect()) {
  const top = Math.max(rect.top, 0);
  const left = Math.max(rect.left, 0);
  const bottom = Math.min(rect.top + rect.height, viewport.height);
  const right = Math.min(rect.left + rect.width, viewport.width);
  return new Rect({
    top,
    left,
    height: bottom - top,
    width: right - left
  });
}
function windowRect() {
  return new Rect({
    top: window.scrollY,
    left: window.scrollX,
    height: window.innerHeight,
    width: document.body.clientWidth
  });
}

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.scss.js
var styles5 = {
  "PositionedOverlay": "Polaris-PositionedOverlay",
  "fixed": "Polaris-PositionedOverlay--fixed",
  "calculating": "Polaris-PositionedOverlay--calculating",
  "preventInteraction": "Polaris-PositionedOverlay--preventInteraction"
};

// node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.js
var import_react37 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-lazy-ref.js
var import_react33 = __toESM(require_react());
var UNIQUE_IDENTIFIER = Symbol("unique_identifier");
function useLazyRef(initialValue) {
  const lazyRef = (0, import_react33.useRef)(UNIQUE_IDENTIFIER);
  if (lazyRef.current === UNIQUE_IDENTIFIER) {
    lazyRef.current = initialValue();
  }
  return lazyRef;
}

// node_modules/@shopify/polaris/build/esm/utilities/use-component-did-mount.js
var import_react34 = __toESM(require_react());
function useComponentDidMount(callback) {
  const isAfterInitialMount = useIsAfterInitialMount();
  const hasInvokedLifeCycle = (0, import_react34.useRef)(false);
  if (isAfterInitialMount && !hasInvokedLifeCycle.current) {
    hasInvokedLifeCycle.current = true;
    return callback();
  }
}

// node_modules/@shopify/polaris/build/esm/components/Scrollable/context.js
var import_react35 = __toESM(require_react());
var ScrollableContext = (0, import_react35.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.scss.js
var styles6 = {
  "Scrollable": "Polaris-Scrollable",
  "hasTopShadow": "Polaris-Scrollable--hasTopShadow",
  "hasBottomShadow": "Polaris-Scrollable--hasBottomShadow",
  "horizontal": "Polaris-Scrollable--horizontal",
  "vertical": "Polaris-Scrollable--vertical"
};

// node_modules/@shopify/polaris/build/esm/components/Scrollable/components/ScrollTo/ScrollTo.js
var import_react36 = __toESM(require_react());
function ScrollTo() {
  const anchorNode = (0, import_react36.useRef)(null);
  const scrollToPosition = (0, import_react36.useContext)(ScrollableContext);
  (0, import_react36.useEffect)(() => {
    if (!scrollToPosition || !anchorNode.current) {
      return;
    }
    scrollToPosition(anchorNode.current.offsetTop);
  }, [scrollToPosition]);
  const id = (0, import_react36.useId)();
  return import_react36.default.createElement("a", {
    id,
    ref: anchorNode
  });
}

// node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.js
var MAX_SCROLL_HINT_DISTANCE = 100;
var LOW_RES_BUFFER = 2;
var ScrollableComponent = (0, import_react37.forwardRef)(({
  children: children2,
  className,
  horizontal = true,
  vertical = true,
  shadow: shadow2,
  hint,
  focusable,
  onScrolledToBottom,
  ...rest
}, forwardedRef) => {
  const [topShadow, setTopShadow] = (0, import_react37.useState)(false);
  const [bottomShadow, setBottomShadow] = (0, import_react37.useState)(false);
  const stickyManager = useLazyRef(() => new StickyManager());
  const scrollArea = (0, import_react37.useRef)(null);
  const scrollTo = (0, import_react37.useCallback)((scrollY, options = {}) => {
    var _a;
    const optionsBehavior = options.behavior || "smooth";
    const behavior = prefersReducedMotion() ? "auto" : optionsBehavior;
    (_a = scrollArea.current) == null ? void 0 : _a.scrollTo({
      top: scrollY,
      behavior
    });
  }, []);
  const defaultRef = (0, import_react37.useRef)();
  (0, import_react37.useImperativeHandle)(forwardedRef || defaultRef, () => ({
    scrollTo
  }));
  const handleScroll = (0, import_react37.useCallback)(() => {
    const currentScrollArea = scrollArea.current;
    if (!currentScrollArea) {
      return;
    }
    requestAnimationFrame(() => {
      const {
        scrollTop,
        clientHeight,
        scrollHeight
      } = currentScrollArea;
      const canScroll = Boolean(scrollHeight > clientHeight);
      const isBelowTopOfScroll = Boolean(scrollTop > 0);
      const isAtBottomOfScroll = Boolean(scrollTop + clientHeight >= scrollHeight - LOW_RES_BUFFER);
      setTopShadow(isBelowTopOfScroll);
      setBottomShadow(!isAtBottomOfScroll);
      if (canScroll && isAtBottomOfScroll && onScrolledToBottom) {
        onScrolledToBottom();
      }
    });
  }, [onScrolledToBottom]);
  useComponentDidMount(() => {
    handleScroll();
    if (hint) {
      requestAnimationFrame(() => performScrollHint(scrollArea.current));
    }
  });
  (0, import_react37.useEffect)(() => {
    var _a;
    const currentScrollArea = scrollArea.current;
    if (!currentScrollArea) {
      return;
    }
    const handleResize = debounce(handleScroll, 50, {
      trailing: true
    });
    (_a = stickyManager.current) == null ? void 0 : _a.setContainer(currentScrollArea);
    currentScrollArea.addEventListener("scroll", handleScroll);
    globalThis.addEventListener("resize", handleResize);
    return () => {
      currentScrollArea.removeEventListener("scroll", handleScroll);
      globalThis.removeEventListener("resize", handleResize);
    };
  }, [stickyManager, handleScroll]);
  const finalClassName = classNames(className, styles6.Scrollable, vertical && styles6.vertical, horizontal && styles6.horizontal, shadow2 && topShadow && styles6.hasTopShadow, shadow2 && bottomShadow && styles6.hasBottomShadow);
  return import_react37.default.createElement(ScrollableContext.Provider, {
    value: scrollTo
  }, import_react37.default.createElement(StickyManagerContext.Provider, {
    value: stickyManager.current
  }, import_react37.default.createElement("div", Object.assign({
    className: finalClassName
  }, scrollable.props, rest, {
    ref: scrollArea,
    tabIndex: focusable ? 0 : void 0
  }), children2)));
});
ScrollableComponent.displayName = "Scrollable";
function prefersReducedMotion() {
  try {
    return window.matchMedia("(prefers-reduced-motion: reduce)").matches;
  } catch (err) {
    return false;
  }
}
function performScrollHint(elem) {
  if (!elem || prefersReducedMotion()) {
    return;
  }
  const scrollableDistance = elem.scrollHeight - elem.clientHeight;
  const distanceToPeek = Math.min(MAX_SCROLL_HINT_DISTANCE, scrollableDistance) - LOW_RES_BUFFER;
  const goBackToTop = () => {
    requestAnimationFrame(() => {
      if (elem.scrollTop >= distanceToPeek) {
        elem.removeEventListener("scroll", goBackToTop);
        elem.scrollTo({
          top: 0,
          behavior: "smooth"
        });
      }
    });
  };
  elem.addEventListener("scroll", goBackToTop);
  elem.scrollTo({
    top: MAX_SCROLL_HINT_DISTANCE,
    behavior: "smooth"
  });
}
var forNode = (node) => {
  const closestElement = node.closest(scrollable.selector);
  return closestElement instanceof HTMLElement ? closestElement : document;
};
var Scrollable = ScrollableComponent;
Scrollable.ScrollTo = ScrollTo;
Scrollable.forNode = forNode;

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.js
var OBSERVER_CONFIG = {
  childList: true,
  subtree: true,
  characterData: true,
  attributeFilter: ["style"]
};
var PositionedOverlay = class extends import_react38.PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      measuring: true,
      activatorRect: getRectForNode(this.props.activator),
      right: void 0,
      left: void 0,
      top: 0,
      height: 0,
      width: null,
      positioning: "below",
      zIndex: null,
      outsideScrollableContainer: false,
      lockPosition: false,
      chevronOffset: 0
    };
    this.overlay = null;
    this.scrollableContainers = [];
    this.overlayDetails = () => {
      const {
        measuring,
        left,
        right,
        positioning,
        height: height2,
        activatorRect,
        chevronOffset
      } = this.state;
      return {
        measuring,
        left,
        right,
        desiredHeight: height2,
        positioning,
        activatorRect,
        chevronOffset
      };
    };
    this.setOverlay = (node) => {
      this.overlay = node;
    };
    this.setScrollableContainers = () => {
      const containers = [];
      let scrollableContainer = Scrollable.forNode(this.props.activator);
      if (scrollableContainer) {
        containers.push(scrollableContainer);
        while (scrollableContainer == null ? void 0 : scrollableContainer.parentElement) {
          scrollableContainer = Scrollable.forNode(scrollableContainer.parentElement);
          containers.push(scrollableContainer);
        }
      }
      this.scrollableContainers = containers;
    };
    this.registerScrollHandlers = () => {
      this.scrollableContainers.forEach((node) => {
        node.addEventListener("scroll", this.handleMeasurement);
      });
    };
    this.unregisterScrollHandlers = () => {
      this.scrollableContainers.forEach((node) => {
        node.removeEventListener("scroll", this.handleMeasurement);
      });
    };
    this.handleMeasurement = () => {
      const {
        lockPosition,
        top
      } = this.state;
      this.observer.disconnect();
      this.setState(({
        left,
        top: top2,
        right
      }) => ({
        left,
        right,
        top: top2,
        height: 0,
        positioning: "below",
        measuring: true
      }), () => {
        if (this.overlay == null || this.firstScrollableContainer == null) {
          return;
        }
        const {
          activator,
          preferredPosition = "below",
          preferredAlignment = "center",
          onScrollOut,
          fullWidth,
          fixed,
          preferInputActivator = true
        } = this.props;
        const preferredActivator = preferInputActivator ? activator.querySelector("input") || activator : activator;
        const activatorRect = getRectForNode(preferredActivator);
        const currentOverlayRect = getRectForNode(this.overlay);
        const scrollableElement = isDocument2(this.firstScrollableContainer) ? document.body : this.firstScrollableContainer;
        const scrollableContainerRect = getRectForNode(scrollableElement);
        const overlayRect = fullWidth ? new Rect({
          ...currentOverlayRect,
          width: activatorRect.width
        }) : currentOverlayRect;
        if (scrollableElement === document.body) {
          scrollableContainerRect.height = document.body.scrollHeight;
        }
        let topBarOffset = 0;
        const topBarElement = scrollableElement.querySelector(`${dataPolarisTopBar.selector}`);
        if (topBarElement) {
          topBarOffset = topBarElement.clientHeight;
        }
        const overlayMargins = this.overlay.firstElementChild && this.overlay.firstChild instanceof HTMLElement ? getMarginsForNode(this.overlay.firstElementChild) : {
          activator: 0,
          container: 0,
          horizontal: 0
        };
        const containerRect = windowRect();
        const zIndexForLayer = getZIndexForLayerFromNode(activator);
        const zIndex3 = zIndexForLayer == null ? zIndexForLayer : zIndexForLayer + 1;
        const verticalPosition = calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset);
        const horizontalPosition = calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment);
        const chevronOffset = activatorRect.center.x - horizontalPosition + overlayMargins.horizontal * 2;
        this.setState({
          measuring: false,
          activatorRect: getRectForNode(activator),
          left: preferredAlignment !== "right" ? horizontalPosition : void 0,
          right: preferredAlignment === "right" ? horizontalPosition : void 0,
          top: lockPosition ? top : verticalPosition.top,
          lockPosition: Boolean(fixed),
          height: verticalPosition.height || 0,
          width: fullWidth ? overlayRect.width : null,
          positioning: verticalPosition.positioning,
          outsideScrollableContainer: onScrollOut != null && rectIsOutsideOfRect(activatorRect, intersectionWithViewport(scrollableContainerRect)),
          zIndex: zIndex3,
          chevronOffset
        }, () => {
          if (!this.overlay)
            return;
          this.observer.observe(this.overlay, OBSERVER_CONFIG);
          this.observer.observe(activator, OBSERVER_CONFIG);
        });
      });
    };
    this.observer = new MutationObserver(this.handleMeasurement);
  }
  componentDidMount() {
    this.setScrollableContainers();
    if (this.scrollableContainers.length && !this.props.fixed) {
      this.registerScrollHandlers();
    }
    this.handleMeasurement();
  }
  componentWillUnmount() {
    this.observer.disconnect();
    if (this.scrollableContainers.length && !this.props.fixed) {
      this.unregisterScrollHandlers();
    }
  }
  componentDidUpdate() {
    const {
      outsideScrollableContainer,
      top
    } = this.state;
    const {
      onScrollOut,
      active
    } = this.props;
    if (active && onScrollOut != null && top !== 0 && outsideScrollableContainer) {
      onScrollOut();
    }
  }
  render() {
    const {
      left,
      right,
      top,
      zIndex: zIndex3,
      width: width2
    } = this.state;
    const {
      render,
      fixed,
      preventInteraction,
      classNames: propClassNames,
      zIndexOverride
    } = this.props;
    const style = {
      top: top == null || isNaN(top) ? void 0 : top,
      left: left == null || isNaN(left) ? void 0 : left,
      right: right == null || isNaN(right) ? void 0 : right,
      width: width2 == null || isNaN(width2) ? void 0 : width2,
      zIndex: zIndexOverride || zIndex3 || void 0
    };
    const className = classNames(styles5.PositionedOverlay, fixed && styles5.fixed, preventInteraction && styles5.preventInteraction, propClassNames);
    return import_react38.default.createElement("div", {
      className,
      style,
      ref: this.setOverlay
    }, import_react38.default.createElement(EventListener, {
      event: "resize",
      handler: this.handleMeasurement
    }), render(this.overlayDetails()));
  }
  get firstScrollableContainer() {
    return this.scrollableContainers[0] ?? null;
  }
  forceUpdatePosition() {
    requestAnimationFrame(this.handleMeasurement);
  }
};
function getMarginsForNode(node) {
  const nodeStyles = window.getComputedStyle(node);
  return {
    activator: parseFloat(nodeStyles.marginTop || "0"),
    container: parseFloat(nodeStyles.marginBottom || "0"),
    horizontal: parseFloat(nodeStyles.marginLeft || "0")
  };
}
function getZIndexForLayerFromNode(node) {
  const layerNode = node.closest(layer.selector) || document.body;
  const zIndex3 = layerNode === document.body ? "auto" : parseInt(window.getComputedStyle(layerNode).zIndex || "0", 10);
  return zIndex3 === "auto" || isNaN(zIndex3) ? null : zIndex3;
}
function isDocument2(node) {
  return node === document;
}

// node_modules/@shopify/polaris/build/esm/components/Popover/components/Pane/Pane.js
var import_react42 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Popover/components/Section/Section.js
var import_react41 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Box/Box.js
var import_react39 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Box/Box.scss.js
var styles7 = {
  "listReset": "Polaris-Box--listReset",
  "Box": "Polaris-Box",
  "visuallyHidden": "Polaris-Box--visuallyHidden",
  "printHidden": "Polaris-Box--printHidden"
};

// node_modules/@shopify/polaris/build/esm/components/Box/Box.js
var Box = (0, import_react39.forwardRef)(({
  as = "div",
  background,
  borderColor,
  borderStyle,
  borderWidth,
  borderBlockStartWidth,
  borderBlockEndWidth,
  borderInlineStartWidth,
  borderInlineEndWidth,
  borderRadius,
  borderRadiusEndStart,
  borderRadiusEndEnd,
  borderRadiusStartStart,
  borderRadiusStartEnd,
  children: children2,
  color: color2,
  id,
  minHeight,
  minWidth,
  maxWidth,
  overflowX,
  overflowY,
  outlineColor,
  outlineStyle,
  outlineWidth,
  padding,
  paddingBlockStart,
  paddingBlockEnd,
  paddingInlineStart,
  paddingInlineEnd,
  role,
  shadow: shadow2,
  tabIndex,
  width: width2,
  printHidden,
  visuallyHidden,
  position,
  insetBlockStart,
  insetBlockEnd,
  insetInlineStart,
  insetInlineEnd,
  zIndex: zIndex3,
  opacity,
  ...restProps
}, ref) => {
  const borderStyleValue = borderStyle ? borderStyle : borderColor || borderWidth || borderBlockStartWidth || borderBlockEndWidth || borderInlineStartWidth || borderInlineEndWidth ? "solid" : void 0;
  const outlineStyleValue = outlineStyle ? outlineStyle : outlineColor || outlineWidth ? "solid" : void 0;
  const style = {
    "--pc-box-color": color2 ? `var(--p-color-${color2})` : void 0,
    "--pc-box-background": background ? `var(--p-color-${background})` : void 0,
    // eslint-disable-next-line no-nested-ternary
    "--pc-box-border-color": borderColor ? borderColor === "transparent" ? "transparent" : `var(--p-color-${borderColor})` : void 0,
    "--pc-box-border-style": borderStyleValue,
    "--pc-box-border-radius": borderRadius ? `var(--p-border-radius-${borderRadius})` : void 0,
    "--pc-box-border-radius-end-start": borderRadiusEndStart ? `var(--p-border-radius-${borderRadiusEndStart})` : void 0,
    "--pc-box-border-radius-end-end": borderRadiusEndEnd ? `var(--p-border-radius-${borderRadiusEndEnd})` : void 0,
    "--pc-box-border-radius-start-start": borderRadiusStartStart ? `var(--p-border-radius-${borderRadiusStartStart})` : void 0,
    "--pc-box-border-radius-start-end": borderRadiusStartEnd ? `var(--p-border-radius-${borderRadiusStartEnd})` : void 0,
    "--pc-box-border-width": borderWidth ? `var(--p-border-width-${borderWidth})` : void 0,
    "--pc-box-border-block-start-width": borderBlockStartWidth ? `var(--p-border-width-${borderBlockStartWidth})` : void 0,
    "--pc-box-border-block-end-width": borderBlockEndWidth ? `var(--p-border-width-${borderBlockEndWidth})` : void 0,
    "--pc-box-border-inline-start-width": borderInlineStartWidth ? `var(--p-border-width-${borderInlineStartWidth})` : void 0,
    "--pc-box-border-inline-end-width": borderInlineEndWidth ? `var(--p-border-width-${borderInlineEndWidth})` : void 0,
    "--pc-box-min-height": minHeight,
    "--pc-box-min-width": minWidth,
    "--pc-box-max-width": maxWidth,
    "--pc-box-outline-color": outlineColor ? `var(--p-color-${outlineColor})` : void 0,
    "--pc-box-outline-style": outlineStyleValue,
    "--pc-box-outline-width": outlineWidth ? `var(--p-border-width-${outlineWidth})` : void 0,
    "--pc-box-overflow-x": overflowX,
    "--pc-box-overflow-y": overflowY,
    ...getResponsiveProps("box", "padding-block-end", "space", paddingBlockEnd || padding),
    ...getResponsiveProps("box", "padding-block-start", "space", paddingBlockStart || padding),
    ...getResponsiveProps("box", "padding-inline-start", "space", paddingInlineStart || padding),
    ...getResponsiveProps("box", "padding-inline-end", "space", paddingInlineEnd || padding),
    "--pc-box-shadow": shadow2 ? `var(--p-shadow-${shadow2})` : void 0,
    "--pc-box-width": width2,
    position,
    "--pc-box-inset-block-start": insetBlockStart ? `var(--p-space-${insetBlockStart})` : void 0,
    "--pc-box-inset-block-end": insetBlockEnd ? `var(--p-space-${insetBlockEnd})` : void 0,
    "--pc-box-inset-inline-start": insetInlineStart ? `var(--p-space-${insetInlineStart})` : void 0,
    "--pc-box-inset-inline-end": insetInlineEnd ? `var(--p-space-${insetInlineEnd})` : void 0,
    zIndex: zIndex3,
    opacity
  };
  const className = classNames(styles7.Box, visuallyHidden && styles7.visuallyHidden, printHidden && styles7.printHidden, as === "ul" && styles7.listReset);
  return import_react39.default.createElement(as, {
    className,
    id,
    ref,
    style: sanitizeCustomProperties(style),
    role,
    tabIndex,
    ...restProps
  }, children2);
});
Box.displayName = "Box";

// node_modules/@shopify/polaris/build/esm/utilities/features/hooks.js
var import_react40 = __toESM(require_react());
function useFeatures() {
  const features = (0, import_react40.useContext)(FeaturesContext);
  if (!features) {
    throw new Error("No Features were provided.");
  }
  return features;
}
function UseFeatures(props) {
  const features = useFeatures();
  return props.children(features);
}

// node_modules/@shopify/polaris/build/esm/components/Popover/components/Section/Section.js
function Section({
  children: children2
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  return import_react41.default.createElement("div", {
    className: styles4.Section
  }, import_react41.default.createElement(Box, {
    padding: polarisSummerEditions2023 ? void 0 : "400",
    paddingInlineStart: polarisSummerEditions2023 ? "300" : void 0,
    paddingInlineEnd: polarisSummerEditions2023 ? "300" : void 0,
    paddingBlockStart: polarisSummerEditions2023 ? "200" : void 0,
    paddingBlockEnd: polarisSummerEditions2023 ? "150" : void 0
  }, children2));
}

// node_modules/@shopify/polaris/build/esm/components/Popover/components/Pane/Pane.js
function Pane({
  captureOverscroll = false,
  fixed,
  sectioned,
  children: children2,
  height: height2,
  subdued,
  onScrolledToBottom
}) {
  const className = classNames(styles4.Pane, fixed && styles4["Pane-fixed"], subdued && styles4["Pane-subdued"], captureOverscroll && styles4["Pane-captureOverscroll"]);
  const content = sectioned ? wrapWithComponent(children2, Section, {}) : children2;
  const style = height2 ? {
    height: height2,
    maxHeight: height2,
    minHeight: height2
  } : void 0;
  return fixed ? import_react42.default.createElement("div", {
    style,
    className
  }, content) : import_react42.default.createElement(Scrollable, {
    shadow: true,
    className,
    style,
    onScrolledToBottom
  }, content);
}

// node_modules/@shopify/polaris/build/esm/components/Popover/components/PopoverOverlay/PopoverOverlay.js
var PopoverCloseSource;
(function(PopoverCloseSource2) {
  PopoverCloseSource2[PopoverCloseSource2["Click"] = 0] = "Click";
  PopoverCloseSource2[PopoverCloseSource2["EscapeKeypress"] = 1] = "EscapeKeypress";
  PopoverCloseSource2[PopoverCloseSource2["FocusOut"] = 2] = "FocusOut";
  PopoverCloseSource2[PopoverCloseSource2["ScrollOut"] = 3] = "ScrollOut";
})(PopoverCloseSource || (PopoverCloseSource = {}));
var TransitionStatus;
(function(TransitionStatus3) {
  TransitionStatus3["Entering"] = "entering";
  TransitionStatus3["Entered"] = "entered";
  TransitionStatus3["Exiting"] = "exiting";
  TransitionStatus3["Exited"] = "exited";
})(TransitionStatus || (TransitionStatus = {}));
var PopoverOverlay = class extends import_react43.PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      transitionStatus: this.props.active ? TransitionStatus.Entering : TransitionStatus.Exited
    };
    this.contentNode = (0, import_react43.createRef)();
    this.renderPopover = (overlayDetails) => {
      const {
        measuring,
        desiredHeight,
        positioning
      } = overlayDetails;
      const {
        id,
        children: children2,
        sectioned,
        fullWidth,
        fullHeight,
        fluidContent,
        hideOnPrint,
        autofocusTarget,
        captureOverscroll
      } = this.props;
      const className = classNames(styles4.Popover, positioning === "above" && styles4.positionedAbove, fullWidth && styles4.fullWidth, measuring && styles4.measuring, hideOnPrint && styles4["PopoverOverlay-hideOnPrint"]);
      const contentStyles = measuring ? void 0 : {
        height: desiredHeight
      };
      const contentClassNames = classNames(styles4.Content, fullHeight && styles4["Content-fullHeight"], fluidContent && styles4["Content-fluidContent"]);
      return import_react43.default.createElement("div", Object.assign({
        className
      }, overlay.props), import_react43.default.createElement(EventListener, {
        event: "click",
        handler: this.handleClick
      }), import_react43.default.createElement(EventListener, {
        event: "touchstart",
        handler: this.handleClick
      }), import_react43.default.createElement(KeypressListener, {
        keyCode: Key.Escape,
        handler: this.handleEscape
      }), import_react43.default.createElement("div", {
        className: styles4.FocusTracker,
        tabIndex: 0,
        onFocus: this.handleFocusFirstItem
      }), import_react43.default.createElement("div", {
        className: styles4.ContentContainer
      }, import_react43.default.createElement("div", {
        id,
        tabIndex: autofocusTarget === "none" ? void 0 : -1,
        className: contentClassNames,
        style: contentStyles,
        ref: this.contentNode
      }, renderPopoverContent(children2, {
        captureOverscroll,
        sectioned
      }))), import_react43.default.createElement("div", {
        className: styles4.FocusTracker,
        tabIndex: 0,
        onFocus: this.handleFocusLastItem
      }));
    };
    this.handleClick = (event) => {
      const target = event.target;
      const {
        contentNode,
        props: {
          activator,
          onClose,
          preventCloseOnChildOverlayClick
        }
      } = this;
      const composedPath = event.composedPath();
      const wasDescendant = preventCloseOnChildOverlayClick ? wasPolarisPortalDescendant(composedPath, this.context.container) : wasContentNodeDescendant(composedPath, contentNode);
      const isActivatorDescendant = nodeContainsDescendant(activator, target);
      if (wasDescendant || isActivatorDescendant || this.state.transitionStatus !== TransitionStatus.Entered) {
        return;
      }
      onClose(PopoverCloseSource.Click);
    };
    this.handleScrollOut = () => {
      this.props.onClose(PopoverCloseSource.ScrollOut);
    };
    this.handleEscape = (event) => {
      const target = event.target;
      const {
        contentNode,
        props: {
          activator
        }
      } = this;
      const composedPath = event.composedPath();
      const wasDescendant = wasContentNodeDescendant(composedPath, contentNode);
      const isActivatorDescendant = nodeContainsDescendant(activator, target);
      if (wasDescendant || isActivatorDescendant) {
        this.props.onClose(PopoverCloseSource.EscapeKeypress);
      }
    };
    this.handleFocusFirstItem = () => {
      this.props.onClose(PopoverCloseSource.FocusOut);
    };
    this.handleFocusLastItem = () => {
      this.props.onClose(PopoverCloseSource.FocusOut);
    };
    this.overlayRef = (0, import_react43.createRef)();
  }
  forceUpdatePosition() {
    var _a;
    (_a = this.overlayRef.current) == null ? void 0 : _a.forceUpdatePosition();
  }
  changeTransitionStatus(transitionStatus, cb) {
    this.setState({
      transitionStatus
    }, cb);
    this.contentNode.current && this.contentNode.current.getBoundingClientRect();
  }
  componentDidMount() {
    if (this.props.active) {
      this.focusContent();
      this.changeTransitionStatus(TransitionStatus.Entered);
    }
  }
  componentDidUpdate(oldProps) {
    if (this.props.active && !oldProps.active) {
      this.focusContent();
      this.changeTransitionStatus(TransitionStatus.Entering, () => {
        this.clearTransitionTimeout();
        this.enteringTimer = window.setTimeout(() => {
          this.setState({
            transitionStatus: TransitionStatus.Entered
          });
        }, parseInt(motion2["motion-duration-100"], 10));
      });
    }
    if (!this.props.active && oldProps.active) {
      this.clearTransitionTimeout();
      this.setState({
        transitionStatus: TransitionStatus.Exited
      });
    }
  }
  componentWillUnmount() {
    this.clearTransitionTimeout();
  }
  render() {
    const {
      active,
      activator,
      fullWidth,
      preferredPosition = "below",
      preferredAlignment = "center",
      preferInputActivator = true,
      fixed,
      zIndexOverride
    } = this.props;
    const {
      transitionStatus
    } = this.state;
    if (transitionStatus === TransitionStatus.Exited && !active)
      return null;
    const className = classNames(styles4.PopoverOverlay, transitionStatus === TransitionStatus.Entering && styles4["PopoverOverlay-entering"], transitionStatus === TransitionStatus.Entered && styles4["PopoverOverlay-open"], transitionStatus === TransitionStatus.Exiting && styles4["PopoverOverlay-exiting"]);
    return import_react43.default.createElement(PositionedOverlay, {
      ref: this.overlayRef,
      fullWidth,
      active,
      activator,
      preferInputActivator,
      preferredPosition,
      preferredAlignment,
      render: this.renderPopover.bind(this),
      fixed,
      onScrollOut: this.handleScrollOut,
      classNames: className,
      zIndexOverride
    });
  }
  clearTransitionTimeout() {
    if (this.enteringTimer) {
      window.clearTimeout(this.enteringTimer);
    }
  }
  focusContent() {
    const {
      autofocusTarget = "container"
    } = this.props;
    if (autofocusTarget === "none" || this.contentNode == null) {
      return;
    }
    requestAnimationFrame(() => {
      if (this.contentNode.current == null) {
        return;
      }
      const focusableChild = findFirstKeyboardFocusableNode(this.contentNode.current);
      if (focusableChild && autofocusTarget === "first-node") {
        focusableChild.focus({
          preventScroll: true
        });
      } else {
        this.contentNode.current.focus({
          preventScroll: true
        });
      }
    });
  }
  // eslint-disable-next-line @shopify/react-no-multiple-render-methods
};
PopoverOverlay.contextType = PortalsManagerContext;
function renderPopoverContent(children2, props) {
  const childrenArray = import_react43.Children.toArray(children2);
  if (isElementOfType(childrenArray[0], Pane)) {
    return childrenArray;
  }
  return wrapWithComponent(childrenArray, Pane, props);
}
function nodeContainsDescendant(rootNode, descendant) {
  if (rootNode === descendant) {
    return true;
  }
  let parent = descendant.parentNode;
  while (parent != null) {
    if (parent === rootNode) {
      return true;
    }
    parent = parent.parentNode;
  }
  return false;
}
function wasContentNodeDescendant(composedPath, contentNode) {
  return contentNode.current != null && composedPath.includes(contentNode.current);
}
function wasPolarisPortalDescendant(composedPath, portalsContainerElement) {
  return composedPath.some((eventTarget) => eventTarget instanceof Node && (portalsContainerElement == null ? void 0 : portalsContainerElement.contains(eventTarget)));
}

// node_modules/@shopify/polaris/build/esm/components/Popover/Popover.js
var PopoverComponent = (0, import_react44.forwardRef)(function Popover({
  activatorWrapper = "div",
  children: children2,
  onClose,
  activator,
  preventFocusOnClose,
  active,
  fixed,
  ariaHaspopup,
  preferInputActivator = true,
  zIndexOverride,
  ...rest
}, ref) {
  const [activatorNode, setActivatorNode] = (0, import_react44.useState)();
  const overlayRef = (0, import_react44.useRef)(null);
  const activatorContainer = (0, import_react44.useRef)(null);
  const WrapperComponent = activatorWrapper;
  const id = (0, import_react44.useId)();
  function forceUpdatePosition() {
    var _a;
    (_a = overlayRef.current) == null ? void 0 : _a.forceUpdatePosition();
  }
  (0, import_react44.useImperativeHandle)(ref, () => {
    return {
      forceUpdatePosition
    };
  });
  const setAccessibilityAttributes = (0, import_react44.useCallback)(() => {
    if (activatorContainer.current == null) {
      return;
    }
    const firstFocusable = findFirstFocusableNodeIncludingDisabled(activatorContainer.current);
    const focusableActivator = firstFocusable || activatorContainer.current;
    const activatorDisabled = "disabled" in focusableActivator && Boolean(focusableActivator.disabled);
    setActivatorAttributes(focusableActivator, {
      id,
      active,
      ariaHaspopup,
      activatorDisabled
    });
  }, [id, active, ariaHaspopup]);
  const handleClose = (source) => {
    onClose(source);
    if (activatorContainer.current == null || preventFocusOnClose) {
      return;
    }
    if (source === PopoverCloseSource.FocusOut && activatorNode) {
      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;
      if (!focusNextFocusableNode(focusableActivator, isInPortal)) {
        focusableActivator.focus();
      }
    } else if (source === PopoverCloseSource.EscapeKeypress && activatorNode) {
      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;
      if (focusableActivator) {
        focusableActivator.focus();
      } else {
        focusNextFocusableNode(focusableActivator, isInPortal);
      }
    }
  };
  (0, import_react44.useEffect)(() => {
    if (!activatorNode && activatorContainer.current) {
      setActivatorNode(activatorContainer.current.firstElementChild);
    } else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) {
      setActivatorNode(activatorContainer.current.firstElementChild);
    }
    setAccessibilityAttributes();
  }, [activatorNode, setAccessibilityAttributes]);
  (0, import_react44.useEffect)(() => {
    if (activatorNode && activatorContainer.current) {
      setActivatorNode(activatorContainer.current.firstElementChild);
    }
    setAccessibilityAttributes();
  }, [activatorNode, setAccessibilityAttributes]);
  const portal2 = activatorNode ? import_react44.default.createElement(Portal, {
    idPrefix: "popover"
  }, import_react44.default.createElement(PopoverOverlay, Object.assign({
    ref: overlayRef,
    id,
    activator: activatorNode,
    preferInputActivator,
    onClose: handleClose,
    active,
    fixed,
    zIndexOverride
  }, rest), children2)) : null;
  return import_react44.default.createElement(WrapperComponent, {
    ref: activatorContainer
  }, import_react44.Children.only(activator), portal2);
});
function isInPortal(element) {
  let parentElement = element.parentElement;
  while (parentElement) {
    if (parentElement.matches(portal.selector))
      return false;
    parentElement = parentElement.parentElement;
  }
  return true;
}
var Popover2 = Object.assign(PopoverComponent, {
  Pane,
  Section
});

// node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.js
var import_react62 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/FilterActionsProvider/FilterActionsProvider.js
var import_react45 = __toESM(require_react());
var FilterActionsContext = (0, import_react45.createContext)(false);
function FilterActionsProvider({
  children: children2,
  filterActions
}) {
  return import_react45.default.createElement(FilterActionsContext.Provider, {
    value: filterActions
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/Section/Section.js
var import_react60 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/Item/Item.js
var import_react58 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.scss.js
var styles8 = {
  "Item": "Polaris-ActionList__Item",
  "default": "Polaris-ActionList--default",
  "active": "Polaris-ActionList--active",
  "destructive": "Polaris-ActionList--destructive",
  "disabled": "Polaris-ActionList--disabled",
  "Prefix": "Polaris-ActionList__Prefix",
  "Suffix": "Polaris-ActionList__Suffix",
  "indented": "Polaris-ActionList--indented",
  "menu": "Polaris-ActionList--menu",
  "Text": "Polaris-ActionList__Text"
};

// node_modules/@shopify/polaris/build/esm/components/Badge/Badge.js
var import_react50 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/within-filter-context.js
var import_react46 = __toESM(require_react());
var WithinFilterContext = (0, import_react46.createContext)(false);

// node_modules/@shopify/polaris/build/esm/components/Badge/Badge.scss.js
var styles9 = {
  "Badge": "Polaris-Badge",
  "statusSuccess": "Polaris-Badge--statusSuccess",
  "statusSuccess-strong-experimental": "Polaris-Badge--statusSuccessStrongExperimental",
  "statusInfo": "Polaris-Badge--statusInfo",
  "statusInfo-strong-experimental": "Polaris-Badge--statusInfoStrongExperimental",
  "statusAttention": "Polaris-Badge--statusAttention",
  "statusAttention-strong-experimental": "Polaris-Badge--statusAttentionStrongExperimental",
  "statusWarning": "Polaris-Badge--statusWarning",
  "statusWarning-strong-experimental": "Polaris-Badge--statusWarningStrongExperimental",
  "statusCritical": "Polaris-Badge--statusCritical",
  "statusCritical-strong-experimental": "Polaris-Badge--statusCriticalStrongExperimental",
  "statusNew": "Polaris-Badge--statusNew",
  "statusRead-only-experimental": "Polaris-Badge--statusReadOnlyExperimental",
  "statusEnabled-experimental": "Polaris-Badge__statusEnabled--experimental",
  "sizeLarge-experimental": "Polaris-Badge__sizeLarge--experimental",
  "withinFilter": "Polaris-Badge--withinFilter",
  "Icon": "Polaris-Badge__Icon",
  "PipContainer": "Polaris-Badge__PipContainer"
};

// node_modules/@shopify/polaris/build/esm/components/Badge/types.js
var StatusValue;
(function(StatusValue2) {
  StatusValue2["Info"] = "info";
  StatusValue2["Success"] = "success";
  StatusValue2["Warning"] = "warning";
  StatusValue2["Critical"] = "critical";
  StatusValue2["Attention"] = "attention";
  StatusValue2["New"] = "new";
  StatusValue2["InfoStrongExperimental"] = "info-strong-experimental";
  StatusValue2["SuccessStrongExperimental"] = "success-strong-experimental";
  StatusValue2["WarningStrongExperimental"] = "warning-strong-experimental";
  StatusValue2["CriticalStrongExperimental"] = "critical-strong-experimental";
  StatusValue2["AttentionStrongExperimental"] = "attention-strong-experimental";
  StatusValue2["ReadOnlyExperimental"] = "read-only-experimental";
  StatusValue2["EnabledExperimental"] = "enabled-experimental";
})(StatusValue || (StatusValue = {}));
var ProgressValue;
(function(ProgressValue2) {
  ProgressValue2["Incomplete"] = "incomplete";
  ProgressValue2["PartiallyComplete"] = "partiallyComplete";
  ProgressValue2["Complete"] = "complete";
})(ProgressValue || (ProgressValue = {}));

// node_modules/@shopify/polaris/build/esm/components/Badge/utils.js
function getDefaultAccessibilityLabel(i18n, progress, status) {
  let progressLabel = "";
  let statusLabel = "";
  if (!progress && !status) {
    return "";
  }
  switch (progress) {
    case ProgressValue.Incomplete:
      progressLabel = i18n.translate("Polaris.Badge.PROGRESS_LABELS.incomplete");
      break;
    case ProgressValue.PartiallyComplete:
      progressLabel = i18n.translate("Polaris.Badge.PROGRESS_LABELS.partiallyComplete");
      break;
    case ProgressValue.Complete:
      progressLabel = i18n.translate("Polaris.Badge.PROGRESS_LABELS.complete");
      break;
  }
  switch (status) {
    case StatusValue.Info:
    case StatusValue.InfoStrongExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.info");
      break;
    case StatusValue.Success:
    case StatusValue.SuccessStrongExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.success");
      break;
    case StatusValue.Warning:
    case StatusValue.WarningStrongExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.warning");
      break;
    case StatusValue.Critical:
    case StatusValue.CriticalStrongExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.critical");
      break;
    case StatusValue.Attention:
    case StatusValue.AttentionStrongExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.attention");
      break;
    case StatusValue.New:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.new");
      break;
    case StatusValue.ReadOnlyExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.readOnly");
      break;
    case StatusValue.EnabledExperimental:
      statusLabel = i18n.translate("Polaris.Badge.STATUS_LABELS.enabled");
      break;
  }
  if (!status && progress) {
    return progressLabel;
  } else if (status && !progress) {
    return statusLabel;
  } else {
    return i18n.translate("Polaris.Badge.progressAndStatus", {
      progressLabel,
      statusLabel
    });
  }
}

// node_modules/@shopify/polaris/build/esm/components/Icon/Icon.js
var import_react47 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Icon/Icon.scss.js
var styles10 = {
  "Icon": "Polaris-Icon",
  "applyColor": "Polaris-Icon--applyColor",
  "hasBackdrop": "Polaris-Icon--hasBackdrop",
  "colorBase": "Polaris-Icon--colorBase",
  "colorSubdued": "Polaris-Icon--colorSubdued",
  "colorCritical": "Polaris-Icon--colorCritical",
  "colorInteractive": "Polaris-Icon--colorInteractive",
  "colorWarning": "Polaris-Icon--colorWarning",
  "colorHighlight": "Polaris-Icon--colorHighlight",
  "colorSuccess": "Polaris-Icon--colorSuccess",
  "colorPrimary": "Polaris-Icon--colorPrimary",
  "colorMagic": "Polaris-Icon--colorMagic",
  "Svg": "Polaris-Icon__Svg",
  "Img": "Polaris-Icon__Img",
  "Placeholder": "Polaris-Icon__Placeholder"
};

// node_modules/@shopify/polaris/build/esm/components/Icon/Icon.js
var COLORS_WITH_BACKDROPS = ["base", "critical", "highlight", "success", "warning"];
function Icon({
  source,
  color: color2,
  backdrop,
  accessibilityLabel
}) {
  let sourceType;
  if (typeof source === "function") {
    sourceType = "function";
  } else if (source === "placeholder") {
    sourceType = "placeholder";
  } else {
    sourceType = "external";
  }
  if (color2 && sourceType === "external" && true) {
    console.warn("Recoloring external SVGs is not supported. Set the intended color on your SVG instead.");
  }
  if (backdrop && color2 && !COLORS_WITH_BACKDROPS.includes(color2) && true) {
    console.warn(`The ${color2} variant does not have a supported backdrop color`);
  }
  const className = classNames(styles10.Icon, color2 && styles10[variationName("color", color2)], color2 && styles10.applyColor, backdrop && styles10.hasBackdrop);
  const SourceComponent = source;
  const contentMarkup = {
    function: import_react47.default.createElement(SourceComponent, {
      className: styles10.Svg,
      focusable: "false",
      "aria-hidden": "true"
    }),
    placeholder: import_react47.default.createElement("div", {
      className: styles10.Placeholder
    }),
    external: import_react47.default.createElement("img", {
      className: styles10.Img,
      src: `data:image/svg+xml;utf8,${source}`,
      alt: "",
      "aria-hidden": "true"
    })
  };
  return import_react47.default.createElement("span", {
    className
  }, import_react47.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel), contentMarkup[sourceType]);
}

// node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.js
var import_react49 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.scss.js
var styles11 = {
  "Pip": "Polaris-Badge-Pip",
  "statusInfo": "Polaris-Badge-Pip--statusInfo",
  "statusSuccess": "Polaris-Badge-Pip--statusSuccess",
  "statusNew": "Polaris-Badge-Pip--statusNew",
  "statusAttention": "Polaris-Badge-Pip--statusAttention",
  "statusWarning": "Polaris-Badge-Pip--statusWarning",
  "statusCritical": "Polaris-Badge-Pip--statusCritical",
  "progressIncomplete": "Polaris-Badge-Pip--progressIncomplete",
  "progressPartiallyComplete": "Polaris-Badge-Pip--progressPartiallyComplete",
  "progressComplete": "Polaris-Badge-Pip--progressComplete"
};

// node_modules/@shopify/polaris/build/esm/utilities/i18n/hooks.js
var import_react48 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/errors.js
var MissingAppProviderError = class extends Error {
  constructor(message = "") {
    super(`${message ? `${message} ` : message}Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.`);
    this.name = "MissingAppProviderError";
  }
};

// node_modules/@shopify/polaris/build/esm/utilities/i18n/hooks.js
function useI18n() {
  const i18n = (0, import_react48.useContext)(I18nContext);
  if (!i18n) {
    throw new MissingAppProviderError("No i18n was provided.");
  }
  return i18n;
}

// node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.js
function Pip({
  status,
  progress = "complete",
  accessibilityLabelOverride
}) {
  const i18n = useI18n();
  const className = classNames(styles11.Pip, status && styles11[variationName("status", status)], progress && styles11[variationName("progress", progress)]);
  const accessibilityLabel = accessibilityLabelOverride ? accessibilityLabelOverride : getDefaultAccessibilityLabel(i18n, progress, status);
  return import_react49.default.createElement("span", {
    className
  }, import_react49.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel));
}

// node_modules/@shopify/polaris/build/esm/components/Badge/Badge.js
var DEFAULT_SIZE = "medium";
var progressIconMap = {
  complete: () => import_react50.default.createElement("svg", {
    viewBox: "0 0 20 20"
  }, import_react50.default.createElement("path", {
    d: "M6 10c0-.93 0-1.395.102-1.776a3 3 0 0 1 2.121-2.122C8.605 6 9.07 6 10 6c.93 0 1.395 0 1.776.102a3 3 0 0 1 2.122 2.122C14 8.605 14 9.07 14 10s0 1.395-.102 1.777a3 3 0 0 1-2.122 2.12C11.395 14 10.93 14 10 14s-1.395 0-1.777-.102a3 3 0 0 1-2.12-2.121C6 11.395 6 10.93 6 10Z"
  })),
  partiallyComplete: () => import_react50.default.createElement("svg", {
    viewBox: "0 0 20 20"
  }, import_react50.default.createElement("path", {
    fillRule: "evenodd",
    d: "m8.888 6.014-.017-.018-.02.02c-.253.013-.45.038-.628.086a3 3 0 0 0-2.12 2.122C6 8.605 6 9.07 6 10s0 1.395.102 1.777a3 3 0 0 0 2.121 2.12C8.605 14 9.07 14 10 14c.93 0 1.395 0 1.776-.102a3 3 0 0 0 2.122-2.121C14 11.395 14 10.93 14 10c0-.93 0-1.395-.102-1.776a3 3 0 0 0-2.122-2.122C11.395 6 10.93 6 10 6c-.475 0-.829 0-1.112.014ZM8.446 7.34a1.75 1.75 0 0 0-1.041.94l4.314 4.315c.443-.2.786-.576.941-1.042L8.446 7.34Zm4.304 2.536L10.124 7.25c.908.001 1.154.013 1.329.06a1.75 1.75 0 0 1 1.237 1.237c.047.175.059.42.06 1.329ZM8.547 12.69c.182.05.442.06 1.453.06h.106L7.25 9.894V10c0 1.01.01 1.27.06 1.453a1.75 1.75 0 0 0 1.237 1.237Z"
  })),
  incomplete: () => import_react50.default.createElement("svg", {
    viewBox: "0 0 20 20"
  }, import_react50.default.createElement("path", {
    fillRule: "evenodd",
    d: "M8.547 12.69c.183.05.443.06 1.453.06s1.27-.01 1.453-.06a1.75 1.75 0 0 0 1.237-1.237c.05-.182.06-.443.06-1.453s-.01-1.27-.06-1.453a1.75 1.75 0 0 0-1.237-1.237c-.182-.05-.443-.06-1.453-.06s-1.27.01-1.453.06A1.75 1.75 0 0 0 7.31 8.547c-.05.183-.06.443-.06 1.453s.01 1.27.06 1.453a1.75 1.75 0 0 0 1.237 1.237ZM6.102 8.224C6 8.605 6 9.07 6 10s0 1.395.102 1.777a3 3 0 0 0 2.122 2.12C8.605 14 9.07 14 10 14s1.395 0 1.777-.102a3 3 0 0 0 2.12-2.121C14 11.395 14 10.93 14 10c0-.93 0-1.395-.102-1.776a3 3 0 0 0-2.121-2.122C11.395 6 10.93 6 10 6c-.93 0-1.395 0-1.776.102a3 3 0 0 0-2.122 2.122Z"
  }))
};
function Badge({
  children: children2,
  status,
  progress,
  icon,
  size: size2 = DEFAULT_SIZE,
  statusAndProgressLabelOverride
}) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const withinFilter = (0, import_react50.useContext)(WithinFilterContext);
  const className = classNames(styles9.Badge, status && styles9[variationName("status", status)], size2 && size2 !== DEFAULT_SIZE && styles9[variationName("size", size2)], withinFilter && styles9.withinFilter);
  const accessibilityLabel = statusAndProgressLabelOverride ? statusAndProgressLabelOverride : getDefaultAccessibilityLabel(i18n, progress, status);
  let accessibilityMarkup = Boolean(accessibilityLabel) && import_react50.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel);
  if (progress && !icon) {
    accessibilityMarkup = polarisSummerEditions2023 ? import_react50.default.createElement("span", {
      className: styles9.Icon
    }, import_react50.default.createElement(Icon, {
      accessibilityLabel,
      source: progressIconMap[progress]
    })) : import_react50.default.createElement("span", {
      className: styles9.PipContainer
    }, import_react50.default.createElement(Pip, {
      progress,
      status,
      accessibilityLabelOverride: accessibilityLabel
    }));
  }
  return import_react50.default.createElement("span", {
    className
  }, accessibilityMarkup, icon && import_react50.default.createElement("span", {
    className: styles9.Icon
  }, import_react50.default.createElement(Icon, {
    source: icon
  })), children2 && import_react50.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    fontWeight: status === "new" ? "medium" : void 0
  }, children2));
}
Badge.Pip = Pip;

// node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.js
var import_react54 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-toggle.js
var import_react51 = __toESM(require_react());
function useToggle(initialState) {
  const [value, setState] = (0, import_react51.useState)(initialState);
  return {
    value,
    toggle: (0, import_react51.useCallback)(() => setState((state) => !state), []),
    setTrue: (0, import_react51.useCallback)(() => setState(true), []),
    setFalse: (0, import_react51.useCallback)(() => setState(false), [])
  };
}

// node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.scss.js
var styles12 = {
  "TooltipContainer": "Polaris-Tooltip__TooltipContainer",
  "HasUnderline": "Polaris-Tooltip__HasUnderline"
};

// node_modules/@shopify/polaris/build/esm/utilities/ephemeral-presence-manager/hooks.js
var import_react52 = __toESM(require_react());
function useEphemeralPresenceManager() {
  const ephemeralPresenceManager = (0, import_react52.useContext)(EphemeralPresenceManagerContext);
  if (!ephemeralPresenceManager) {
    throw new Error("No ephemeral presence manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return ephemeralPresenceManager;
}
function useReadOnlyEphemeralPresenceManager() {
  const {
    presenceList,
    presenceCounter
  } = useEphemeralPresenceManager();
  return {
    presenceList,
    presenceCounter
  };
}

// node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.js
var import_react53 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.scss.js
var styles13 = {
  "TooltipOverlay": "Polaris-Tooltip-TooltipOverlay",
  "Tail": "Polaris-Tooltip-TooltipOverlay__Tail",
  "positionedAbove": "Polaris-Tooltip-TooltipOverlay--positionedAbove",
  "measuring": "Polaris-Tooltip-TooltipOverlay--measuring",
  "measured": "Polaris-Tooltip-TooltipOverlay--measured",
  "instant": "Polaris-Tooltip-TooltipOverlay--instant",
  "Content": "Polaris-Tooltip-TooltipOverlay__Content",
  "default": "Polaris-Tooltip-TooltipOverlay--default",
  "wide": "Polaris-Tooltip-TooltipOverlay--wide"
};

// node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.js
var tailUpPaths = import_react53.default.createElement(import_react53.default.Fragment, null, import_react53.default.createElement("path", {
  d: "M18.829 8.171 11.862.921A3 3 0 0 0 7.619.838L0 8.171h1.442l6.87-6.612a2 2 0 0 1 2.83.055l6.3 6.557h1.387Z",
  fill: "#E3E3E3"
}), import_react53.default.createElement("path", {
  d: "M17.442 10.171h-16v-2l6.87-6.612a2 2 0 0 1 2.83.055l6.3 6.557v2Z",
  fill: "var(--p-color-bg-surface)"
}));
var tailDownPaths = import_react53.default.createElement(import_react53.default.Fragment, null, import_react53.default.createElement("path", {
  d: "m0 2 6.967 7.25a3 3 0 0 0 4.243.083L18.829 2h-1.442l-6.87 6.612a2 2 0 0 1-2.83-.055L1.387 2H0Z",
  fill: "#D4D4D4"
}), import_react53.default.createElement("path", {
  d: "M1.387 0h16v2l-6.87 6.612a2 2 0 0 1-2.83-.055L1.387 2V0Z",
  fill: "var(--p-color-bg-surface)"
}));
function TooltipOverlay({
  active,
  activator,
  preferredPosition = "above",
  preventInteraction,
  id,
  children: children2,
  accessibilityLabel,
  width: width2,
  padding,
  borderRadius,
  zIndexOverride,
  instant
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const i18n = useI18n();
  const markup = active ? import_react53.default.createElement(PositionedOverlay, {
    active,
    activator,
    preferredPosition,
    preventInteraction,
    render: renderTooltip,
    zIndexOverride
  }) : null;
  return markup;
  function renderTooltip(overlayDetails) {
    const {
      measuring,
      desiredHeight,
      positioning,
      chevronOffset
    } = overlayDetails;
    const containerClassName = classNames(styles13.TooltipOverlay, measuring && styles13.measuring, !measuring && styles13.measured, instant && styles13.instant, positioning === "above" && styles13.positionedAbove);
    const contentClassName = classNames(styles13.Content, width2 && styles13[width2]);
    const contentStyles = measuring ? void 0 : {
      minHeight: desiredHeight
    };
    const style = {
      "--pc-tooltip-chevron-x-pos": `${chevronOffset}px`,
      "--pc-tooltip-border-radius": borderRadius ? `var(--p-border-radius-${borderRadius})` : void 0,
      "--pc-tooltip-padding": padding && padding === "default" ? "var(--p-space-100) var(--p-space-200)" : `var(--p-space-${padding})`
    };
    return import_react53.default.createElement("div", Object.assign({
      style,
      className: containerClassName
    }, layer.props), polarisSummerEditions2023 && import_react53.default.createElement("svg", {
      className: styles13.Tail,
      width: "19",
      height: "11",
      fill: "none"
    }, positioning === "above" ? tailDownPaths : tailUpPaths), import_react53.default.createElement("div", {
      id,
      role: "tooltip",
      className: contentClassName,
      style: {
        ...contentStyles,
        ...style
      },
      "aria-label": accessibilityLabel ? i18n.translate("Polaris.TooltipOverlay.accessibilityLabel", {
        label: accessibilityLabel
      }) : void 0
    }, children2));
  }
}

// node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.js
var HOVER_OUT_TIMEOUT = 150;
function Tooltip({
  children: children2,
  content,
  dismissOnMouseOut,
  active: originalActive,
  hoverDelay,
  preferredPosition = "above",
  activatorWrapper = "span",
  accessibilityLabel,
  width: width2 = "default",
  padding = "default",
  borderRadius: borderRadiusProp,
  zIndexOverride,
  hasUnderline,
  persistOnClick,
  onOpen,
  onClose
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const borderRadius = borderRadiusProp || (polarisSummerEditions2023 ? "2" : "1");
  const WrapperComponent = activatorWrapper;
  const {
    value: active,
    setTrue: setActiveTrue,
    setFalse: handleBlur
  } = useToggle(Boolean(originalActive));
  const {
    value: persist,
    toggle: togglePersisting
  } = useToggle(Boolean(originalActive) && Boolean(persistOnClick));
  const [activatorNode, setActivatorNode] = (0, import_react54.useState)(null);
  const {
    presenceList,
    addPresence,
    removePresence
  } = useEphemeralPresenceManager();
  const id = (0, import_react54.useId)();
  const activatorContainer = (0, import_react54.useRef)(null);
  const mouseEntered = (0, import_react54.useRef)(false);
  const [shouldAnimate, setShouldAnimate] = (0, import_react54.useState)(Boolean(!originalActive));
  const hoverDelayTimeout = (0, import_react54.useRef)(null);
  const hoverOutTimeout = (0, import_react54.useRef)(null);
  const handleFocus = (0, import_react54.useCallback)(() => {
    if (originalActive !== false) {
      setActiveTrue();
    }
  }, [originalActive, setActiveTrue]);
  (0, import_react54.useEffect)(() => {
    const firstFocusable = activatorContainer.current ? findFirstFocusableNode(activatorContainer.current) : null;
    const accessibilityNode = firstFocusable || activatorContainer.current;
    if (!accessibilityNode)
      return;
    accessibilityNode.tabIndex = 0;
    accessibilityNode.setAttribute("aria-describedby", id);
    accessibilityNode.setAttribute("data-polaris-tooltip-activator", "true");
  }, [id, children2]);
  (0, import_react54.useEffect)(() => {
    return () => {
      if (hoverDelayTimeout.current) {
        clearTimeout(hoverDelayTimeout.current);
      }
      if (hoverOutTimeout.current) {
        clearTimeout(hoverOutTimeout.current);
      }
    };
  }, []);
  const handleOpen = (0, import_react54.useCallback)(() => {
    setShouldAnimate(!presenceList.tooltip && !active);
    onOpen == null ? void 0 : onOpen();
    addPresence("tooltip");
  }, [addPresence, presenceList.tooltip, onOpen, active]);
  const handleClose = (0, import_react54.useCallback)(() => {
    onClose == null ? void 0 : onClose();
    setShouldAnimate(false);
    hoverOutTimeout.current = setTimeout(() => {
      removePresence("tooltip");
    }, HOVER_OUT_TIMEOUT);
  }, [removePresence, onClose]);
  const handleKeyUp = (0, import_react54.useCallback)((event) => {
    if (event.key !== "Escape")
      return;
    handleClose == null ? void 0 : handleClose();
    handleBlur();
    persistOnClick && togglePersisting();
  }, [handleBlur, handleClose, persistOnClick, togglePersisting]);
  (0, import_react54.useEffect)(() => {
    if (originalActive === false && active) {
      handleClose();
      handleBlur();
    }
  }, [originalActive, active, handleClose, handleBlur]);
  const portal2 = activatorNode ? import_react54.default.createElement(Portal, {
    idPrefix: "tooltip"
  }, import_react54.default.createElement(TooltipOverlay, {
    id,
    preferredPosition,
    activator: activatorNode,
    active,
    accessibilityLabel,
    onClose: noop3,
    preventInteraction: dismissOnMouseOut,
    width: width2,
    padding,
    borderRadius,
    zIndexOverride,
    instant: !shouldAnimate
  }, content)) : null;
  const wrapperClassNames = classNames(activatorWrapper === "div" && styles12.TooltipContainer, hasUnderline && styles12.HasUnderline);
  return import_react54.default.createElement(WrapperComponent, {
    onFocus: () => {
      handleOpen();
      handleFocus();
    },
    onBlur: () => {
      handleClose();
      handleBlur();
      if (persistOnClick) {
        togglePersisting();
      }
    },
    onMouseLeave: handleMouseLeave,
    onMouseOver: handleMouseEnterFix,
    onMouseDown: persistOnClick ? togglePersisting : void 0,
    ref: setActivator,
    onKeyUp: handleKeyUp,
    className: wrapperClassNames
  }, children2, portal2);
  function setActivator(node) {
    const activatorContainerRef = activatorContainer;
    if (node == null) {
      activatorContainerRef.current = null;
      setActivatorNode(null);
      return;
    }
    node.firstElementChild instanceof HTMLElement && setActivatorNode(node.firstElementChild);
    activatorContainerRef.current = node;
  }
  function handleMouseEnter() {
    mouseEntered.current = true;
    if (hoverDelay && !presenceList.tooltip) {
      hoverDelayTimeout.current = setTimeout(() => {
        handleOpen();
        handleFocus();
      }, hoverDelay);
    } else {
      handleOpen();
      handleFocus();
    }
  }
  function handleMouseLeave() {
    if (hoverDelayTimeout.current) {
      clearTimeout(hoverDelayTimeout.current);
      hoverDelayTimeout.current = null;
    }
    mouseEntered.current = false;
    handleClose();
    if (!persist) {
      handleBlur();
    }
  }
  function handleMouseEnterFix() {
    !mouseEntered.current && handleMouseEnter();
  }
}
function noop3() {
}

// node_modules/@shopify/polaris/build/esm/components/UnstyledLink/UnstyledLink.js
var import_react56 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/link/hooks.js
var import_react55 = __toESM(require_react());
function useLink() {
  return (0, import_react55.useContext)(LinkContext);
}

// node_modules/@shopify/polaris/build/esm/components/UnstyledLink/UnstyledLink.js
var UnstyledLink = (0, import_react56.memo)((0, import_react56.forwardRef)(function UnstyledLink2(props, _ref) {
  const LinkComponent = useLink();
  if (LinkComponent) {
    return import_react56.default.createElement(LinkComponent, Object.assign({}, unstyled.props, props, {
      ref: _ref
    }));
  }
  const {
    external,
    url,
    target: targetProp,
    ...rest
  } = props;
  let target;
  if (external) {
    target = "_blank";
  } else {
    target = targetProp ?? void 0;
  }
  const rel = target === "_blank" ? "noopener noreferrer" : void 0;
  return import_react56.default.createElement("a", Object.assign({
    target
  }, rest, {
    href: url,
    rel
  }, unstyled.props, {
    ref: _ref
  }));
}));

// node_modules/@shopify/polaris/build/esm/components/HorizontalStack/HorizontalStack.js
var import_react57 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/HorizontalStack/HorizontalStack.scss.js
var styles14 = {
  "HorizontalStack": "Polaris-HorizontalStack"
};

// node_modules/@shopify/polaris/build/esm/components/HorizontalStack/HorizontalStack.js
var HorizontalStack = function HorizontalStack2({
  align,
  blockAlign,
  gap,
  wrap = true,
  children: children2
}) {
  const style = {
    "--pc-horizontal-stack-align": align,
    "--pc-horizontal-stack-block-align": blockAlign,
    "--pc-horizontal-stack-wrap": wrap ? "wrap" : "nowrap",
    ...getResponsiveProps("horizontal-stack", "gap", "space", gap)
  };
  return import_react57.default.createElement("div", {
    className: styles14.HorizontalStack,
    style
  }, children2);
};

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/Item/Item.js
function Item({
  id,
  badge,
  content,
  accessibilityLabel,
  helpText,
  url,
  onAction,
  onMouseEnter,
  icon,
  image,
  prefix,
  suffix,
  disabled,
  external,
  destructive,
  ellipsis,
  truncate,
  active,
  role,
  variant = "default"
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles8.Item, disabled && styles8.disabled, destructive && styles8.destructive, active && styles8.active, variant === "default" && styles8.default, variant === "indented" && styles8.indented, variant === "menu" && styles8.menu);
  let prefixMarkup = null;
  if (prefix) {
    prefixMarkup = import_react58.default.createElement("span", {
      className: styles8.Prefix
    }, prefix);
  } else if (icon) {
    prefixMarkup = import_react58.default.createElement("span", {
      className: styles8.Prefix
    }, import_react58.default.createElement(Icon, {
      source: icon
    }));
  } else if (image) {
    prefixMarkup = import_react58.default.createElement("span", {
      role: "presentation",
      className: styles8.Prefix,
      style: {
        backgroundImage: `url(${image}`
      }
    });
  }
  let contentText = content || "";
  if (truncate && content) {
    contentText = import_react58.default.createElement(TruncateText, null, content);
  } else if (ellipsis) {
    contentText = `${content}…`;
  }
  const contentMarkup = helpText ? import_react58.default.createElement(import_react58.default.Fragment, null, import_react58.default.createElement(Box, null, contentText), import_react58.default.createElement(Text, {
    as: "span",
    variant: polarisSummerEditions2023 ? "bodySm" : void 0,
    color: polarisSummerEditions2023 && (active || disabled) ? void 0 : "subdued"
  }, helpText)) : contentText;
  const badgeMarkup = badge && import_react58.default.createElement("span", {
    className: styles8.Suffix
  }, import_react58.default.createElement(Badge, {
    status: badge.status
  }, badge.content));
  const suffixMarkup = suffix && import_react58.default.createElement(Box, null, import_react58.default.createElement("span", {
    className: styles8.Suffix
  }, suffix));
  const textMarkup = import_react58.default.createElement("span", {
    className: styles8.Text
  }, contentMarkup);
  const contentElement = import_react58.default.createElement(HorizontalStack, {
    blockAlign: "center",
    gap: polarisSummerEditions2023 ? "150" : "400",
    wrap: !truncate
  }, prefixMarkup, textMarkup, badgeMarkup, suffixMarkup);
  const contentWrapper = polarisSummerEditions2023 ? import_react58.default.createElement(Box, {
    width: "100%"
  }, contentElement) : contentElement;
  const scrollMarkup = active ? import_react58.default.createElement(Scrollable.ScrollTo, null) : null;
  const control = url ? import_react58.default.createElement(UnstyledLink, {
    id,
    url: disabled ? null : url,
    className,
    external,
    "aria-label": accessibilityLabel,
    onClick: disabled ? null : onAction,
    role
  }, contentWrapper) : import_react58.default.createElement("button", {
    id,
    type: "button",
    className,
    disabled,
    "aria-label": accessibilityLabel,
    onClick: onAction,
    onMouseUp: handleMouseUpByBlurring,
    role,
    onMouseEnter
  }, contentWrapper);
  return import_react58.default.createElement(import_react58.default.Fragment, null, scrollMarkup, control);
}
var TruncateText = ({
  children: children2
}) => {
  const textRef = (0, import_react58.useRef)(null);
  const [isOverflowing, setIsOverflowing] = (0, import_react58.useState)(false);
  useIsomorphicLayoutEffect(() => {
    if (textRef.current) {
      setIsOverflowing(textRef.current.scrollWidth > textRef.current.offsetWidth);
    }
  }, [children2]);
  const text2 = import_react58.default.createElement(Text, {
    as: "span",
    truncate: true
  }, import_react58.default.createElement(Box, {
    width: "100%",
    ref: textRef
  }, children2));
  return isOverflowing ? import_react58.default.createElement(Tooltip, {
    zIndexOverride: Number(zIndex2["z-index-11"]),
    preferredPosition: "above",
    hoverDelay: 1e3,
    content: children2,
    dismissOnMouseOut: true
  }, import_react58.default.createElement(Text, {
    as: "span",
    truncate: true
  }, children2)) : text2;
};

// node_modules/@shopify/polaris/build/esm/components/VerticalStack/VerticalStack.js
var import_react59 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/VerticalStack/VerticalStack.scss.js
var styles15 = {
  "VerticalStack": "Polaris-VerticalStack",
  "listReset": "Polaris-VerticalStack--listReset",
  "fieldsetReset": "Polaris-VerticalStack--fieldsetReset"
};

// node_modules/@shopify/polaris/build/esm/components/VerticalStack/VerticalStack.js
var VerticalStack = ({
  as = "div",
  children: children2,
  align,
  inlineAlign,
  gap,
  id,
  reverseOrder = false,
  ...restProps
}) => {
  const className = classNames(styles15.VerticalStack, (as === "ul" || as === "ol") && styles15.listReset, as === "fieldset" && styles15.fieldsetReset);
  const style = {
    "--pc-vertical-stack-align": align ? `${align}` : null,
    "--pc-vertical-stack-inline-align": inlineAlign ? `${inlineAlign}` : null,
    "--pc-vertical-stack-order": reverseOrder ? "column-reverse" : "column",
    ...getResponsiveProps("vertical-stack", "gap", "space", gap)
  };
  return import_react59.default.createElement(as, {
    className,
    style: sanitizeCustomProperties(style),
    ...restProps
  }, children2);
};

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/Section/Section.js
function Section2({
  section,
  hasMultipleSections,
  isFirst,
  actionRole,
  onActionAnyItem
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const handleAction = (itemOnAction) => {
    return () => {
      if (itemOnAction) {
        itemOnAction();
      }
      if (onActionAnyItem) {
        onActionAnyItem();
      }
    };
  };
  const actionMarkup = section.items.map(({
    content,
    helpText,
    onAction,
    ...item
  }, index) => {
    const itemMarkup = import_react60.default.createElement(Item, Object.assign({
      content,
      helpText,
      role: actionRole,
      onAction: handleAction(onAction)
    }, item));
    return import_react60.default.createElement(Box, {
      as: "li",
      key: `${content}-${index}`,
      role: actionRole === "menuitem" ? "presentation" : void 0
    }, polarisSummerEditions2023 ? import_react60.default.createElement(HorizontalStack, {
      wrap: false
    }, itemMarkup) : itemMarkup);
  });
  let titleMarkup = null;
  if (section.title) {
    titleMarkup = typeof section.title === "string" ? import_react60.default.createElement(Box, polarisSummerEditions2023 ? {
      paddingBlockStart: "300",
      paddingBlockEnd: "100",
      paddingInlineStart: "300",
      paddingInlineEnd: "300"
    } : {
      paddingBlockStart: "400",
      paddingInlineStart: "400",
      paddingBlockEnd: "200",
      paddingInlineEnd: "400"
    }, import_react60.default.createElement(Text, {
      as: "p",
      variant: polarisSummerEditions2023 ? "headingSm" : "headingXs"
    }, section.title)) : import_react60.default.createElement(Box, {
      padding: "200",
      paddingInlineEnd: "150"
    }, section.title);
  }
  let sectionRole;
  switch (actionRole) {
    case "option":
      sectionRole = "presentation";
      break;
    case "menuitem":
      sectionRole = !hasMultipleSections ? "menu" : "presentation";
      break;
    default:
      sectionRole = void 0;
      break;
  }
  const sectionMarkup = import_react60.default.createElement(import_react60.default.Fragment, null, titleMarkup, import_react60.default.createElement(Box, Object.assign({
    as: polarisSummerEditions2023 ? "div" : "ul",
    padding: polarisSummerEditions2023 ? "150" : "200"
  }, hasMultipleSections && {
    paddingBlockStart: "0"
  }, sectionRole && !polarisSummerEditions2023 && {
    role: sectionRole
  }, {
    tabIndex: !hasMultipleSections ? -1 : void 0
  }), polarisSummerEditions2023 ? import_react60.default.createElement(VerticalStack, Object.assign({
    gap: "100",
    as: "ul"
  }, sectionRole && {
    role: sectionRole
  }), actionMarkup) : actionMarkup));
  return hasMultipleSections ? import_react60.default.createElement(Box, Object.assign({
    as: "li",
    role: "presentation",
    borderColor: "border-subdued"
  }, !isFirst && {
    borderBlockStartWidth: "1"
  }, !section.title && {
    paddingBlockStart: polarisSummerEditions2023 ? "150" : "200"
  }), sectionMarkup) : sectionMarkup;
}

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/SearchField/SearchField.js
var import_react61 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/SearchField/SearchField.scss.js
var styles16 = {
  "SearchField": "Polaris-ActionList-SearchField",
  "focused": "Polaris-ActionList-SearchField--focused",
  "Input": "Polaris-ActionList-SearchField__Input",
  "Backdrop": "Polaris-ActionList-SearchField__Backdrop",
  "Icon": "Polaris-ActionList-SearchField__Icon",
  "Clear": "Polaris-ActionList-SearchField__Clear"
};

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/SearchField/SearchField.js
function SearchField({
  value,
  placeholder,
  onChange
}) {
  const i18n = useI18n();
  const input = (0, import_react61.useRef)(null);
  const searchId = (0, import_react61.useId)();
  const handleChange = (0, import_react61.useCallback)(({
    currentTarget
  }) => {
    onChange(currentTarget.value);
  }, [onChange]);
  const handleClear = (0, import_react61.useCallback)(() => {
    if (!input.current) {
      return;
    }
    input.current.value = "";
    onChange("");
    input.current.focus();
  }, [onChange]);
  const clearMarkup = value !== "" && import_react61.default.createElement("button", {
    type: "button",
    "aria-label": i18n.translate("Polaris.ActionList.SearchField.clearButtonLabel"),
    className: styles16.Clear,
    onClick: handleClear,
    onBlur: () => {
      handleClear();
    }
  }, import_react61.default.createElement(Icon, {
    source: SvgCircleCancelMinor
  }));
  const handleRef = (ref) => {
    input.current = ref;
    setTimeout(() => {
      ref == null ? void 0 : ref.focus();
    });
  };
  return import_react61.default.createElement("div", {
    className: styles16.SearchField
  }, import_react61.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, import_react61.default.createElement("label", {
    htmlFor: searchId
  }, i18n.translate("Polaris.ActionList.SearchField.search"))), import_react61.default.createElement("input", {
    id: searchId,
    className: styles16.Input,
    placeholder,
    type: "search",
    autoCapitalize: "off",
    autoComplete: "off",
    autoCorrect: "off",
    ref: handleRef,
    value,
    onChange: handleChange,
    onKeyDown: preventDefault
  }), import_react61.default.createElement("span", {
    className: styles16.Icon
  }, import_react61.default.createElement(Icon, {
    source: SvgSearchMinor
  })), clearMarkup, import_react61.default.createElement("div", {
    className: styles16.Backdrop
  }));
}
function preventDefault(event) {
  if (event.key === "Enter") {
    event.preventDefault();
  }
}

// node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.js
var FILTER_ACTIONS_THRESHOLD = 8;
function ActionList({
  items,
  sections = [],
  actionRole,
  allowFiltering,
  onActionAnyItem
}) {
  const i18n = useI18n();
  const filterActions = (0, import_react62.useContext)(FilterActionsContext);
  let finalSections = [];
  const actionListRef = (0, import_react62.useRef)(null);
  const [searchText, setSeachText] = (0, import_react62.useState)("");
  if (items) {
    finalSections = [{
      items
    }, ...sections];
  } else if (sections) {
    finalSections = sections;
  }
  const isFilterable = finalSections == null ? void 0 : finalSections.some((section) => section.items.some((item) => typeof item.content === "string"));
  const hasMultipleSections = finalSections.length > 1;
  const elementRole = hasMultipleSections && actionRole === "menuitem" ? "menu" : void 0;
  const elementTabIndex = hasMultipleSections && actionRole === "menuitem" ? -1 : void 0;
  const filteredSections = finalSections == null ? void 0 : finalSections.map((section) => ({
    ...section,
    items: section.items.filter(({
      content
    }) => typeof content === "string" ? content == null ? void 0 : content.toLowerCase().includes(searchText.toLowerCase()) : content)
  }));
  const sectionMarkup = filteredSections.map((section, index) => {
    return section.items.length > 0 ? import_react62.default.createElement(Section2, {
      key: typeof section.title === "string" ? section.title : index,
      section,
      hasMultipleSections,
      actionRole,
      onActionAnyItem,
      isFirst: index === 0
    }) : null;
  });
  const handleFocusPreviousItem = (evt) => {
    evt.preventDefault();
    if (actionListRef.current && evt.target) {
      if (actionListRef.current.contains(evt.target)) {
        wrapFocusPreviousFocusableMenuItem(actionListRef.current, evt.target);
      }
    }
  };
  const handleFocusNextItem = (evt) => {
    evt.preventDefault();
    if (actionListRef.current && evt.target) {
      if (actionListRef.current.contains(evt.target)) {
        wrapFocusNextFocusableMenuItem(actionListRef.current, evt.target);
      }
    }
  };
  const listeners = actionRole === "menuitem" ? import_react62.default.createElement(import_react62.default.Fragment, null, import_react62.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.DownArrow,
    handler: handleFocusNextItem
  }), import_react62.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.UpArrow,
    handler: handleFocusPreviousItem
  })) : null;
  const totalFilteredActions = (0, import_react62.useMemo)(() => {
    const totalSectionItems = (filteredSections == null ? void 0 : filteredSections.reduce((acc, section) => acc + section.items.length, 0)) || 0;
    return totalSectionItems;
  }, [filteredSections]);
  const totalActions = (finalSections == null ? void 0 : finalSections.reduce((acc, section) => acc + section.items.length, 0)) || 0;
  const hasManyActions = totalActions >= FILTER_ACTIONS_THRESHOLD;
  return import_react62.default.createElement(import_react62.default.Fragment, null, (allowFiltering || filterActions) && hasManyActions && isFilterable && import_react62.default.createElement(Box, {
    padding: "200",
    paddingBlockEnd: totalFilteredActions > 0 ? "0" : "200"
  }, import_react62.default.createElement(SearchField, {
    placeholder: i18n.translate("Polaris.ActionList.SearchField.placeholder"),
    value: searchText,
    onChange: (value) => setSeachText(value)
  })), import_react62.default.createElement(Box, {
    as: hasMultipleSections ? "ul" : "div",
    ref: actionListRef,
    role: elementRole,
    tabIndex: elementTabIndex
  }, listeners, sectionMarkup));
}
ActionList.Item = Item;

// node_modules/@shopify/polaris/build/esm/components/UnstyledButton/UnstyledButton.js
var import_react63 = __toESM(require_react());
function UnstyledButton({
  id,
  children: children2,
  className,
  url,
  external,
  target,
  download,
  submit,
  disabled,
  loading,
  pressed,
  accessibilityLabel,
  role,
  ariaControls,
  ariaExpanded,
  ariaDescribedBy,
  ariaChecked,
  onClick,
  onFocus,
  onBlur,
  onKeyDown,
  onKeyPress,
  onKeyUp,
  onMouseEnter,
  onTouchStart,
  ...rest
}) {
  let buttonMarkup;
  const commonProps = {
    id,
    className,
    "aria-label": accessibilityLabel
  };
  const interactiveProps = {
    ...commonProps,
    role,
    onClick,
    onFocus,
    onBlur,
    onMouseUp: handleMouseUpByBlurring,
    onMouseEnter,
    onTouchStart
  };
  const handleClick = useDisableClick(disabled, onClick);
  if (url) {
    buttonMarkup = disabled ? (
      // Render an `<a>` so toggling disabled/enabled state changes only the
      // `href` attribute instead of replacing the whole element.
      import_react63.default.createElement("a", commonProps, children2)
    ) : import_react63.default.createElement(UnstyledLink, Object.assign({}, interactiveProps, {
      url,
      external,
      target,
      download
    }, rest), children2);
  } else {
    buttonMarkup = import_react63.default.createElement("button", Object.assign({}, interactiveProps, {
      "aria-disabled": disabled,
      type: submit ? "submit" : "button",
      "aria-busy": loading ? true : void 0,
      "aria-controls": ariaControls,
      "aria-expanded": ariaExpanded,
      "aria-describedby": ariaDescribedBy,
      "aria-checked": ariaChecked,
      "aria-pressed": pressed,
      onKeyDown,
      onKeyUp,
      onKeyPress,
      onClick: handleClick,
      tabIndex: disabled ? -1 : void 0
    }, rest), children2);
  }
  return buttonMarkup;
}

// node_modules/@shopify/polaris/build/esm/components/Button/Button.js
var DEFAULT_SIZE2 = "medium";
function Button({
  id,
  children: children2,
  url,
  disabled,
  external,
  download,
  target,
  submit,
  loading,
  pressed,
  accessibilityLabel,
  role,
  ariaControls,
  ariaExpanded,
  ariaDescribedBy,
  ariaChecked,
  onClick,
  onFocus,
  onBlur,
  onKeyDown,
  onKeyPress,
  onKeyUp,
  onMouseEnter,
  onTouchStart,
  onPointerDown,
  icon,
  primary,
  outline,
  destructive,
  disclosure,
  plain,
  monochrome,
  removeUnderline,
  size: size2 = DEFAULT_SIZE2,
  textAlign,
  fullWidth,
  connectedDisclosure,
  dataPrimaryLink,
  primarySuccess
}) {
  const i18n = useI18n();
  const isDisabled = disabled || loading;
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles.Button, primary && styles.primary, outline && !polarisSummerEditions2023 && styles.outline, destructive && styles.destructive, primary && plain && styles.primaryPlain, isDisabled && styles.disabled, loading && styles.loading, plain && !primary && styles.plain, pressed && !disabled && !url && styles.pressed, monochrome && styles.monochrome, size2 && size2 !== DEFAULT_SIZE2 && styles[variationName("size", size2)], textAlign && styles[variationName("textAlign", textAlign)], fullWidth && styles.fullWidth, icon && children2 == null && styles.iconOnly, connectedDisclosure && styles.connectedDisclosure, removeUnderline && styles.removeUnderline, primarySuccess && styles.primary, primarySuccess && styles.success, polarisSummerEditions2023 && destructive && !outline && !plain && styles.primary, polarisSummerEditions2023 && outline && destructive && styles.destructive);
  const disclosureUpIcon = polarisSummerEditions2023 ? SvgChevronUpMinor : SvgCaretUpMinor;
  const disclosureDownIcon = polarisSummerEditions2023 ? SvgChevronDownMinor : SvgCaretDownMinor;
  const disclosureMarkup = disclosure ? import_react64.default.createElement("span", {
    className: styles.Icon
  }, import_react64.default.createElement("div", {
    className: classNames(styles.DisclosureIcon, loading && styles.hidden)
  }, import_react64.default.createElement(Icon, {
    source: loading ? "placeholder" : getDisclosureIconSource(disclosure, disclosureUpIcon, disclosureDownIcon)
  }))) : null;
  const iconSource = isIconSource(icon) ? import_react64.default.createElement(Icon, {
    source: loading ? "placeholder" : icon
  }) : icon;
  const iconMarkup = iconSource ? import_react64.default.createElement("span", {
    className: classNames(styles.Icon, loading && styles.hidden)
  }, iconSource) : null;
  const childMarkup = children2 ? import_react64.default.createElement("span", {
    className: classNames(styles.Text, removeUnderline && styles.removeUnderline),
    key: disabled ? "text-disabled" : "text"
  }, children2) : null;
  const spinnerSVGMarkup = loading ? import_react64.default.createElement("span", {
    className: styles.Spinner
  }, import_react64.default.createElement(Spinner, {
    size: "small",
    accessibilityLabel: i18n.translate("Polaris.Button.spinnerAccessibilityLabel")
  })) : null;
  const [disclosureActive, setDisclosureActive] = (0, import_react64.useState)(false);
  const toggleDisclosureActive = (0, import_react64.useCallback)(() => {
    setDisclosureActive((disclosureActive2) => !disclosureActive2);
  }, []);
  const handleClick = useDisableClick(disabled, toggleDisclosureActive);
  let connectedDisclosureMarkup;
  if (connectedDisclosure) {
    const connectedDisclosureClassName = classNames(styles.Button, primary && styles.primary, outline && styles.outline, size2 && size2 !== DEFAULT_SIZE2 && styles[variationName("size", size2)], textAlign && styles[variationName("textAlign", textAlign)], destructive && styles.destructive, connectedDisclosure.disabled && styles.disabled, styles.iconOnly, styles.ConnectedDisclosure, monochrome && styles.monochrome);
    const defaultLabel = i18n.translate("Polaris.Button.connectedDisclosureAccessibilityLabel");
    const {
      disabled: disabled2,
      accessibilityLabel: disclosureLabel = defaultLabel
    } = connectedDisclosure;
    const connectedDisclosureActivator = import_react64.default.createElement("button", {
      type: "button",
      className: connectedDisclosureClassName,
      "aria-disabled": disabled2,
      "aria-label": disclosureLabel,
      "aria-describedby": ariaDescribedBy,
      "aria-checked": ariaChecked,
      onClick: handleClick,
      onMouseUp: handleMouseUpByBlurring,
      tabIndex: disabled2 ? -1 : void 0
    }, import_react64.default.createElement("span", {
      className: styles.Icon
    }, import_react64.default.createElement(Icon, {
      source: polarisSummerEditions2023 ? SvgChevronDownMinor : SvgCaretDownMinor
    })));
    connectedDisclosureMarkup = import_react64.default.createElement(Popover2, {
      active: disclosureActive,
      onClose: toggleDisclosureActive,
      activator: connectedDisclosureActivator,
      preferredAlignment: "right"
    }, import_react64.default.createElement(ActionList, {
      items: connectedDisclosure.actions,
      onActionAnyItem: toggleDisclosureActive
    }));
  }
  const commonProps = {
    id,
    className,
    accessibilityLabel,
    ariaDescribedBy,
    role,
    onClick,
    onFocus,
    onBlur,
    onMouseUp: handleMouseUpByBlurring,
    onMouseEnter,
    onTouchStart,
    "data-primary-link": dataPrimaryLink
  };
  const linkProps = {
    url,
    external,
    download,
    target
  };
  const actionProps = {
    submit,
    disabled: isDisabled,
    loading,
    ariaControls,
    ariaExpanded,
    ariaChecked,
    pressed,
    onKeyDown,
    onKeyUp,
    onKeyPress,
    onPointerDown
  };
  const buttonMarkup = import_react64.default.createElement(UnstyledButton, Object.assign({}, commonProps, linkProps, actionProps), import_react64.default.createElement("span", {
    className: styles.Content
  }, spinnerSVGMarkup, iconMarkup, childMarkup, disclosureMarkup));
  return connectedDisclosureMarkup ? import_react64.default.createElement("div", {
    className: styles.ConnectedDisclosureWrapper
  }, buttonMarkup, connectedDisclosureMarkup) : buttonMarkup;
}
function isIconSource(x) {
  return typeof x === "string" || typeof x === "object" && x.body || typeof x === "function";
}
function getDisclosureIconSource(disclosure, upIcon, downIcon) {
  if (disclosure === "select") {
    return SvgSelectMinor;
  }
  return disclosure === "up" ? upIcon : downIcon;
}

// node_modules/@shopify/polaris/build/esm/components/Button/utils.js
function buttonsFrom(actions, overrides = {}) {
  if (Array.isArray(actions)) {
    return actions.map((action, index) => buttonFrom(action, overrides, index));
  } else {
    const action = actions;
    return buttonFrom(action, overrides);
  }
}
function buttonFrom({
  content,
  onAction,
  ...action
}, overrides, key) {
  return import_react65.default.createElement(Button, Object.assign({
    key,
    onClick: onAction
  }, action, overrides), content);
}

// node_modules/@shopify/polaris/build/esm/components/Card/Card.js
var import_react67 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.js
var import_react66 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.scss.js
var styles17 = {
  "ShadowBevel": "Polaris-ShadowBevel"
};

// node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.js
function ShadowBevel(props) {
  const {
    as = "div",
    bevel = true,
    borderRadius,
    boxShadow,
    children: children2,
    zIndex: zIndex3 = "0"
  } = props;
  const {
    polarisSummerEditions2023ShadowBevelOptOut
  } = useFeatures();
  const Component7 = as;
  return import_react66.default.createElement(Component7, {
    className: styles17.ShadowBevel,
    style: {
      "--pc-shadow-bevel-z-index": zIndex3,
      ...getResponsiveValue("shadow-bevel", "content", mapResponsiveProp(bevel, (bevel2) => {
        if (polarisSummerEditions2023ShadowBevelOptOut) {
          return "none";
        }
        return bevel2 ? '""' : "none";
      })),
      ...getResponsiveValue("shadow-bevel", "box-shadow", mapResponsiveProp(bevel, (bevel2) => bevel2 ? `var(--p-shadow-${boxShadow})` : "none")),
      ...getResponsiveValue("shadow-bevel", "border-radius", mapResponsiveProp(bevel, (bevel2) => bevel2 ? `var(--p-border-radius-${borderRadius})` : "var(--p-border-radius-0-experimental)"))
    }
  }, children2);
}
function mapResponsiveProp(responsiveProp, callback) {
  if (typeof responsiveProp === "boolean") {
    return callback(responsiveProp);
  }
  return Object.fromEntries(Object.entries(responsiveProp).map(([breakpointsAlias, value]) => [breakpointsAlias, callback(value)]));
}

// node_modules/@shopify/polaris/build/esm/components/Card/Card.js
var Card = ({
  children: children2,
  background = "bg",
  padding = {
    xs: "400",
    sm: "500"
  },
  roundedAbove
}) => {
  const breakpoints3 = useBreakpoints();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const defaultBorderRadius = polarisSummerEditions2023 ? "3" : "2";
  const isDefaultPadding = typeof padding !== "string" && (padding == null ? void 0 : padding.xs) === "400" && (padding == null ? void 0 : padding.sm) === "500" && padding.md === void 0 && padding.lg === void 0 && padding.xl === void 0;
  const finalPadding = isDefaultPadding && polarisSummerEditions2023 ? {
    xs: "400"
  } : padding;
  let hasBorderRadius = !roundedAbove;
  if (roundedAbove && breakpoints3[`${roundedAbove}Up`]) {
    hasBorderRadius = true;
  }
  return import_react67.default.createElement(WithinContentContext.Provider, {
    value: true
  }, polarisSummerEditions2023 ? import_react67.default.createElement(ShadowBevel, {
    boxShadow: "xs",
    borderRadius: hasBorderRadius ? "3" : "0-experimental",
    zIndex: "32"
  }, import_react67.default.createElement(Box, {
    background,
    padding: finalPadding,
    overflowX: "hidden",
    overflowY: "hidden",
    minHeight: "100%"
  }, children2)) : import_react67.default.createElement(Box, {
    background,
    padding: finalPadding,
    shadow: "md",
    borderRadius: hasBorderRadius ? defaultBorderRadius : void 0,
    overflowX: "hidden",
    overflowY: "hidden"
  }, children2));
};

// node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.js
var import_react68 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.scss.js
var styles18 = {
  "SettingAction": "Polaris-SettingAction",
  "Setting": "Polaris-SettingAction__Setting",
  "Action": "Polaris-SettingAction__Action"
};

// node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.js
function SettingAction({
  action,
  children: children2
}) {
  return import_react68.default.createElement("div", {
    className: styles18.SettingAction
  }, import_react68.default.createElement("div", {
    className: styles18.Setting
  }, children2), import_react68.default.createElement("div", {
    className: styles18.Action
  }, action));
}

// node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.js
var import_react70 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.scss.js
var styles19 = {
  "Avatar": "Polaris-Avatar",
  "imageHasLoaded": "Polaris-Avatar--imageHasLoaded",
  "Text": "Polaris-Avatar__Text",
  "long": "Polaris-Avatar--long",
  "shapeRound": "Polaris-Avatar--shapeRound",
  "shapeSquare": "Polaris-Avatar--shapeSquare",
  "hidden": "Polaris-Avatar--hidden",
  "sizeExtraSmall": "Polaris-Avatar--sizeExtraSmall",
  "sizeSmall": "Polaris-Avatar--sizeSmall",
  "sizeMedium": "Polaris-Avatar--sizeMedium",
  "sizeLarge": "Polaris-Avatar--sizeLarge",
  "sizeXl-experimental": "Polaris-Avatar__sizeXl--experimental",
  "size2xl-experimental": "Polaris-Avatar__size2xl--experimental",
  "styleOne": "Polaris-Avatar--styleOne",
  "styleTwo": "Polaris-Avatar--styleTwo",
  "styleThree": "Polaris-Avatar--styleThree",
  "styleFour": "Polaris-Avatar--styleFour",
  "styleFive": "Polaris-Avatar--styleFive",
  "Image": "Polaris-Avatar__Image",
  "Initials": "Polaris-Avatar__Initials",
  "Svg": "Polaris-Avatar__Svg"
};

// node_modules/@shopify/polaris/build/esm/components/Image/Image.js
var import_react69 = __toESM(require_react());
function Image({
  alt,
  sourceSet,
  source,
  crossOrigin,
  onLoad,
  className,
  ...rest
}) {
  const finalSourceSet = sourceSet ? sourceSet.map(({
    source: subSource,
    descriptor
  }) => `${subSource} ${descriptor}`).join(",") : null;
  const handleLoad = (0, import_react69.useCallback)(() => {
    if (onLoad)
      onLoad();
  }, [onLoad]);
  return import_react69.default.createElement("img", Object.assign({
    alt,
    src: source,
    crossOrigin,
    className,
    onLoad: handleLoad
  }, finalSourceSet ? {
    srcSet: finalSourceSet
  } : {}, rest));
}

// node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.js
var Status;
(function(Status2) {
  Status2["Pending"] = "PENDING";
  Status2["Loaded"] = "LOADED";
  Status2["Errored"] = "ERRORED";
})(Status || (Status = {}));
var STYLE_CLASSES = ["one", "two", "three", "four", "five"];
var avatarStrokeWidth = {
  extraSmall: "3",
  small: "2.5",
  medium: "2.5",
  large: "2.5",
  "xl-experimental": "2",
  "2xl-experimental": "1.5"
};
function xorHash(str) {
  let hash = 0;
  for (const char of str) {
    hash ^= char.charCodeAt(0);
  }
  return hash;
}
function styleClass(name) {
  return name ? STYLE_CLASSES[xorHash(name) % STYLE_CLASSES.length] : STYLE_CLASSES[0];
}
function Avatar({
  name,
  source,
  onError,
  initials,
  customer,
  size: size2 = "medium",
  shape = "round",
  accessibilityLabel
}) {
  const i18n = useI18n();
  const isAfterInitialMount = useIsAfterInitialMount();
  const [status, setStatus] = (0, import_react70.useState)(Status.Pending);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  (0, import_react70.useEffect)(() => {
    setStatus(Status.Pending);
  }, [source]);
  const handleError = (0, import_react70.useCallback)(() => {
    setStatus(Status.Errored);
    if (onError) {
      onError();
    }
  }, [onError]);
  const handleLoad = (0, import_react70.useCallback)(() => {
    setStatus(Status.Loaded);
  }, []);
  const hasImage = source && status !== Status.Errored;
  const nameString = name || initials;
  let label;
  if (accessibilityLabel) {
    label = accessibilityLabel;
  } else if (name) {
    label = name;
  } else if (initials) {
    const splitInitials = initials.split("").join(" ");
    label = i18n.translate("Polaris.Avatar.labelWithInitials", {
      initials: splitInitials
    });
  }
  const className = classNames(styles19.Avatar, size2 && styles19[variationName("size", size2)], hasImage && status === Status.Loaded && styles19.imageHasLoaded, shape && styles19[variationName("shape", shape)], !customer && !source && styles19[variationName("style", styleClass(nameString))]);
  const textClassName = classNames(styles19.Text, ((initials == null ? void 0 : initials.length) || 0) > 2 && styles19.long);
  const imageClassName = classNames(styles19.Image, status !== Status.Loaded && styles19.hidden);
  const imageMarkUp = source && isAfterInitialMount && status !== Status.Errored ? import_react70.default.createElement(Image, {
    className: imageClassName,
    source,
    alt: "",
    role: "presentation",
    onLoad: handleLoad,
    onError: handleError
  }) : null;
  const verticalOffset = "0.35em";
  const avatarPath = polarisSummerEditions2023 ? import_react70.default.createElement(import_react70.default.Fragment, null, import_react70.default.createElement("path", {
    fill: "none",
    d: "M25.5 13.5C25.5 16.5376 23.0376 19 20 19C16.9624 19 14.5 16.5376 14.5 13.5C14.5 10.4624 16.9624 8 20 8C23.0376 8 25.5 10.4624 25.5 13.5Z",
    stroke: "currentColor",
    strokeWidth: avatarStrokeWidth[size2]
  }), import_react70.default.createElement("path", {
    fill: "none",
    d: "M10.3433 29.682L9.47 31.254C9.03481 32.0373 9.60125 33 10.4974 33H29.5026C30.3988 33 30.9652 32.0373 30.53 31.254L29.6567 29.682C27.7084 26.175 24.0119 24 20 24C15.9882 24 12.2916 26.175 10.3433 29.682Z",
    stroke: "currentColor",
    strokeWidth: avatarStrokeWidth[size2],
    strokeLinecap: "round",
    strokeLinejoin: "round"
  })) : import_react70.default.createElement("path", {
    fill: "currentColor",
    d: "M8.28 27.5A14.95 14.95 0 0120 21.8c4.76 0 8.97 2.24 11.72 5.7a14.02 14.02 0 01-8.25 5.91 14.82 14.82 0 01-6.94 0 14.02 14.02 0 01-8.25-5.9zM13.99 12.78a6.02 6.02 0 1112.03 0 6.02 6.02 0 01-12.03 0z"
  });
  const avatarBody = customer || !initials ? avatarPath : import_react70.default.createElement("text", {
    className: textClassName,
    x: "50%",
    y: "50%",
    dy: verticalOffset,
    fill: "currentColor",
    textAnchor: "middle"
  }, initials);
  const svgMarkup = hasImage ? null : import_react70.default.createElement("span", {
    className: styles19.Initials
  }, import_react70.default.createElement("svg", {
    className: styles19.Svg,
    viewBox: "0 0 40 40"
  }, avatarBody));
  return import_react70.default.createElement("span", {
    "aria-label": label,
    role: label ? "img" : "presentation",
    className
  }, svgMarkup, imageMarkUp);
}

// node_modules/@shopify/polaris/build/esm/components/AccountConnection/AccountConnection.js
function AccountConnection({
  connected = false,
  action,
  avatarUrl,
  accountName = "",
  title,
  details,
  termsOfService
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const breakpoints3 = useBreakpoints();
  const initials = accountName ? accountName.split(/\s+/).map((name) => name[0]).join("") : void 0;
  const avatarMarkup = connected ? import_react71.default.createElement("span", null, import_react71.default.createElement(Avatar, {
    accessibilityLabel: "",
    name: accountName,
    initials,
    source: avatarUrl
  })) : null;
  const titleContent = title ? title : accountName;
  const titleMarkup = polarisSummerEditions2023 ? import_react71.default.createElement(Text, {
    as: "h2",
    variant: "headingSm"
  }, titleContent) : titleContent;
  const detailsMarkup = details ? import_react71.default.createElement(Text, {
    as: "span",
    color: "subdued"
  }, details) : null;
  const termsOfServiceMarkup = termsOfService ? import_react71.default.createElement(Box, {
    paddingBlockStart: polarisSummerEditions2023 && breakpoints3.mdUp ? "400" : "500"
  }, termsOfService) : null;
  const actionElement = action ? buttonFrom(action, {
    primary: !connected
  }) : null;
  return import_react71.default.createElement(Card, null, import_react71.default.createElement(SettingAction, {
    action: actionElement
  }, import_react71.default.createElement(HorizontalStack, {
    gap: "400"
  }, avatarMarkup, import_react71.default.createElement(VerticalStack, {
    gap: polarisSummerEditions2023 ? "100" : "200"
  }, titleMarkup, detailsMarkup))), termsOfServiceMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.js
var import_react78 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.scss.js
var styles20 = {
  "ActionMenu": "Polaris-ActionMenu"
};

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.js
var import_react72 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.scss.js
var styles21 = {
  "RollupActivator": "Polaris-ActionMenu-RollupActions__RollupActivator"
};

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.js
function RollupActions({
  accessibilityLabel,
  items = [],
  sections = []
}) {
  const i18n = useI18n();
  const {
    value: rollupOpen,
    toggle: toggleRollupOpen
  } = useToggle(false);
  if (items.length === 0 && sections.length === 0) {
    return null;
  }
  const activatorMarkup = import_react72.default.createElement("div", {
    className: styles21.RollupActivator
  }, import_react72.default.createElement(Button, {
    outline: true,
    icon: SvgHorizontalDotsMinor,
    accessibilityLabel: accessibilityLabel || i18n.translate("Polaris.ActionMenu.RollupActions.rollupButton"),
    onClick: toggleRollupOpen
  }));
  return import_react72.default.createElement(Popover2, {
    active: rollupOpen,
    activator: activatorMarkup,
    preferredAlignment: "right",
    onClose: toggleRollupOpen,
    hideOnPrint: true
  }, import_react72.default.createElement(ActionList, {
    items,
    sections,
    onActionAnyItem: toggleRollupOpen
  }));
}

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js
var import_react77 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.scss.js
var styles22 = {
  "ActionsLayout": "Polaris-ActionMenu-Actions__ActionsLayout"
};

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.js
var import_react74 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.scss.js
var styles23 = {
  "Details": "Polaris-ActionMenu-MenuGroup__Details"
};

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.js
var import_react73 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.scss.js
var styles24 = {
  "SecondaryAction": "Polaris-ActionMenu-SecondaryAction",
  "destructive": "Polaris-ActionMenu-SecondaryAction--destructive"
};

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.js
function SecondaryAction({
  children: children2,
  destructive,
  helpText,
  onAction,
  getOffsetWidth,
  ...rest
}) {
  const secondaryActionsRef = (0, import_react73.useRef)(null);
  (0, import_react73.useEffect)(() => {
    var _a;
    if (!getOffsetWidth || !secondaryActionsRef.current)
      return;
    getOffsetWidth((_a = secondaryActionsRef.current) == null ? void 0 : _a.offsetWidth);
  }, [getOffsetWidth]);
  const buttonMarkup = import_react73.default.createElement(Button, Object.assign({
    onClick: onAction
  }, rest), children2);
  const actionMarkup = helpText ? import_react73.default.createElement(Tooltip, {
    preferredPosition: "below",
    content: helpText
  }, buttonMarkup) : buttonMarkup;
  return import_react73.default.createElement("div", {
    className: classNames(styles24.SecondaryAction, destructive && styles24.destructive),
    ref: secondaryActionsRef
  }, actionMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.js
function MenuGroup({
  accessibilityLabel,
  active,
  actions,
  details,
  title,
  icon,
  disabled,
  onClick,
  onClose,
  onOpen,
  getOffsetWidth,
  sections
}) {
  const handleClose = (0, import_react74.useCallback)(() => {
    onClose(title);
  }, [onClose, title]);
  const handleOpen = (0, import_react74.useCallback)(() => {
    onOpen(title);
  }, [onOpen, title]);
  const handleClick = (0, import_react74.useCallback)(() => {
    if (onClick) {
      onClick(handleOpen);
    } else {
      handleOpen();
    }
  }, [onClick, handleOpen]);
  const handleOffsetWidth = (0, import_react74.useCallback)((width2) => {
    if (!getOffsetWidth)
      return;
    getOffsetWidth(width2);
  }, [getOffsetWidth]);
  const popoverActivator = import_react74.default.createElement(SecondaryAction, {
    disclosure: true,
    disabled,
    icon,
    accessibilityLabel,
    onClick: handleClick,
    getOffsetWidth: handleOffsetWidth
  }, title);
  return import_react74.default.createElement(Popover2, {
    active: Boolean(active),
    activator: popoverActivator,
    preferredAlignment: "left",
    onClose: handleClose,
    hideOnPrint: true
  }, import_react74.default.createElement(ActionList, {
    items: actions,
    sections,
    onActionAnyItem: handleClose
  }), details && import_react74.default.createElement("div", {
    className: styles23.Details
  }, details));
}

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.js
var import_react76 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.scss.js
var styles25 = {
  "ButtonGroup": "Polaris-ButtonGroup",
  "Item": "Polaris-ButtonGroup__Item",
  "Item-plain": "Polaris-ButtonGroup__Item--plain",
  "segmented": "Polaris-ButtonGroup--segmented",
  "Item-focused": "Polaris-ButtonGroup__Item--focused",
  "fullWidth": "Polaris-ButtonGroup--fullWidth",
  "extraTight": "Polaris-ButtonGroup--extraTight",
  "tight": "Polaris-ButtonGroup--tight",
  "loose": "Polaris-ButtonGroup--loose",
  "noWrap": "Polaris-ButtonGroup--noWrap"
};

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/components/Item/Item.js
var import_react75 = __toESM(require_react());
function Item2({
  button
}) {
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const className = classNames(styles25.Item, focused && styles25["Item-focused"], button.props.plain && styles25["Item-plain"]);
  return import_react75.default.createElement("div", {
    className,
    onFocus: forceTrueFocused,
    onBlur: forceFalseFocused
  }, button);
}

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.js
function ButtonGroup({
  children: children2,
  spacing,
  segmented,
  fullWidth,
  connectedTop,
  noWrap
}) {
  const className = classNames(styles25.ButtonGroup, spacing && styles25[spacing], segmented && styles25.segmented, fullWidth && styles25.fullWidth, noWrap && styles25.noWrap);
  const contents = elementChildren(children2).map((child, index) => import_react76.default.createElement(Item2, {
    button: child,
    key: index
  }));
  return import_react76.default.createElement("div", {
    className,
    "data-buttongroup-segmented": segmented,
    "data-buttongroup-connected-top": connectedTop,
    "data-buttongroup-full-width": fullWidth,
    "data-buttongroup-no-wrap": noWrap
  }, contents);
}

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js
var ACTION_SPACING = 8;
function Actions({
  actions = [],
  groups = [],
  onActionRollup
}) {
  const i18n = useI18n();
  const actionsLayoutRef = (0, import_react77.useRef)(null);
  const menuGroupWidthRef = (0, import_react77.useRef)(0);
  const availableWidthRef = (0, import_react77.useRef)(0);
  const actionsAndGroupsLengthRef = (0, import_react77.useRef)(0);
  const timesMeasured = (0, import_react77.useRef)(0);
  const actionWidthsRef = (0, import_react77.useRef)([]);
  const rollupActiveRef = (0, import_react77.useRef)(null);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const [activeMenuGroup, setActiveMenuGroup] = (0, import_react77.useState)(void 0);
  const [measuredActions, setMeasuredActions] = (0, import_react77.useState)({
    showable: [],
    rolledUp: []
  });
  const defaultRollupGroup = {
    title: i18n.translate("Polaris.ActionMenu.Actions.moreActions"),
    actions: []
  };
  const lastMenuGroup = [...groups].pop();
  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;
  const handleActionsOffsetWidth = (0, import_react77.useCallback)((width2) => {
    actionWidthsRef.current = [...actionWidthsRef.current, width2];
  }, []);
  const handleMenuGroupToggle = (0, import_react77.useCallback)((group) => setActiveMenuGroup(activeMenuGroup ? void 0 : group), [activeMenuGroup]);
  const handleMenuGroupClose = (0, import_react77.useCallback)(() => setActiveMenuGroup(void 0), []);
  const updateActions = (0, import_react77.useCallback)(() => {
    let actionsAndGroups = [...actions, ...groups];
    if (groups.length > 0) {
      actionsAndGroups = [...actionsAndGroups].slice(0, actionsAndGroups.length - 1);
    }
    setMeasuredActions((currentMeasuredActions) => {
      const showable = actionsAndGroups.slice(0, currentMeasuredActions.showable.length);
      const rolledUp = actionsAndGroups.slice(currentMeasuredActions.showable.length, actionsAndGroups.length);
      return {
        showable,
        rolledUp
      };
    });
  }, [actions, groups]);
  const measureActions = (0, import_react77.useCallback)(() => {
    if (actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {
      return;
    }
    const actionsAndGroups = [...actions, ...groups];
    if (actionsAndGroups.length === 1) {
      setMeasuredActions({
        showable: actionsAndGroups,
        rolledUp: []
      });
      return;
    }
    let currentAvailableWidth = availableWidthRef.current;
    let newShowableActions = [];
    let newRolledUpActions = [];
    actionsAndGroups.forEach((action, index) => {
      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;
      if (canFitAction) {
        currentAvailableWidth -= actionWidthsRef.current[index] + ACTION_SPACING * 2;
        newShowableActions = [...newShowableActions, action];
      } else {
        currentAvailableWidth = 0;
        if (action === lastMenuGroup)
          return;
        newRolledUpActions = [...newRolledUpActions, action];
      }
    });
    if (onActionRollup) {
      const isRollupActive = newShowableActions.length < actionsAndGroups.length - 1;
      if (rollupActiveRef.current !== isRollupActive) {
        onActionRollup(isRollupActive);
        rollupActiveRef.current = isRollupActive;
      }
    }
    setMeasuredActions({
      showable: newShowableActions,
      rolledUp: newRolledUpActions
    });
    timesMeasured.current += 1;
    actionsAndGroupsLengthRef.current = actionsAndGroups.length;
  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, onActionRollup]);
  const handleResize = (0, import_react77.useMemo)(() => debounce(() => {
    if (!actionsLayoutRef.current)
      return;
    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;
    timesMeasured.current = 0;
    measureActions();
  }, 50, {
    leading: false,
    trailing: true
  }), [measureActions]);
  useEventListener("resize", handleResize);
  useIsomorphicLayoutEffect(() => {
    if (!actionsLayoutRef.current)
      return;
    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;
    if (
      // Allow measuring twice
      // This accounts for the initial paint and re-flow
      timesMeasured.current >= 2 && [...actions, ...groups].length === actionsAndGroupsLengthRef.current
    ) {
      updateActions();
      return;
    }
    measureActions();
  }, [actions, groups, measureActions, updateActions]);
  const actionsMarkup = actions.map((action) => {
    if (measuredActions.showable.length > 0 || measuredActions.rolledUp.includes(action))
      return null;
    const {
      content,
      onAction,
      ...rest
    } = action;
    return import_react77.default.createElement(SecondaryAction, Object.assign({
      key: content,
      onClick: onAction
    }, rest, {
      getOffsetWidth: handleActionsOffsetWidth
    }), content);
  });
  const rollUppableActionsMarkup = measuredActions.showable.length > 0 ? measuredActions.showable.map((action) => action.content && import_react77.default.createElement(SecondaryAction, Object.assign({
    key: action.content
  }, action, {
    getOffsetWidth: handleActionsOffsetWidth
  }), action.content)) : null;
  const filteredGroups = [...groups, defaultRollupGroup].filter((group) => {
    return groups.length === 0 ? group : group === lastMenuGroup || !measuredActions.rolledUp.some((rolledUpGroup) => isMenuGroup(rolledUpGroup) && rolledUpGroup.title === group.title);
  });
  const groupsMarkup = filteredGroups.map((group) => {
    const {
      title,
      actions: groupActions,
      ...rest
    } = group;
    const isDefaultGroup = group === defaultRollupGroup;
    const isLastMenuGroup = group === lastMenuGroup;
    const [finalRolledUpActions, finalRolledUpSectionGroups] = measuredActions.rolledUp.reduce(([actions2, sections], action) => {
      if (isMenuGroup(action)) {
        sections.push({
          title: action.title,
          items: action.actions.map((sectionAction) => ({
            ...sectionAction,
            disabled: action.disabled || sectionAction.disabled
          }))
        });
      } else {
        actions2.push(action);
      }
      return [actions2, sections];
    }, [[], []]);
    if (!isDefaultGroup && !isLastMenuGroup) {
      return import_react77.default.createElement(MenuGroup, Object.assign({
        key: title,
        title,
        active: title === activeMenuGroup,
        actions: groupActions
      }, rest, {
        onOpen: handleMenuGroupToggle,
        onClose: handleMenuGroupClose,
        getOffsetWidth: handleActionsOffsetWidth
      }));
    } else if (!isDefaultGroup && isLastMenuGroup) {
      return import_react77.default.createElement(MenuGroup, Object.assign({
        key: title,
        title,
        active: title === activeMenuGroup,
        actions: [...finalRolledUpActions, ...groupActions],
        sections: finalRolledUpSectionGroups
      }, rest, {
        onOpen: handleMenuGroupToggle,
        onClose: handleMenuGroupClose,
        getOffsetWidth: handleActionsOffsetWidth
      }));
    } else if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length) {
      return import_react77.default.createElement(MenuGroup, Object.assign({
        key: title,
        title,
        active: title === activeMenuGroup,
        actions: finalRolledUpActions,
        sections: finalRolledUpSectionGroups
      }, rest, {
        onOpen: handleMenuGroupToggle,
        onClose: handleMenuGroupClose,
        getOffsetWidth: handleActionsOffsetWidth
      }));
    }
  });
  const groupedActionsMarkup = import_react77.default.createElement(ButtonGroup, {
    spacing: polarisSummerEditions2023 ? "tight" : "extraTight"
  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup);
  return import_react77.default.createElement("div", {
    className: styles22.ActionsLayout,
    ref: actionsLayoutRef
  }, groupedActionsMarkup);
}
function isMenuGroup(actionOrMenuGroup) {
  return "title" in actionOrMenuGroup;
}

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.js
function ActionMenu({
  actions = [],
  groups = [],
  rollup,
  rollupActionsLabel,
  onActionRollup
}) {
  if (actions.length === 0 && groups.length === 0) {
    return null;
  }
  const actionMenuClassNames = classNames(styles20.ActionMenu, rollup && styles20.rollup);
  const rollupSections = groups.map((group) => convertGroupToSection(group));
  return import_react78.default.createElement("div", {
    className: actionMenuClassNames
  }, rollup ? import_react78.default.createElement(RollupActions, {
    accessibilityLabel: rollupActionsLabel,
    items: actions,
    sections: rollupSections
  }) : import_react78.default.createElement(Actions, {
    actions,
    groups,
    onActionRollup
  }));
}
function hasGroupsWithActions(groups = []) {
  return groups.length === 0 ? false : groups.some((group) => group.actions.length > 0);
}
function convertGroupToSection({
  title,
  actions,
  disabled
}) {
  return {
    title,
    items: actions.map((action) => ({
      ...action,
      disabled: disabled || action.disabled
    }))
  };
}

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.js
var import_react107 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/options.js
function isSection(arr) {
  return typeof arr[0] === "object" && Object.prototype.hasOwnProperty.call(arr[0], "options");
}

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.scss.js
var styles26 = {
  "Loading": "Polaris-Autocomplete__Loading",
  "SectionWrapper": "Polaris-Autocomplete__SectionWrapper"
};

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.js
var import_react96 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.scss.js
var styles27 = {
  "Content": "Polaris-Autocomplete-MappedOption__Content",
  "Media": "Polaris-Autocomplete-MappedOption__Media",
  "singleSelectionMedia": "Polaris-Autocomplete-MappedOption--singleSelectionMedia",
  "disabledMedia": "Polaris-Autocomplete-MappedOption--disabledMedia"
};

// node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.js
var import_react95 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.scss.js
var styles28 = {
  "Listbox": "Polaris-Listbox"
};

// node_modules/@shopify/polaris/build/esm/utilities/combobox/hooks.js
var import_react80 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/combobox/context.js
var import_react79 = __toESM(require_react());
var ComboboxTextFieldContext = (0, import_react79.createContext)(void 0);
var ComboboxListboxContext = (0, import_react79.createContext)({});
var ComboboxListboxOptionContext = (0, import_react79.createContext)({});

// node_modules/@shopify/polaris/build/esm/utilities/combobox/hooks.js
function useComboboxTextField() {
  const context = (0, import_react80.useContext)(ComboboxTextFieldContext);
  if (!context) {
    throw new Error("No Combobox was provided. Your component must be wrapped in a <Combobox> component.");
  }
  return context;
}
function useComboboxListbox() {
  const context = (0, import_react80.useContext)(ComboboxListboxContext);
  return context;
}

// node_modules/@shopify/polaris/build/esm/utilities/listbox/utilities.js
function scrollOptionIntoView(option, scrollable2) {
  const listTop = scrollable2.scrollTop;
  const listBottom = listTop + scrollable2.clientHeight;
  const {
    offsetHeight: optionHeight
  } = option;
  const {
    offsetTop: optionTop
  } = option;
  const optionBottom = optionTop + optionHeight;
  const isVisible = optionTop > listTop && optionBottom < listBottom;
  if (!isVisible) {
    let top = 0;
    if (optionBottom > listBottom) {
      top = optionBottom + optionHeight * 0.85 - listBottom;
    } else if (optionTop < listTop) {
      top = optionTop - optionHeight * 0.15 - listTop;
    }
    requestAnimationFrame(() => {
      scrollable2.scrollBy({
        top,
        behavior: "auto"
      });
    });
  }
}

// node_modules/@shopify/polaris/build/esm/utilities/listbox/context.js
var import_react81 = __toESM(require_react());
var ListboxContext = (0, import_react81.createContext)(void 0);
var WithinListboxContext = (0, import_react81.createContext)(false);
var ActionContext = (0, import_react81.createContext)(false);

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.js
var import_react85 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.scss.js
var styles29 = {
  "TextOption": "Polaris-Listbox-TextOption",
  "selected": "Polaris-Listbox-TextOption--selected",
  "allowMultiple": "Polaris-Listbox-TextOption--allowMultiple",
  "isAction": "Polaris-Listbox-TextOption--isAction",
  "disabled": "Polaris-Listbox-TextOption--disabled",
  "Content": "Polaris-Listbox-TextOption__Content",
  "Checkbox": "Polaris-Listbox-TextOption__Checkbox"
};

// node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.js
var import_react84 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.scss.js
var styles30 = {
  "Checkbox": "Polaris-Checkbox",
  "ChoiceLabel": "Polaris-Checkbox__ChoiceLabel",
  "Backdrop": "Polaris-Checkbox__Backdrop",
  "Input": "Polaris-Checkbox__Input",
  "Input-indeterminate": "Polaris-Checkbox__Input--indeterminate",
  "Icon": "Polaris-Checkbox__Icon",
  "animated": "Polaris-Checkbox--animated",
  "hover": "Polaris-Checkbox--hover",
  "error": "Polaris-Checkbox--error",
  "checked": "Polaris-Checkbox--checked",
  "pathAnimation": "Polaris-Checkbox--pathAnimation"
};

// node_modules/@shopify/polaris/build/esm/components/Choice/Choice.js
var import_react83 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Choice/Choice.scss.js
var styles31 = {
  "Choice": "Polaris-Choice",
  "labelHidden": "Polaris-Choice--labelHidden",
  "Label": "Polaris-Choice__Label",
  "Control": "Polaris-Choice__Control",
  "disabled": "Polaris-Choice--disabled",
  "Descriptions": "Polaris-Choice__Descriptions",
  "HelpText": "Polaris-Choice__HelpText"
};

// node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.js
var import_react82 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.scss.js
var styles32 = {
  "InlineError": "Polaris-InlineError",
  "Icon": "Polaris-InlineError__Icon"
};

// node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.js
function InlineError({
  message,
  fieldID
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  if (!message) {
    return null;
  }
  return import_react82.default.createElement("div", {
    id: errorTextID(fieldID),
    className: styles32.InlineError
  }, import_react82.default.createElement("div", {
    className: styles32.Icon
  }, import_react82.default.createElement(Icon, {
    source: polarisSummerEditions2023 ? SvgCircleAlertMajor : SvgDiamondAlertMinor
  })), message);
}
function errorTextID(id) {
  return `${id}Error`;
}

// node_modules/@shopify/polaris/build/esm/components/Choice/Choice.js
function Choice({
  id,
  label,
  disabled,
  error,
  children: children2,
  labelHidden,
  helpText,
  onClick,
  labelClassName,
  fill,
  bleed,
  bleedBlockStart,
  bleedBlockEnd,
  bleedInlineStart,
  bleedInlineEnd
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles31.Choice, labelHidden && styles31.labelHidden, disabled && styles31.disabled, labelClassName);
  const labelStyle = {
    // Pass through overrides for bleed values if they're set by the prop
    ...getResponsiveProps("choice", "bleed-block-end", "space", bleedBlockEnd || bleed),
    ...getResponsiveProps("choice", "bleed-block-start", "space", bleedBlockStart || bleed),
    ...getResponsiveProps("choice", "bleed-inline-start", "space", bleedInlineStart || bleed),
    ...getResponsiveProps("choice", "bleed-inline-end", "space", bleedInlineEnd || bleed),
    ...Object.fromEntries(Object.entries(getResponsiveValue("choice", "fill", fill)).map(
      // Map "true" => "100%" and "false" => "auto" for use in
      // inline/block-size calc()
      ([key, value]) => [key, value ? "100%" : "auto"]
    ))
  };
  const labelMarkup = (
    // NOTE: Can't use a Box here for a few reasons:
    // - as="label" fails `Element` typecheck (even though the JS works)
    // - Can't pass hard coded values to padding (forced to tokens)
    // - Can't pass negative values to padding
    // - Can't pass margins at all
    import_react83.default.createElement("label", {
      className,
      htmlFor: id,
      onClick,
      style: sanitizeCustomProperties(labelStyle)
    }, import_react83.default.createElement("span", {
      className: styles31.Control
    }, children2), import_react83.default.createElement("span", {
      className: styles31.Label
    }, import_react83.default.createElement("span", null, label)))
  );
  const helpTextMarkup = helpText ? import_react83.default.createElement("div", {
    className: styles31.HelpText,
    id: helpTextID(id)
  }, import_react83.default.createElement(Text, {
    as: "span",
    color: disabled && polarisSummerEditions2023 ? void 0 : "subdued"
  }, helpText)) : null;
  const errorMarkup = error && typeof error !== "boolean" && import_react83.default.createElement("div", {
    className: styles31.Error
  }, import_react83.default.createElement(InlineError, {
    message: error,
    fieldID: id
  }));
  const descriptionMarkup = helpTextMarkup || errorMarkup ? import_react83.default.createElement("div", {
    className: styles31.Descriptions
  }, errorMarkup, helpTextMarkup) : null;
  return descriptionMarkup ? import_react83.default.createElement("div", null, labelMarkup, descriptionMarkup) : labelMarkup;
}
function helpTextID(id) {
  return `${id}HelpText`;
}

// node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.js
var Checkbox = (0, import_react84.forwardRef)(function Checkbox2({
  ariaControls,
  ariaDescribedBy: ariaDescribedByProp,
  label,
  labelHidden,
  checked = false,
  helpText,
  disabled,
  id: idProp,
  name,
  value,
  error,
  onChange,
  onFocus,
  onBlur,
  labelClassName,
  fill,
  bleed,
  bleedBlockStart,
  bleedBlockEnd,
  bleedInlineStart,
  bleedInlineEnd
}, ref) {
  const inputNode = (0, import_react84.useRef)(null);
  const uniqId = (0, import_react84.useId)();
  const id = idProp ?? uniqId;
  const isWithinListbox = (0, import_react84.useContext)(WithinListboxContext);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  (0, import_react84.useImperativeHandle)(ref, () => ({
    focus: () => {
      if (inputNode.current) {
        inputNode.current.focus();
      }
    }
  }));
  const handleBlur = () => {
    onBlur && onBlur();
  };
  const handleOnClick = () => {
    if (onChange == null || inputNode.current == null || disabled) {
      return;
    }
    onChange(inputNode.current.checked, id);
    inputNode.current.focus();
  };
  const describedBy = [];
  if (error && typeof error !== "boolean") {
    describedBy.push(errorTextID(id));
  }
  if (helpText) {
    describedBy.push(helpTextID(id));
  }
  if (ariaDescribedByProp) {
    describedBy.push(ariaDescribedByProp);
  }
  const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
  const wrapperClassName = classNames(styles30.Checkbox, error && styles30.error);
  const isIndeterminate = checked === "indeterminate";
  const isChecked = !isIndeterminate && Boolean(checked);
  const indeterminateAttributes = isIndeterminate ? {
    indeterminate: "true",
    "aria-checked": "mixed"
  } : {
    "aria-checked": isChecked
  };
  const iconSource = isIndeterminate ? SvgMinusMinor : SvgTickSmallMinor;
  const animatedTickIcon = polarisSummerEditions2023 && !isIndeterminate;
  const iconSourceSe23 = import_react84.default.createElement("svg", {
    viewBox: "0 0 16 16",
    shapeRendering: "geometricPrecision",
    textRendering: "geometricPrecision"
  }, import_react84.default.createElement("path", {
    className: classNames(checked && styles30.checked),
    d: "M1.5,5.5L3.44655,8.22517C3.72862,8.62007,4.30578,8.64717,4.62362,8.28044L10.5,1.5",
    transform: "translate(2 2.980376)",
    opacity: "0",
    fill: "none",
    stroke: "#fff",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    pathLength: "1"
  }));
  const inputClassName = classNames(styles30.Input, isIndeterminate && styles30["Input-indeterminate"]);
  const extraChoiceProps = {
    helpText,
    error,
    bleed,
    bleedBlockStart,
    bleedBlockEnd,
    bleedInlineStart,
    bleedInlineEnd
  };
  return import_react84.default.createElement(Choice, Object.assign({
    id,
    label,
    labelHidden,
    disabled,
    labelClassName: classNames(styles30.ChoiceLabel, labelClassName),
    fill
  }, extraChoiceProps), import_react84.default.createElement("span", {
    className: wrapperClassName
  }, import_react84.default.createElement("input", Object.assign({
    ref: inputNode,
    id,
    name,
    value,
    type: "checkbox",
    checked: isChecked,
    disabled,
    className: inputClassName,
    onBlur: handleBlur,
    onChange: noop4,
    onClick: handleOnClick,
    onFocus,
    "aria-invalid": error != null,
    "aria-controls": ariaControls,
    "aria-describedby": ariaDescribedBy,
    role: isWithinListbox ? "presentation" : "checkbox"
  }, indeterminateAttributes)), import_react84.default.createElement("span", {
    className: styles30.Backdrop,
    onClick: stopPropagation,
    onKeyUp: stopPropagation
  }), import_react84.default.createElement("span", {
    className: classNames(styles30.Icon, animatedTickIcon && styles30.animated)
  }, animatedTickIcon ? iconSourceSe23 : import_react84.default.createElement(Icon, {
    source: iconSource
  }))));
});
function noop4() {
}
function stopPropagation(event) {
  event.stopPropagation();
}

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.js
var TextOption = (0, import_react85.memo)(function TextOption2({
  children: children2,
  selected,
  disabled
}) {
  const {
    allowMultiple
  } = (0, import_react85.useContext)(ComboboxListboxOptionContext);
  const isAction = (0, import_react85.useContext)(ActionContext);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const textOptionClassName = classNames(styles29.TextOption, selected && !allowMultiple && styles29.selected, disabled && styles29.disabled, allowMultiple && styles29.allowMultiple, isAction && styles29.isAction);
  const optionMarkup = polarisSummerEditions2023 && selected ? import_react85.default.createElement(Box, {
    width: "100%"
  }, import_react85.default.createElement(HorizontalStack, {
    wrap: false,
    align: "space-between",
    gap: "200"
  }, children2, import_react85.default.createElement(HorizontalStack, {
    align: "end"
  }, import_react85.default.createElement(Icon, {
    source: SvgTickMinor
  })))) : import_react85.default.createElement(import_react85.default.Fragment, null, children2);
  return import_react85.default.createElement("div", {
    className: textOptionClassName
  }, import_react85.default.createElement("div", {
    className: styles29.Content
  }, allowMultiple && !isAction ? import_react85.default.createElement("div", {
    className: styles29.Checkbox
  }, import_react85.default.createElement(Checkbox, {
    disabled,
    checked: selected,
    label: children2
  })) : optionMarkup));
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.js
var import_react87 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.scss.js
var styles33 = {
  "ListItem": "Polaris-Listbox-Loading__ListItem",
  "Loading": "Polaris-Listbox-Loading"
};

// node_modules/@shopify/polaris/build/esm/utilities/listbox/hooks.js
var import_react86 = __toESM(require_react());
function useListbox() {
  const listbox = (0, import_react86.useContext)(ListboxContext);
  if (!listbox) {
    throw new Error("No Listbox was provided. Listbox components must be wrapped in a Listbox");
  }
  return listbox;
}

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.js
var Loading = (0, import_react87.memo)(function LoadingOption({
  children: children2,
  accessibilityLabel: label
}) {
  const {
    setLoading
  } = useListbox();
  (0, import_react87.useEffect)(() => {
    setLoading(label);
    return () => {
      setLoading(void 0);
    };
  }, [label, setLoading]);
  return import_react87.default.createElement("li", {
    className: styles33.ListItem,
    role: "presentation"
  }, children2 ? children2 : import_react87.default.createElement("div", {
    className: styles33.Loading
  }, import_react87.default.createElement(Spinner, {
    size: "small",
    accessibilityLabel: label
  })));
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.js
var import_react89 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/selectors.js
var listboxSectionDataSelector = {
  props: {
    "data-polaris-listbox-section-item": true
  },
  selector: "[data-polaris-listbox-section-item]"
};
var listboxWithinSectionDataSelector = {
  attribute: "data-polaris-listbox-within-section-item"
};

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/context.js
var import_react88 = __toESM(require_react());
var SectionContext = (0, import_react88.createContext)(null);

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.scss.js
var styles34 = {
  "SectionGroup": "Polaris-Listbox-Section__SectionGroup",
  "noDivider": "Polaris-Listbox-Section--noDivider"
};

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.js
function Section3({
  children: children2,
  divider = true,
  title
}) {
  const id = (0, import_react89.useId)();
  return import_react89.default.createElement(SectionContext.Provider, {
    value: id
  }, import_react89.default.createElement("li", Object.assign({
    role: "presentation"
  }, listboxSectionDataSelector.props), title, import_react89.default.createElement("ul", {
    role: "group",
    "aria-labelledby": id,
    className: classNames(styles34.SectionGroup, !divider && styles34.noDivider)
  }, children2)));
}

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Header/Header.js
var import_react91 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/hooks.js
var import_react90 = __toESM(require_react());
function useSection() {
  const context = (0, import_react90.useContext)(SectionContext);
  return context;
}

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Header/Header.js
function Header({
  children: children2
}) {
  const sectionId = useSection() || "";
  const content = typeof children2 === "string" ? import_react91.default.createElement(Box, {
    paddingBlockStart: "200",
    paddingInlineStart: "400",
    paddingBlockEnd: "200",
    paddingInlineEnd: "400"
  }, import_react91.default.createElement(Text, {
    as: "span",
    variant: "headingXs",
    color: "subdued"
  }, children2)) : children2;
  return import_react91.default.createElement("div", {
    "aria-hidden": true,
    id: sectionId
  }, content);
}

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.js
var import_react94 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.scss.js
var styles35 = {
  "Action": "Polaris-Listbox-Action",
  "ActionDivider": "Polaris-Listbox-Action__ActionDivider",
  "Icon": "Polaris-Listbox-Action__Icon"
};

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.js
var import_react93 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.scss.js
var styles36 = {
  "Option": "Polaris-Listbox-Option",
  "divider": "Polaris-Listbox-Option--divider"
};

// node_modules/@shopify/polaris/build/esm/utilities/autocomplete/context.js
var import_react92 = __toESM(require_react());
var MappedActionContext = (0, import_react92.createContext)({});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.js
var Option = (0, import_react93.memo)(function Option2({
  value,
  children: children2,
  selected,
  disabled = false,
  accessibilityLabel,
  divider
}) {
  const {
    onOptionSelect
  } = useListbox();
  const isAction = (0, import_react93.useContext)(ActionContext);
  const {
    role,
    url,
    external,
    onAction,
    destructive
  } = (0, import_react93.useContext)(MappedActionContext);
  const listItemRef = (0, import_react93.useRef)(null);
  const domId = (0, import_react93.useId)();
  const sectionId = useSection();
  const isWithinSection = Boolean(sectionId);
  const handleOptionSelect = (0, import_react93.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    onAction && onAction();
    if (listItemRef.current && !onAction) {
      onOptionSelect({
        domId,
        value,
        element: listItemRef.current,
        disabled
      });
    }
  }, [domId, onOptionSelect, value, disabled, onAction]);
  const handleMouseDown = (event) => {
    event.preventDefault();
  };
  const content = typeof children2 === "string" ? import_react93.default.createElement(TextOption, {
    selected,
    disabled
  }, children2) : children2;
  const sectionAttributes = {
    [listboxWithinSectionDataSelector.attribute]: isWithinSection
  };
  const legacyRoleSupport = role || "option";
  const contentMarkup = url ? import_react93.default.createElement(UnstyledLink, {
    url,
    external
  }, content) : content;
  return import_react93.default.createElement("li", Object.assign({}, sectionAttributes, {
    "data-listbox-option": true,
    "data-listbox-option-action": isAction,
    "data-listbox-option-value": value,
    "data-listbox-option-destructive": destructive,
    "data-within-section": isWithinSection,
    className: classNames(styles36.Option, divider && styles36.divider),
    id: domId,
    ref: listItemRef,
    tabIndex: -1,
    role: legacyRoleSupport,
    "aria-label": accessibilityLabel,
    "aria-selected": selected,
    "aria-disabled": disabled,
    onClick: disabled ? void 0 : handleOptionSelect,
    onKeyDown: disabled ? void 0 : handleOptionSelect,
    onMouseDown: handleMouseDown
  }), contentMarkup);
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.js
function Action(props) {
  const {
    selected,
    disabled,
    children: children2,
    icon,
    divider
  } = props;
  const iconMarkup = icon && import_react94.default.createElement("div", {
    className: styles35.Icon
  }, import_react94.default.createElement(Icon, {
    color: "subdued",
    source: icon
  }));
  const className = classNames(styles35.Action, divider && styles35.ActionDivider);
  return import_react94.default.createElement(ActionContext.Provider, {
    value: true
  }, import_react94.default.createElement(Option, props, import_react94.default.createElement("div", {
    className
  }, import_react94.default.createElement(TextOption, {
    selected,
    disabled
  }, iconMarkup, children2))));
}

// node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.js
var AutoSelection;
(function(AutoSelection2) {
  AutoSelection2["FirstSelected"] = "FIRST_SELECTED";
  AutoSelection2["First"] = "FIRST";
  AutoSelection2["None"] = "NONE";
})(AutoSelection || (AutoSelection = {}));
var OPTION_SELECTOR = "[data-listbox-option]";
var OPTION_VALUE_ATTRIBUTE = "data-listbox-option-value";
var OPTION_ACTION_ATTRIBUTE = "data-listbox-option-action";
var OPTION_FOCUS_ATTRIBUTE = "data-focused";
function Listbox({
  children: children2,
  autoSelection = AutoSelection.FirstSelected,
  enableKeyboardControl,
  accessibilityLabel,
  customListId,
  onSelect,
  onActiveOptionChange
}) {
  const [loading, setLoading] = (0, import_react95.useState)();
  const [activeOption, setActiveOption] = (0, import_react95.useState)();
  const [lazyLoading, setLazyLoading] = (0, import_react95.useState)(false);
  const [currentOptions, setCurrentOptions] = (0, import_react95.useState)([]);
  const {
    value: keyboardEventsEnabled,
    setTrue: enableKeyboardEvents,
    setFalse: disableKeyboardEvents
  } = useToggle(Boolean(enableKeyboardControl));
  const uniqueId = (0, import_react95.useId)();
  const listId = customListId || uniqueId;
  const scrollableRef = (0, import_react95.useRef)(null);
  const listboxRef = (0, import_react95.useRef)(null);
  const {
    listboxId,
    textFieldLabelId,
    textFieldFocused,
    willLoadMoreOptions,
    setActiveOptionId,
    setListboxId,
    onOptionSelected,
    onKeyToBottom
  } = useComboboxListbox();
  const inCombobox = Boolean(setActiveOptionId);
  (0, import_react95.useEffect)(() => {
    if (setListboxId && !listboxId) {
      setListboxId(listId);
    }
  }, [setListboxId, listboxId, listId]);
  const getNavigableOptions = (0, import_react95.useCallback)(() => {
    if (!listboxRef.current) {
      return [];
    }
    return [...new Set(listboxRef.current.querySelectorAll(OPTION_SELECTOR))];
  }, []);
  const getFirstNavigableOption = (0, import_react95.useCallback)((currentOptions2) => {
    const hasSelectedOptions = currentOptions2.some((option) => option.getAttribute("aria-selected") === "true");
    let elementIndex = 0;
    const element = currentOptions2.find((option, index) => {
      const isInteractable = option.getAttribute("aria-disabled") !== "true";
      let isFirstNavigableOption;
      if (hasSelectedOptions && autoSelection === AutoSelection.FirstSelected) {
        const isSelected2 = option.getAttribute("aria-selected") === "true";
        isFirstNavigableOption = isSelected2 && isInteractable;
      } else {
        isFirstNavigableOption = isInteractable;
      }
      if (isFirstNavigableOption)
        elementIndex = index;
      return isFirstNavigableOption;
    });
    if (!element)
      return;
    return {
      element,
      index: elementIndex
    };
  }, [autoSelection]);
  const handleScrollIntoView = (0, import_react95.useCallback)((option) => {
    const {
      current: scrollable2
    } = scrollableRef;
    if (scrollable2) {
      scrollOptionIntoView(option.element, scrollable2);
    }
  }, []);
  const handleScrollIntoViewDebounced = debounce(handleScrollIntoView, 50);
  const handleKeyToBottom = (0, import_react95.useCallback)(() => {
    if (onKeyToBottom) {
      setLazyLoading(true);
      return Promise.resolve(onKeyToBottom());
    }
  }, [onKeyToBottom]);
  const handleChangeActiveOption = (0, import_react95.useCallback)((nextOption) => {
    if (!nextOption)
      return setActiveOption(void 0);
    activeOption == null ? void 0 : activeOption.element.removeAttribute(OPTION_FOCUS_ATTRIBUTE);
    nextOption.element.setAttribute(OPTION_FOCUS_ATTRIBUTE, "true");
    handleScrollIntoViewDebounced(nextOption);
    setActiveOption(nextOption);
    setActiveOptionId == null ? void 0 : setActiveOptionId(nextOption.domId);
    onActiveOptionChange == null ? void 0 : onActiveOptionChange(nextOption.value, nextOption.domId);
  }, [activeOption, setActiveOptionId, onActiveOptionChange, handleScrollIntoViewDebounced]);
  const getFormattedOption = (0, import_react95.useCallback)((element, index) => {
    return {
      element,
      index,
      domId: element.id,
      value: element.getAttribute(OPTION_VALUE_ATTRIBUTE) || "",
      disabled: element.getAttribute("aria-disabled") === "true",
      isAction: element.getAttribute(OPTION_ACTION_ATTRIBUTE) === "true"
    };
  }, []);
  const resetActiveOption = (0, import_react95.useCallback)(() => {
    let nextOption;
    const nextOptions = getNavigableOptions();
    const nextActiveOption = getFirstNavigableOption(nextOptions);
    if (nextOptions.length === 0 && currentOptions.length > 0) {
      setCurrentOptions(nextOptions);
      handleChangeActiveOption();
      return;
    }
    if (nextActiveOption) {
      const {
        element,
        index
      } = nextActiveOption;
      nextOption = getFormattedOption(element, index);
    }
    const optionIsAlreadyActive = activeOption !== void 0 && (nextOption == null ? void 0 : nextOption.domId) === (activeOption == null ? void 0 : activeOption.domId);
    const actionContentHasUpdated = (activeOption == null ? void 0 : activeOption.isAction) && (nextOption == null ? void 0 : nextOption.isAction) && (nextOption == null ? void 0 : nextOption.value) !== (activeOption == null ? void 0 : activeOption.value);
    const currentValues = currentOptions.map((option) => option.getAttribute(OPTION_VALUE_ATTRIBUTE));
    const nextValues = nextOptions.map((option) => option.getAttribute(OPTION_VALUE_ATTRIBUTE));
    const listIsUnchanged = nextValues.length === currentValues.length && nextValues.every((value, index) => {
      return currentValues[index] === value;
    });
    const listIsAppended = currentValues.length !== 0 && nextValues.length > currentValues.length && currentValues.every((value, index) => {
      return nextValues[index] === value;
    });
    if (listIsUnchanged) {
      if (optionIsAlreadyActive && actionContentHasUpdated) {
        setCurrentOptions(nextOptions);
        handleChangeActiveOption(nextOption);
      }
      return;
    }
    if (listIsAppended) {
      setCurrentOptions(nextOptions);
      return;
    }
    setCurrentOptions(nextOptions);
    if (lazyLoading) {
      setLazyLoading(false);
      return;
    }
    handleChangeActiveOption(nextOption);
  }, [lazyLoading, currentOptions, activeOption, getFirstNavigableOption, getNavigableOptions, getFormattedOption, handleChangeActiveOption]);
  (0, import_react95.useEffect)(() => {
    if (autoSelection !== AutoSelection.None && !loading && children2 && import_react95.Children.count(children2) > 0) {
      resetActiveOption();
    }
  }, [children2, autoSelection, activeOption, loading, resetActiveOption]);
  (0, import_react95.useEffect)(() => {
    if (listboxRef.current) {
      scrollableRef.current = listboxRef.current.closest(scrollable.selector);
    }
  }, []);
  (0, import_react95.useEffect)(() => {
    if (enableKeyboardControl && !keyboardEventsEnabled) {
      enableKeyboardEvents();
    }
  }, [enableKeyboardControl, keyboardEventsEnabled, enableKeyboardEvents]);
  const onOptionSelect = (0, import_react95.useCallback)((option) => {
    handleChangeActiveOption(option);
    if (onOptionSelected)
      onOptionSelected();
    if (onSelect)
      onSelect(option.value);
  }, [handleChangeActiveOption, onSelect, onOptionSelected]);
  const getNextIndex = (0, import_react95.useCallback)((currentIndex, lastIndex, direction) => {
    let nextIndex;
    if (direction === "down") {
      if (currentIndex === lastIndex) {
        nextIndex = willLoadMoreOptions ? currentIndex + 1 : 0;
      } else {
        nextIndex = currentIndex + 1;
      }
    } else {
      nextIndex = currentIndex === 0 ? lastIndex : currentIndex - 1;
    }
    return nextIndex;
  }, [willLoadMoreOptions]);
  const getNextValidOption = (0, import_react95.useCallback)(async (key) => {
    const lastIndex = currentOptions.length - 1;
    let currentIndex = (activeOption == null ? void 0 : activeOption.index) || 0;
    let nextIndex = 0;
    let element = activeOption == null ? void 0 : activeOption.element;
    let totalOptions = -1;
    if (!activeOption && autoSelection === AutoSelection.None) {
      const nextOptions = getNavigableOptions();
      const nextActiveOption = getFirstNavigableOption(nextOptions);
      setCurrentOptions(nextOptions);
      return {
        element: nextActiveOption == null ? void 0 : nextActiveOption.element,
        nextIndex: (nextActiveOption == null ? void 0 : nextActiveOption.index) || 0
      };
    }
    while (totalOptions++ < lastIndex) {
      nextIndex = getNextIndex(currentIndex, lastIndex, key);
      element = currentOptions[nextIndex];
      const triggerLazyLoad = nextIndex >= lastIndex;
      const isDisabled = (element == null ? void 0 : element.getAttribute("aria-disabled")) === "true";
      if (triggerLazyLoad && willLoadMoreOptions) {
        await handleKeyToBottom();
      }
      if (isDisabled) {
        currentIndex = nextIndex;
        element = void 0;
        continue;
      }
      break;
    }
    return {
      element,
      nextIndex
    };
  }, [autoSelection, currentOptions, activeOption, willLoadMoreOptions, getNextIndex, handleKeyToBottom, getFirstNavigableOption, getNavigableOptions]);
  const handleArrow = (0, import_react95.useCallback)(async (type, event) => {
    event.preventDefault();
    const {
      element,
      nextIndex
    } = await getNextValidOption(type);
    if (!element)
      return;
    const nextOption = getFormattedOption(element, nextIndex);
    handleChangeActiveOption(nextOption);
  }, [getFormattedOption, getNextValidOption, handleChangeActiveOption]);
  const handleDownArrow = (0, import_react95.useCallback)((event) => {
    handleArrow("down", event);
  }, [handleArrow]);
  const handleUpArrow = (0, import_react95.useCallback)((event) => {
    handleArrow("up", event);
  }, [handleArrow]);
  const handleEnter = (0, import_react95.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (activeOption) {
      onOptionSelect(activeOption);
    }
  }, [activeOption, onOptionSelect]);
  const handleFocus = (0, import_react95.useCallback)(() => {
    if (enableKeyboardControl)
      return;
    enableKeyboardEvents();
  }, [enableKeyboardControl, enableKeyboardEvents]);
  const handleBlur = (0, import_react95.useCallback)((event) => {
    event.stopPropagation();
    if (keyboardEventsEnabled) {
      const nextActiveOption = getFirstNavigableOption(currentOptions);
      if (nextActiveOption) {
        const {
          element,
          index
        } = nextActiveOption;
        const nextOption = getFormattedOption(element, index);
        handleChangeActiveOption(nextOption);
      }
    }
    if (enableKeyboardControl)
      return;
    disableKeyboardEvents();
  }, [enableKeyboardControl, currentOptions, keyboardEventsEnabled, disableKeyboardEvents, getFirstNavigableOption, getFormattedOption, handleChangeActiveOption]);
  const listeners = keyboardEventsEnabled || textFieldFocused ? import_react95.default.createElement(import_react95.default.Fragment, null, import_react95.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.DownArrow,
    handler: handleDownArrow
  }), import_react95.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.UpArrow,
    handler: handleUpArrow
  }), import_react95.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.Enter,
    handler: handleEnter
  })) : null;
  const listboxContext = (0, import_react95.useMemo)(() => ({
    onOptionSelect,
    setLoading
  }), [onOptionSelect]);
  return import_react95.default.createElement(import_react95.default.Fragment, null, listeners, import_react95.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, import_react95.default.createElement("div", {
    "aria-live": "polite"
  }, loading ? loading : null)), import_react95.default.createElement(ListboxContext.Provider, {
    value: listboxContext
  }, import_react95.default.createElement(WithinListboxContext.Provider, {
    value: true
  }, children2 ? import_react95.default.createElement("ul", {
    tabIndex: 0,
    role: "listbox",
    className: styles28.Listbox,
    "aria-label": inCombobox ? void 0 : accessibilityLabel,
    "aria-labelledby": textFieldLabelId,
    "aria-busy": Boolean(loading),
    "aria-activedescendant": activeOption && activeOption.domId,
    id: listId,
    onFocus: inCombobox ? void 0 : handleFocus,
    onBlur: inCombobox ? void 0 : handleBlur,
    ref: listboxRef
  }, children2) : null)));
}
Listbox.Option = Option;
Listbox.TextOption = TextOption;
Listbox.Loading = Loading;
Listbox.Section = Section3;
Listbox.Header = Header;
Listbox.Action = Action;

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.js
var MappedOption = (0, import_react96.memo)(function MappedOption2({
  label,
  value,
  disabled,
  media,
  selected,
  singleSelection
}) {
  const mediaClassNames = classNames(styles27.Media, disabled && styles27.disabledMedia, singleSelection && styles27.singleSelectionMedia);
  const mediaMarkup = media ? import_react96.default.createElement("div", {
    className: mediaClassNames
  }, media) : null;
  const accessibilityLabel = typeof label === "string" ? label : void 0;
  return import_react96.default.createElement(Listbox.Option, {
    accessibilityLabel,
    key: value,
    selected,
    value,
    disabled
  }, import_react96.default.createElement(Listbox.TextOption, {
    selected,
    disabled
  }, import_react96.default.createElement("div", {
    className: styles27.Content
  }, mediaMarkup, label)));
});

// node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.js
var import_react105 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.scss.js
var styles37 = {
  "Listbox": "Polaris-Combobox__Listbox"
};

// node_modules/@shopify/polaris/build/esm/components/Combobox/components/TextField/TextField.js
var import_react104 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TextField/TextField.js
var import_react103 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TextField/TextField.scss.js
var styles38 = {
  "TextField": "Polaris-TextField",
  "ClearButton": "Polaris-TextField__ClearButton",
  "disabled": "Polaris-TextField--disabled",
  "error": "Polaris-TextField--error",
  "readOnly": "Polaris-TextField--readOnly",
  "Input": "Polaris-TextField__Input",
  "Backdrop": "Polaris-TextField__Backdrop",
  "multiline": "Polaris-TextField--multiline",
  "hasValue": "Polaris-TextField--hasValue",
  "focus": "Polaris-TextField--focus",
  "VerticalContent": "Polaris-TextField__VerticalContent",
  "Prefix": "Polaris-TextField__Prefix",
  "suggestion": "Polaris-TextField--suggestion",
  "borderless": "Polaris-TextField--borderless",
  "Input-hasClearButton": "Polaris-TextField__Input--hasClearButton",
  "Input-suffixed": "Polaris-TextField__Input--suffixed",
  "Input-alignRight": "Polaris-TextField__Input--alignRight",
  "Input-alignLeft": "Polaris-TextField__Input--alignLeft",
  "Input-alignCenter": "Polaris-TextField__Input--alignCenter",
  "Suffix": "Polaris-TextField__Suffix",
  "CharacterCount": "Polaris-TextField__CharacterCount",
  "AlignFieldBottom": "Polaris-TextField__AlignFieldBottom",
  "Spinner": "Polaris-TextField__Spinner",
  "SpinnerIcon": "Polaris-TextField__SpinnerIcon",
  "Resizer": "Polaris-TextField__Resizer",
  "DummyInput": "Polaris-TextField__DummyInput",
  "Segment": "Polaris-TextField__Segment",
  "monospaced": "Polaris-TextField--monospaced"
};

// node_modules/@shopify/polaris/build/esm/components/TextField/components/Spinner/Spinner.js
var import_react97 = __toESM(require_react());
var Spinner2 = import_react97.default.forwardRef(function Spinner3({
  onChange,
  onClick,
  onMouseDown,
  onMouseUp,
  onBlur
}, ref) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  function handleStep(step) {
    return () => onChange(step);
  }
  function handleMouseDown(onChange2) {
    return (event) => {
      if (event.button !== 0)
        return;
      onMouseDown == null ? void 0 : onMouseDown(onChange2);
    };
  }
  return import_react97.default.createElement("div", {
    className: styles38.Spinner,
    onClick,
    "aria-hidden": true,
    ref
  }, import_react97.default.createElement("div", {
    role: "button",
    className: styles38.Segment,
    tabIndex: -1,
    onClick: handleStep(1),
    onMouseDown: handleMouseDown(handleStep(1)),
    onMouseUp,
    onBlur
  }, import_react97.default.createElement("div", {
    className: styles38.SpinnerIcon
  }, import_react97.default.createElement(Icon, {
    source: polarisSummerEditions2023 ? SvgChevronUpMinor : SvgCaretUpMinor
  }))), import_react97.default.createElement("div", {
    role: "button",
    className: styles38.Segment,
    tabIndex: -1,
    onClick: handleStep(-1),
    onMouseDown: handleMouseDown(handleStep(-1)),
    onMouseUp,
    onBlur
  }, import_react97.default.createElement("div", {
    className: styles38.SpinnerIcon
  }, import_react97.default.createElement(Icon, {
    source: polarisSummerEditions2023 ? SvgChevronDownMinor : SvgCaretDownMinor
  }))));
});

// node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.js
var import_react99 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.scss.js
var styles39 = {
  "hidden": "Polaris-Labelled--hidden",
  "LabelWrapper": "Polaris-Labelled__LabelWrapper",
  "disabled": "Polaris-Labelled--disabled",
  "HelpText": "Polaris-Labelled__HelpText",
  "readOnly": "Polaris-Labelled--readOnly",
  "Error": "Polaris-Labelled__Error",
  "Action": "Polaris-Labelled__Action"
};

// node_modules/@shopify/polaris/build/esm/components/Label/Label.js
var import_react98 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Label/Label.scss.js
var styles40 = {
  "Label": "Polaris-Label",
  "hidden": "Polaris-Label--hidden",
  "Text": "Polaris-Label__Text",
  "RequiredIndicator": "Polaris-Label__RequiredIndicator"
};

// node_modules/@shopify/polaris/build/esm/components/Label/Label.js
function labelID(id) {
  return `${id}Label`;
}
function Label({
  children: children2,
  id,
  hidden,
  requiredIndicator
}) {
  const className = classNames(styles40.Label, hidden && styles40.hidden);
  return import_react98.default.createElement("div", {
    className
  }, import_react98.default.createElement("label", {
    id: labelID(id),
    htmlFor: id,
    className: classNames(styles40.Text, requiredIndicator && styles40.RequiredIndicator)
  }, children2));
}

// node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.js
function Labelled({
  id,
  label,
  error,
  action,
  helpText,
  children: children2,
  labelHidden,
  requiredIndicator,
  disabled,
  readOnly,
  ...rest
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(labelHidden && styles39.hidden, disabled && styles39.disabled, polarisSummerEditions2023 && readOnly && styles39.readOnly);
  const actionMarkup = action ? import_react99.default.createElement("div", {
    className: styles39.Action
  }, buttonFrom(action, {
    plain: true
  })) : null;
  const helpTextMarkup = helpText ? import_react99.default.createElement("div", {
    className: styles39.HelpText,
    id: helpTextID2(id),
    "aria-disabled": disabled
  }, import_react99.default.createElement(Text, {
    as: "span",
    color: "subdued",
    breakWord: true
  }, helpText)) : null;
  const errorMarkup = error && typeof error !== "boolean" && import_react99.default.createElement("div", {
    className: styles39.Error
  }, import_react99.default.createElement(InlineError, {
    message: error,
    fieldID: id
  }));
  const labelMarkup = label ? import_react99.default.createElement("div", {
    className: styles39.LabelWrapper
  }, import_react99.default.createElement(Label, Object.assign({
    id,
    requiredIndicator
  }, rest, {
    hidden: false
  }), label), actionMarkup) : null;
  return import_react99.default.createElement("div", {
    className
  }, labelMarkup, children2, errorMarkup, helpTextMarkup);
}
function helpTextID2(id) {
  return `${id}HelpText`;
}

// node_modules/@shopify/polaris/build/esm/components/Connected/Connected.js
var import_react101 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Connected/Connected.scss.js
var styles41 = {
  "Connected": "Polaris-Connected",
  "Item": "Polaris-Connected__Item",
  "Item-primary": "Polaris-Connected__Item--primary",
  "Item-focused": "Polaris-Connected__Item--focused"
};

// node_modules/@shopify/polaris/build/esm/components/Connected/components/Item/Item.js
var import_react100 = __toESM(require_react());
function Item3({
  children: children2,
  position
}) {
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const className = classNames(styles41.Item, focused && styles41["Item-focused"], position === "primary" ? styles41["Item-primary"] : styles41["Item-connection"]);
  return import_react100.default.createElement("div", {
    onBlur: forceFalseFocused,
    onFocus: forceTrueFocused,
    className
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/Connected/Connected.js
function Connected({
  children: children2,
  left,
  right
}) {
  const leftConnectionMarkup = left ? import_react101.default.createElement(Item3, {
    position: "left"
  }, left) : null;
  const rightConnectionMarkup = right ? import_react101.default.createElement(Item3, {
    position: "right"
  }, right) : null;
  return import_react101.default.createElement("div", {
    className: styles41.Connected
  }, leftConnectionMarkup, import_react101.default.createElement(Item3, {
    position: "primary"
  }, children2), rightConnectionMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/TextField/components/Resizer/Resizer.js
var import_react102 = __toESM(require_react());
function Resizer({
  contents,
  currentHeight: currentHeightProp = null,
  minimumLines,
  onHeightChange
}) {
  const contentNode = (0, import_react102.useRef)(null);
  const minimumLinesNode = (0, import_react102.useRef)(null);
  const animationFrame = (0, import_react102.useRef)();
  const currentHeight = (0, import_react102.useRef)(currentHeightProp);
  if (currentHeightProp !== currentHeight.current) {
    currentHeight.current = currentHeightProp;
  }
  (0, import_react102.useEffect)(() => {
    return () => {
      if (animationFrame.current) {
        cancelAnimationFrame(animationFrame.current);
      }
    };
  }, []);
  const minimumLinesMarkup = minimumLines ? import_react102.default.createElement("div", {
    ref: minimumLinesNode,
    className: styles38.DummyInput,
    dangerouslySetInnerHTML: {
      __html: getContentsForMinimumLines(minimumLines)
    }
  }) : null;
  const handleHeightCheck = (0, import_react102.useCallback)(() => {
    if (animationFrame.current) {
      cancelAnimationFrame(animationFrame.current);
    }
    animationFrame.current = requestAnimationFrame(() => {
      if (!contentNode.current || !minimumLinesNode.current) {
        return;
      }
      const newHeight = Math.max(contentNode.current.offsetHeight, minimumLinesNode.current.offsetHeight);
      if (newHeight !== currentHeight.current) {
        onHeightChange(newHeight);
      }
    });
  }, [onHeightChange]);
  useIsomorphicLayoutEffect(() => {
    handleHeightCheck();
  });
  return import_react102.default.createElement("div", {
    "aria-hidden": true,
    className: styles38.Resizer
  }, import_react102.default.createElement(EventListener, {
    event: "resize",
    handler: handleHeightCheck
  }), import_react102.default.createElement("div", {
    ref: contentNode,
    className: styles38.DummyInput,
    dangerouslySetInnerHTML: {
      __html: getFinalContents(contents)
    }
  }), minimumLinesMarkup);
}
var ENTITIES_TO_REPLACE = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  "\n": "<br>",
  "\r": ""
};
var REPLACE_REGEX2 = new RegExp(`[${Object.keys(ENTITIES_TO_REPLACE).join()}]`, "g");
function replaceEntity(entity) {
  return ENTITIES_TO_REPLACE[entity];
}
function getContentsForMinimumLines(minimumLines) {
  let content = "";
  for (let line = 0; line < minimumLines; line++) {
    content += "<br>";
  }
  return content;
}
function getFinalContents(contents) {
  return contents ? `${contents.replace(REPLACE_REGEX2, replaceEntity)}<br>` : "<br>";
}

// node_modules/@shopify/polaris/build/esm/components/TextField/TextField.js
function TextField({
  prefix,
  suffix,
  verticalContent,
  placeholder,
  value = "",
  helpText,
  label,
  labelAction,
  labelHidden,
  disabled,
  clearButton,
  readOnly,
  autoFocus,
  focused,
  multiline,
  error,
  connectedRight,
  connectedLeft,
  type = "text",
  name,
  id: idProp,
  role,
  step,
  largeStep,
  autoComplete,
  max,
  maxLength,
  maxHeight,
  min,
  minLength,
  pattern,
  inputMode,
  spellCheck,
  ariaOwns,
  ariaControls,
  ariaExpanded,
  ariaActiveDescendant,
  ariaAutocomplete,
  showCharacterCount,
  align,
  requiredIndicator,
  monospaced,
  selectTextOnFocus,
  suggestion,
  onClearButtonClick,
  onChange,
  onSpinnerChange,
  onFocus,
  onBlur,
  borderless,
  disable1Password
}) {
  const i18n = useI18n();
  const [height2, setHeight] = (0, import_react103.useState)(null);
  const [focus, setFocus] = (0, import_react103.useState)(Boolean(focused));
  const isAfterInitial = useIsAfterInitialMount();
  const uniqId = (0, import_react103.useId)();
  const id = idProp ?? uniqId;
  const inputRef = (0, import_react103.useRef)(null);
  const textAreaRef = (0, import_react103.useRef)(null);
  const prefixRef = (0, import_react103.useRef)(null);
  const suffixRef = (0, import_react103.useRef)(null);
  const verticalContentRef = (0, import_react103.useRef)(null);
  const buttonPressTimer = (0, import_react103.useRef)();
  const spinnerRef = (0, import_react103.useRef)(null);
  (0, import_react103.useEffect)(() => {
    const input2 = multiline ? textAreaRef.current : inputRef.current;
    if (!input2 || focused === void 0)
      return;
    focused ? input2.focus() : input2.blur();
  }, [focused, verticalContent, multiline]);
  (0, import_react103.useEffect)(() => {
    const input2 = inputRef.current;
    const isSupportedInputType = type === "text" || type === "tel" || type === "search" || type === "url" || type === "password";
    if (!input2 || !isSupportedInputType || !suggestion) {
      return;
    }
    input2.setSelectionRange(value.length, suggestion.length);
  }, [focus, value, type, suggestion]);
  const normalizedValue = suggestion ? suggestion : value;
  const normalizedStep = step != null ? step : 1;
  const normalizedMax = max != null ? max : Infinity;
  const normalizedMin = min != null ? min : -Infinity;
  const className = classNames(styles38.TextField, Boolean(normalizedValue) && styles38.hasValue, disabled && styles38.disabled, readOnly && styles38.readOnly, error && styles38.error, multiline && styles38.multiline, focus && !disabled && styles38.focus, borderless && styles38.borderless);
  const inputType = type === "currency" ? "text" : type;
  const isNumericType = type === "number" || type === "integer";
  const prefixMarkup = prefix ? import_react103.default.createElement("div", {
    className: styles38.Prefix,
    id: `${id}-Prefix`,
    ref: prefixRef
  }, prefix) : null;
  const suffixMarkup = suffix ? import_react103.default.createElement("div", {
    className: styles38.Suffix,
    id: `${id}-Suffix`,
    ref: suffixRef
  }, suffix) : null;
  let characterCountMarkup = null;
  if (showCharacterCount) {
    const characterCount = normalizedValue.length;
    const characterCountLabel = maxLength ? i18n.translate("Polaris.TextField.characterCountWithMaxLength", {
      count: characterCount,
      limit: maxLength
    }) : i18n.translate("Polaris.TextField.characterCount", {
      count: characterCount
    });
    const characterCountClassName = classNames(styles38.CharacterCount, multiline && styles38.AlignFieldBottom);
    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;
    characterCountMarkup = import_react103.default.createElement("div", {
      id: `${id}-CharacterCounter`,
      className: characterCountClassName,
      "aria-label": characterCountLabel,
      "aria-live": focus ? "polite" : "off",
      "aria-atomic": "true",
      onClick: handleClickChild
    }, characterCountText);
  }
  const clearButtonVisible = normalizedValue !== "";
  const clearButtonMarkup = clearButton && clearButtonVisible ? import_react103.default.createElement("button", {
    type: "button",
    className: styles38.ClearButton,
    onClick: handleClearButtonPress,
    disabled
  }, import_react103.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, i18n.translate("Polaris.Common.clear")), import_react103.default.createElement(Icon, {
    source: SvgCircleCancelMinor,
    color: "base"
  })) : null;
  const handleNumberChange = (0, import_react103.useCallback)((steps, stepAmount = normalizedStep) => {
    if (onChange == null && onSpinnerChange == null) {
      return;
    }
    const dpl = (num) => (num.toString().split(".")[1] || []).length;
    const numericValue = value ? parseFloat(value) : 0;
    if (isNaN(numericValue)) {
      return;
    }
    const decimalPlaces = type === "integer" ? 0 : Math.max(dpl(numericValue), dpl(stepAmount));
    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * stepAmount, Number(normalizedMin)));
    if (onSpinnerChange != null) {
      onSpinnerChange(String(newValue.toFixed(decimalPlaces)), id);
    } else if (onChange != null) {
      onChange(String(newValue.toFixed(decimalPlaces)), id);
    }
  }, [id, normalizedMax, normalizedMin, onChange, onSpinnerChange, normalizedStep, type, value]);
  const handleSpinnerButtonRelease = (0, import_react103.useCallback)(() => {
    clearTimeout(buttonPressTimer.current);
  }, []);
  const handleSpinnerButtonPress = (0, import_react103.useCallback)((onChange2) => {
    const minInterval = 50;
    const decrementBy = 10;
    let interval = 200;
    const onChangeInterval = () => {
      if (interval > minInterval)
        interval -= decrementBy;
      onChange2(0);
      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);
    };
    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);
    document.addEventListener("mouseup", handleSpinnerButtonRelease, {
      once: true
    });
  }, [handleSpinnerButtonRelease]);
  const spinnerMarkup = isNumericType && step !== 0 && !disabled && !readOnly ? import_react103.default.createElement(Spinner2, {
    onClick: handleClickChild,
    onChange: handleNumberChange,
    onMouseDown: handleSpinnerButtonPress,
    onMouseUp: handleSpinnerButtonRelease,
    ref: spinnerRef,
    onBlur: handleOnBlur
  }) : null;
  const style = multiline && height2 ? {
    height: height2,
    maxHeight
  } : null;
  const handleExpandingResize = (0, import_react103.useCallback)((height3) => {
    setHeight(height3);
  }, []);
  const resizer = multiline && isAfterInitial ? import_react103.default.createElement(Resizer, {
    contents: normalizedValue || placeholder,
    currentHeight: height2,
    minimumLines: typeof multiline === "number" ? multiline : 1,
    onHeightChange: handleExpandingResize
  }) : null;
  const describedBy = [];
  if (error) {
    describedBy.push(`${id}Error`);
  }
  if (helpText) {
    describedBy.push(helpTextID2(id));
  }
  if (showCharacterCount) {
    describedBy.push(`${id}-CharacterCounter`);
  }
  const labelledBy = [];
  if (prefix) {
    labelledBy.push(`${id}-Prefix`);
  }
  if (suffix) {
    labelledBy.push(`${id}-Suffix`);
  }
  if (verticalContent) {
    labelledBy.push(`${id}-VerticalContent`);
  }
  labelledBy.unshift(labelID(id));
  const inputClassName = classNames(styles38.Input, align && styles38[variationName("Input-align", align)], suffix && styles38["Input-suffixed"], clearButton && styles38["Input-hasClearButton"], monospaced && styles38.monospaced, suggestion && styles38.suggestion);
  const handleOnFocus = (event) => {
    setFocus(true);
    if (selectTextOnFocus && !suggestion) {
      const input2 = multiline ? textAreaRef.current : inputRef.current;
      input2 == null ? void 0 : input2.select();
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  useEventListener("wheel", handleOnWheel, inputRef);
  function handleOnWheel(event) {
    if (document.activeElement === event.target && isNumericType) {
      event.stopPropagation();
    }
  }
  const input = (0, import_react103.createElement)(multiline ? "textarea" : "input", {
    name,
    id,
    disabled,
    readOnly,
    role,
    autoFocus,
    value: normalizedValue,
    placeholder,
    style,
    autoComplete,
    className: inputClassName,
    ref: multiline ? textAreaRef : inputRef,
    min,
    max,
    step,
    minLength,
    maxLength,
    spellCheck,
    pattern,
    inputMode,
    type: inputType,
    rows: getRows(multiline),
    "aria-describedby": describedBy.length ? describedBy.join(" ") : void 0,
    "aria-labelledby": labelledBy.join(" "),
    "aria-invalid": Boolean(error),
    "aria-owns": ariaOwns,
    "aria-activedescendant": ariaActiveDescendant,
    "aria-autocomplete": ariaAutocomplete,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-required": requiredIndicator,
    ...normalizeAriaMultiline(multiline),
    onFocus: handleOnFocus,
    onBlur: handleOnBlur,
    onClick: handleClickChild,
    onKeyPress: handleKeyPress,
    onKeyDown: handleKeyDown5,
    onChange: !suggestion ? handleChange : void 0,
    onInput: suggestion ? handleChange : void 0,
    // 1Password disable data attribute
    "data-1p-ignore": autoComplete === "off" || disable1Password || void 0,
    // LastPass disable data attribute
    "data-lpignore": autoComplete === "off" || void 0,
    // Dashlane disable data attribute
    "data-form-type": autoComplete === "off" ? "other" : void 0
  });
  const inputWithVerticalContentMarkup = verticalContent ? import_react103.default.createElement("div", {
    className: styles38.VerticalContent,
    id: `${id}-VerticalContent`,
    ref: verticalContentRef,
    onClick: handleClickChild
  }, verticalContent, input) : null;
  const inputMarkup = verticalContent ? inputWithVerticalContentMarkup : input;
  const backdropMarkup = import_react103.default.createElement("div", {
    className: classNames(styles38.Backdrop, connectedLeft && styles38["Backdrop-connectedLeft"], connectedRight && styles38["Backdrop-connectedRight"])
  });
  return import_react103.default.createElement(Labelled, {
    label,
    id,
    error,
    action: labelAction,
    labelHidden,
    helpText,
    requiredIndicator,
    disabled,
    readOnly
  }, import_react103.default.createElement(Connected, {
    left: connectedLeft,
    right: connectedRight
  }, import_react103.default.createElement("div", {
    className,
    onClick: handleClick
  }, prefixMarkup, inputMarkup, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, backdropMarkup, resizer)));
  function handleChange(event) {
    onChange && onChange(event.currentTarget.value, id);
  }
  function handleClick(event) {
    var _a, _b, _c;
    const {
      target
    } = event;
    const inputRefRole = (_a = inputRef == null ? void 0 : inputRef.current) == null ? void 0 : _a.getAttribute("role");
    if (target === inputRef.current && inputRefRole === "combobox") {
      (_b = inputRef.current) == null ? void 0 : _b.focus();
      handleOnFocus(event);
      return;
    }
    if (isPrefixOrSuffix(target) || isVerticalContent(target) || isInput(target) || isSpinner(target) || focus) {
      return;
    }
    (_c = inputRef.current) == null ? void 0 : _c.focus();
  }
  function handleClickChild(event) {
    var _a;
    if (!isSpinner(event.target) && !isInput(event.target)) {
      event.stopPropagation();
    }
    if (isPrefixOrSuffix(event.target) || isVerticalContent(event.target) || isInput(event.target) || focus) {
      return;
    }
    setFocus(true);
    (_a = inputRef.current) == null ? void 0 : _a.focus();
  }
  function handleClearButtonPress() {
    onClearButtonClick && onClearButtonClick(id);
  }
  function handleKeyPress(event) {
    const {
      key,
      which
    } = event;
    const numbersSpec = /[\d.,eE+-]$/;
    const integerSpec = /[\deE+-]$/;
    if (!isNumericType || which === Key.Enter || type === "number" && numbersSpec.test(key) || type === "integer" && integerSpec.test(key)) {
      return;
    }
    event.preventDefault();
  }
  function handleKeyDown5(event) {
    if (!isNumericType) {
      return;
    }
    const {
      key,
      which
    } = event;
    if (type === "integer" && (key === "ArrowUp" || which === Key.UpArrow)) {
      handleNumberChange(1);
      event.preventDefault();
    }
    if (type === "integer" && (key === "ArrowDown" || which === Key.DownArrow)) {
      handleNumberChange(-1);
      event.preventDefault();
    }
    if ((which === Key.Home || key === "Home") && min !== void 0) {
      if (onSpinnerChange != null) {
        onSpinnerChange(String(min), id);
      } else if (onChange != null) {
        onChange(String(min), id);
      }
    }
    if ((which === Key.End || key === "End") && max !== void 0) {
      if (onSpinnerChange != null) {
        onSpinnerChange(String(max), id);
      } else if (onChange != null) {
        onChange(String(max), id);
      }
    }
    if ((which === Key.PageUp || key === "PageUp") && largeStep !== void 0) {
      handleNumberChange(1, largeStep);
    }
    if ((which === Key.PageDown || key === "PageDown") && largeStep !== void 0) {
      handleNumberChange(-1, largeStep);
    }
  }
  function handleOnBlur(event) {
    setFocus(false);
    if (onBlur) {
      onBlur(event);
    }
  }
  function isInput(target) {
    return target instanceof HTMLElement && inputRef.current && (inputRef.current.contains(target) || inputRef.current.contains(document.activeElement));
  }
  function isPrefixOrSuffix(target) {
    return target instanceof Element && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));
  }
  function isSpinner(target) {
    return target instanceof Element && spinnerRef.current && spinnerRef.current.contains(target);
  }
  function isVerticalContent(target) {
    return target instanceof Element && verticalContentRef.current && (verticalContentRef.current.contains(target) || verticalContentRef.current.contains(document.activeElement));
  }
}
function getRows(multiline) {
  if (!multiline)
    return void 0;
  return typeof multiline === "number" ? multiline : 1;
}
function normalizeAriaMultiline(multiline) {
  if (!multiline)
    return void 0;
  return Boolean(multiline) || typeof multiline === "number" && multiline > 0 ? {
    "aria-multiline": true
  } : void 0;
}

// node_modules/@shopify/polaris/build/esm/components/Combobox/components/TextField/TextField.js
function TextField2({
  value,
  id: idProp,
  type = "text",
  ariaAutocomplete = "list",
  onFocus,
  onBlur,
  onChange,
  ...rest
}) {
  const comboboxTextFieldContext = useComboboxTextField();
  const {
    activeOptionId,
    listboxId,
    expanded,
    setTextFieldFocused,
    setTextFieldLabelId,
    onTextFieldFocus,
    onTextFieldChange,
    onTextFieldBlur
  } = comboboxTextFieldContext;
  const uniqueId = (0, import_react104.useId)();
  const textFieldId = (0, import_react104.useMemo)(() => idProp || uniqueId, [uniqueId, idProp]);
  const labelId = (0, import_react104.useMemo)(() => labelID(idProp || uniqueId), [uniqueId, idProp]);
  (0, import_react104.useEffect)(() => {
    if (setTextFieldLabelId)
      setTextFieldLabelId(labelId);
  }, [labelId, setTextFieldLabelId]);
  const handleFocus = (0, import_react104.useCallback)((event) => {
    if (onFocus)
      onFocus(event);
    if (onTextFieldFocus)
      onTextFieldFocus();
    if (setTextFieldFocused)
      setTextFieldFocused(true);
  }, [onFocus, onTextFieldFocus, setTextFieldFocused]);
  const handleBlur = (0, import_react104.useCallback)((event) => {
    if (onBlur)
      onBlur(event);
    if (onTextFieldBlur)
      onTextFieldBlur();
    if (setTextFieldFocused)
      setTextFieldFocused(false);
  }, [onBlur, onTextFieldBlur, setTextFieldFocused]);
  const handleChange = (0, import_react104.useCallback)((value2, id) => {
    if (onChange)
      onChange(value2, id);
    if (onTextFieldChange)
      onTextFieldChange(value2);
  }, [onChange, onTextFieldChange]);
  return import_react104.default.createElement(TextField, Object.assign({}, rest, {
    value,
    id: textFieldId,
    type,
    ariaAutocomplete,
    "aria-haspopup": "listbox",
    ariaActiveDescendant: activeOptionId,
    ariaControls: listboxId,
    role: "combobox",
    ariaExpanded: expanded,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onChange: handleChange
  }));
}

// node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.js
function Combobox({
  activator,
  allowMultiple,
  children: children2,
  preferredPosition = "below",
  willLoadMoreOptions,
  height: height2,
  onScrolledToBottom,
  onClose
}) {
  const [popoverActive, setPopoverActive] = (0, import_react105.useState)(false);
  const [activeOptionId, setActiveOptionId] = (0, import_react105.useState)();
  const [textFieldLabelId, setTextFieldLabelId] = (0, import_react105.useState)();
  const [listboxId, setListboxId] = (0, import_react105.useState)();
  const [textFieldFocused, setTextFieldFocused] = (0, import_react105.useState)(false);
  const shouldOpen = Boolean(!popoverActive && import_react105.Children.count(children2) > 0);
  const ref = (0, import_react105.useRef)(null);
  const handleClose = (0, import_react105.useCallback)(() => {
    setPopoverActive(false);
    onClose == null ? void 0 : onClose();
    setActiveOptionId(void 0);
  }, [onClose]);
  const handleOpen = (0, import_react105.useCallback)(() => {
    setPopoverActive(true);
    setActiveOptionId(void 0);
  }, []);
  const onOptionSelected = (0, import_react105.useCallback)(() => {
    var _a;
    if (!allowMultiple) {
      handleClose();
      setActiveOptionId(void 0);
      return;
    }
    (_a = ref.current) == null ? void 0 : _a.forceUpdatePosition();
  }, [allowMultiple, handleClose]);
  const handleFocus = (0, import_react105.useCallback)(() => {
    if (shouldOpen) {
      handleOpen();
    }
  }, [shouldOpen, handleOpen]);
  const handleChange = (0, import_react105.useCallback)(() => {
    if (shouldOpen) {
      handleOpen();
    }
  }, [shouldOpen, handleOpen]);
  const handleBlur = (0, import_react105.useCallback)(() => {
    if (popoverActive) {
      handleClose();
    }
  }, [popoverActive, handleClose]);
  const textFieldContextValue = (0, import_react105.useMemo)(() => ({
    activeOptionId,
    expanded: popoverActive,
    listboxId,
    setTextFieldFocused,
    setTextFieldLabelId,
    onTextFieldFocus: handleFocus,
    onTextFieldChange: handleChange,
    onTextFieldBlur: handleBlur
  }), [activeOptionId, popoverActive, listboxId, setTextFieldFocused, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);
  const listboxOptionContextValue = (0, import_react105.useMemo)(() => ({
    allowMultiple
  }), [allowMultiple]);
  const listboxContextValue = (0, import_react105.useMemo)(() => ({
    listboxId,
    textFieldLabelId,
    textFieldFocused,
    willLoadMoreOptions,
    onOptionSelected,
    setActiveOptionId,
    setListboxId,
    onKeyToBottom: onScrolledToBottom
  }), [listboxId, textFieldLabelId, textFieldFocused, willLoadMoreOptions, onOptionSelected, setActiveOptionId, setListboxId, onScrolledToBottom]);
  return import_react105.default.createElement(Popover2, {
    ref,
    active: popoverActive,
    activator: import_react105.default.createElement(ComboboxTextFieldContext.Provider, {
      value: textFieldContextValue
    }, activator),
    autofocusTarget: "none",
    preventFocusOnClose: true,
    fullWidth: true,
    preferInputActivator: false,
    preferredPosition,
    onClose: handleClose
  }, import_react105.Children.count(children2) > 0 ? import_react105.default.createElement(Popover2.Pane, {
    onScrolledToBottom,
    height: height2
  }, import_react105.default.createElement(ComboboxListboxContext.Provider, {
    value: listboxContextValue
  }, import_react105.default.createElement(ComboboxListboxOptionContext.Provider, {
    value: listboxOptionContextValue
  }, import_react105.default.createElement("div", {
    className: styles37.Listbox
  }, children2)))) : null);
}
Combobox.TextField = TextField2;

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.js
var import_react106 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.scss.js
var styles42 = {
  "ActionContainer": "Polaris-Autocomplete-MappedAction__ActionContainer",
  "Action": "Polaris-Autocomplete-MappedAction__Action",
  "destructive": "Polaris-Autocomplete-MappedAction--destructive",
  "selected": "Polaris-Autocomplete-MappedAction--selected",
  "disabled": "Polaris-Autocomplete-MappedAction--disabled",
  "Prefix": "Polaris-Autocomplete-MappedAction__Prefix",
  "Suffix": "Polaris-Autocomplete-MappedAction__Suffix",
  "Content": "Polaris-Autocomplete-MappedAction__Content",
  "Text": "Polaris-Autocomplete-MappedAction__Text",
  "ContentWrap": "Polaris-Autocomplete-MappedAction__ContentWrap"
};

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.js
function MappedAction({
  active,
  content,
  disabled,
  icon,
  image,
  prefix,
  suffix,
  ellipsis,
  role,
  url,
  external,
  onAction,
  destructive,
  badge,
  helpText,
  wrapOverflow = false
}) {
  const i18n = useI18n();
  let prefixMarkup = null;
  const contentOverflowStyle = wrapOverflow ? styles42.ContentWrap : void 0;
  if (prefix) {
    prefixMarkup = import_react106.default.createElement("div", {
      className: styles42.Prefix
    }, prefix);
  } else if (icon) {
    prefixMarkup = import_react106.default.createElement("div", {
      className: styles42.Prefix
    }, import_react106.default.createElement(Icon, {
      source: icon
    }));
  } else if (image) {
    prefixMarkup = import_react106.default.createElement("div", {
      role: "presentation",
      className: styles42.Prefix,
      style: {
        backgroundImage: `url(${image}`
      }
    });
  }
  const badgeMarkup = badge && import_react106.default.createElement("span", {
    className: styles42.Suffix
  }, import_react106.default.createElement(Badge, {
    status: badge.status
  }, badge.content));
  const suffixMarkup = suffix && import_react106.default.createElement("span", {
    className: styles42.Suffix
  }, suffix);
  const contentText = ellipsis && content ? i18n.translate("Polaris.Autocomplete.ellipsis", {
    content
  }) : content;
  const contentMarkup = import_react106.default.createElement("div", {
    className: styles42.Text
  }, import_react106.default.createElement("div", {
    className: contentOverflowStyle
  }, contentText), helpText ? import_react106.default.createElement(Text, {
    color: "subdued",
    as: "span"
  }, helpText) : null);
  const context = (0, import_react106.useMemo)(() => ({
    role,
    url,
    external,
    onAction,
    destructive
  }), [role, url, external, onAction, destructive]);
  const actionClassNames = classNames(styles42.Action, disabled && styles42.disabled, destructive && styles42.destructive, active && styles42.selected);
  return import_react106.default.createElement(MappedActionContext.Provider, {
    value: context
  }, import_react106.default.createElement("div", {
    className: styles42.ActionContainer
  }, import_react106.default.createElement(Listbox.Action, {
    selected: active,
    disabled,
    value: content || ""
  }, import_react106.default.createElement("div", {
    className: actionClassNames
  }, import_react106.default.createElement("div", {
    className: styles42.Content
  }, prefixMarkup, contentMarkup, badgeMarkup, suffixMarkup)))));
}

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.js
var Autocomplete = function Autocomplete2({
  options,
  selected,
  textField,
  preferredPosition,
  listTitle,
  allowMultiple,
  loading,
  actionBefore,
  willLoadMoreResults,
  emptyState,
  onSelect,
  onLoadMoreResults
}) {
  const i18n = useI18n();
  const buildMappedOptionFromOption = (0, import_react107.useCallback)((options2) => {
    return options2.map((option) => import_react107.default.createElement(MappedOption, Object.assign({
      key: option.id || option.value
    }, option, {
      selected: selected.includes(option.value),
      singleSelection: !allowMultiple
    })));
  }, [selected, allowMultiple]);
  const optionsMarkup = (0, import_react107.useMemo)(() => {
    const conditionalOptions = loading && !willLoadMoreResults ? [] : options;
    if (isSection(conditionalOptions)) {
      const noOptionsAvailable = conditionalOptions.every(({
        options: options2
      }) => options2.length === 0);
      if (noOptionsAvailable) {
        return null;
      }
      const optionsMarkup2 = conditionalOptions.map(({
        options: options2,
        title
      }) => {
        if (options2.length === 0) {
          return null;
        }
        const optionMarkup = buildMappedOptionFromOption(options2);
        return import_react107.default.createElement(Listbox.Section, {
          divider: false,
          title: import_react107.default.createElement(Listbox.Header, null, title),
          key: title
        }, optionMarkup);
      });
      return import_react107.default.createElement("div", {
        className: styles26.SectionWrapper
      }, optionsMarkup2);
    }
    const optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;
    if (listTitle) {
      return import_react107.default.createElement(Listbox.Section, {
        divider: false,
        title: import_react107.default.createElement(Listbox.Header, null, listTitle)
      }, optionList);
    }
    return optionList;
  }, [listTitle, loading, options, willLoadMoreResults, buildMappedOptionFromOption]);
  const loadingMarkup = loading ? import_react107.default.createElement(Listbox.Loading, {
    accessibilityLabel: i18n.translate("Polaris.Autocomplete.spinnerAccessibilityLabel")
  }) : null;
  const updateSelection = (0, import_react107.useCallback)((newSelection) => {
    if (actionBefore && newSelection === actionBefore.content) {
      actionBefore.onAction && actionBefore.onAction();
      return;
    }
    if (allowMultiple) {
      if (selected.includes(newSelection)) {
        onSelect(selected.filter((option) => option !== newSelection));
      } else {
        onSelect([...selected, newSelection]);
      }
    } else {
      onSelect([newSelection]);
    }
  }, [allowMultiple, onSelect, selected, actionBefore]);
  const actionMarkup = actionBefore && import_react107.default.createElement(MappedAction, actionBefore);
  const emptyStateMarkup = emptyState && options.length < 1 && !loading && import_react107.default.createElement("div", {
    role: "status"
  }, emptyState);
  const autoSelection = actionBefore ? AutoSelection.First : void 0;
  return import_react107.default.createElement(Combobox, {
    activator: textField,
    allowMultiple,
    onScrolledToBottom: onLoadMoreResults,
    preferredPosition,
    willLoadMoreOptions: willLoadMoreResults
  }, actionMarkup || optionsMarkup || loadingMarkup || emptyStateMarkup ? import_react107.default.createElement(Listbox, {
    autoSelection,
    onSelect: updateSelection
  }, actionMarkup, optionsMarkup && (!loading || willLoadMoreResults) ? optionsMarkup : null, loadingMarkup, emptyStateMarkup) : null);
};
Autocomplete.TextField = Combobox.TextField;

// node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.js
var import_react110 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.scss.js
var styles43 = {
  "Backdrop": "Polaris-Backdrop",
  "transparent": "Polaris-Backdrop--transparent",
  "belowNavigation": "Polaris-Backdrop--belowNavigation"
};

// node_modules/@shopify/polaris/build/esm/components/ScrollLock/ScrollLock.js
var import_react109 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/hooks.js
var import_react108 = __toESM(require_react());
function useScrollLockManager() {
  const scrollLockManager = (0, import_react108.useContext)(ScrollLockManagerContext);
  if (!scrollLockManager) {
    throw new MissingAppProviderError("No ScrollLockManager was provided.");
  }
  return scrollLockManager;
}

// node_modules/@shopify/polaris/build/esm/components/ScrollLock/ScrollLock.js
function ScrollLock(_) {
  const scrollLockManager = useScrollLockManager();
  (0, import_react109.useEffect)(() => {
    scrollLockManager.registerScrollLock();
    return () => {
      scrollLockManager.unregisterScrollLock();
    };
  }, [scrollLockManager]);
  return null;
}

// node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.js
function Backdrop(props) {
  const {
    onClick,
    onTouchStart,
    belowNavigation,
    transparent,
    setClosing
  } = props;
  const className = classNames(styles43.Backdrop, belowNavigation && styles43.belowNavigation, transparent && styles43.transparent);
  const handleMouseDown = () => {
    if (setClosing) {
      setClosing(true);
    }
  };
  const handleClick = () => {
    if (setClosing) {
      setClosing(false);
    }
    if (onClick) {
      onClick();
    }
  };
  return import_react110.default.createElement(import_react110.default.Fragment, null, import_react110.default.createElement(ScrollLock, null), import_react110.default.createElement("div", {
    className,
    onClick: handleClick,
    onTouchStart,
    onMouseDown: handleMouseDown
  }));
}

// node_modules/@shopify/polaris/build/esm/components/Banner/Banner.js
var import_react114 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/banner-context.js
var import_react111 = __toESM(require_react());
var BannerContext = (0, import_react111.createContext)(false);

// node_modules/@shopify/polaris/build/esm/components/Banner/Banner.scss.js
var styles44 = {
  "Banner": "Polaris-Banner",
  "statusCritical": "Polaris-Banner--statusCritical",
  "PrimaryAction": "Polaris-Banner__PrimaryAction",
  "Button": "Polaris-Banner__Button",
  "statusWarning": "Polaris-Banner--statusWarning",
  "statusInfo": "Polaris-Banner--statusInfo",
  "statusSuccess": "Polaris-Banner--statusSuccess",
  "ContentWrapper": "Polaris-Banner__ContentWrapper",
  "withinContentContainer": "Polaris-Banner--withinContentContainer",
  "Dismiss": "Polaris-Banner__Dismiss",
  "keyFocused": "Polaris-Banner--keyFocused",
  "withinPage": "Polaris-Banner--withinPage",
  "hasDismiss": "Polaris-Banner--hasDismiss",
  "SecondaryAction": "Polaris-Banner__SecondaryAction",
  "Text": "Polaris-Banner__Text",
  "pressed": "Polaris-Banner--pressed",
  "loading": "Polaris-Banner--loading",
  "Spinner": "Polaris-Banner__Spinner"
};

// node_modules/@shopify/polaris/build/esm/components/UnstyledButton/utils.js
var import_react112 = __toESM(require_react());
function unstyledButtonFrom({
  content,
  onAction,
  ...action
}, overrides, key) {
  return import_react112.default.createElement(UnstyledButton, Object.assign({
    key,
    onClick: onAction
  }, action, overrides), content);
}

// node_modules/@shopify/polaris/build/esm/components/Banner/components/BannerExperimental/BannerExperimental.js
var import_react113 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Banner/components/BannerExperimental/utilities.js
var bannerAttributes = {
  success: {
    withinPage: {
      background: "bg-success-strong",
      text: "text-on-color",
      icon: "icon-on-color"
    },
    withinContentContainer: {
      background: "bg-success-subdued",
      text: "text-success",
      icon: "icon-success-strong-experimental"
    },
    icon: SvgTickMinor
  },
  warning: {
    withinPage: {
      background: "bg-warning-strong-experimental",
      text: "text-warning-strong",
      icon: "text-warning-strong"
    },
    withinContentContainer: {
      background: "bg-warning-subdued-experimental",
      text: "text-warning-experimental",
      icon: "icon-warning-strong-experimental"
    },
    icon: SvgRiskMinor
  },
  critical: {
    withinPage: {
      background: "bg-critical-strong",
      text: "text-on-color",
      icon: "icon-on-color"
    },
    withinContentContainer: {
      background: "bg-critical-subdued",
      text: "text-critical-strong",
      icon: "icon-critical-strong-experimental"
    },
    icon: SvgDiamondAlertMinor
  },
  info: {
    withinPage: {
      background: "bg-info-strong",
      text: "text-info-strong",
      icon: "text-info-strong"
    },
    withinContentContainer: {
      background: "bg-info-subdued",
      text: "text-info",
      icon: "icon-info-strong-experimental"
    },
    icon: SvgInfoMinor
  }
};

// node_modules/@shopify/polaris/build/esm/components/Banner/components/BannerExperimental/BannerExperimental.scss.js
var styles45 = {
  "icon-on-color": "Polaris-Banner-BannerExperimental--iconOnColor",
  "icon-success-strong-experimental": "Polaris-Banner-BannerExperimental--iconSuccessStrongExperimental",
  "text-warning-strong": "Polaris-Banner-BannerExperimental--textWarningStrong",
  "icon-warning-strong-experimental": "Polaris-Banner-BannerExperimental--iconWarningStrongExperimental",
  "icon-critical-strong-experimental": "Polaris-Banner-BannerExperimental--iconCriticalStrongExperimental",
  "text-info-strong": "Polaris-Banner-BannerExperimental--textInfoStrong",
  "icon-info-strong-experimental": "Polaris-Banner-BannerExperimental--iconInfoStrongExperimental",
  "icon-subdued": "Polaris-Banner-BannerExperimental__icon--subdued"
};

// node_modules/@shopify/polaris/build/esm/components/Banner/components/BannerExperimental/BannerExperimental.js
function BannerExperimental({
  status = "info",
  icon,
  hideIcon,
  onDismiss,
  action,
  secondaryAction,
  title,
  children: children2
}) {
  const i18n = useI18n();
  const withinContentContainer = (0, import_react113.useContext)(WithinContentContext);
  const isInlineIconBanner = !title && !withinContentContainer;
  const bannerStatus = Object.keys(bannerAttributes).includes(status) ? status : "info";
  const bannerColors = bannerAttributes[bannerStatus][withinContentContainer ? "withinContentContainer" : "withinPage"];
  const sharedBannerProps = {
    backgroundColor: bannerColors.background,
    textColor: bannerColors.text,
    bannerTitle: title ? import_react113.default.createElement(Text, {
      as: "h2",
      variant: "headingSm",
      breakWord: true
    }, title) : null,
    bannerIcon: hideIcon ? null : import_react113.default.createElement("span", {
      className: styles45[bannerColors.icon]
    }, import_react113.default.createElement(Icon, {
      source: icon ?? bannerAttributes[bannerStatus].icon
    })),
    actionButtons: action || secondaryAction ? import_react113.default.createElement(ButtonGroup, null, action && import_react113.default.createElement(Button, Object.assign({
      onClick: action.onAction
    }, action), action.content), secondaryAction && import_react113.default.createElement(Button, Object.assign({
      onClick: secondaryAction.onAction
    }, secondaryAction), secondaryAction.content)) : null,
    dismissButton: onDismiss ? import_react113.default.createElement(Button, {
      plain: true,
      primary: true,
      icon: import_react113.default.createElement("span", {
        className: styles45[isInlineIconBanner ? "icon-subdued" : bannerColors.icon]
      }, import_react113.default.createElement(Icon, {
        source: SvgCancelMinor
      })),
      onClick: onDismiss,
      accessibilityLabel: i18n.translate("Polaris.Banner.dismissButton")
    }) : null
  };
  if (withinContentContainer) {
    return import_react113.default.createElement(WithinContentContainerBanner, sharedBannerProps, children2);
  }
  if (isInlineIconBanner) {
    return import_react113.default.createElement(InlineIconBanner, sharedBannerProps, children2);
  }
  return import_react113.default.createElement(DefaultBanner, sharedBannerProps, children2);
}
function DefaultBanner({
  backgroundColor,
  textColor,
  bannerTitle,
  bannerIcon,
  actionButtons,
  dismissButton,
  children: children2
}) {
  const {
    smUp
  } = useBreakpoints();
  const hasContent = children2 || actionButtons;
  return import_react113.default.createElement(Box, {
    width: "100%"
  }, import_react113.default.createElement(VerticalStack, {
    align: "space-between"
  }, import_react113.default.createElement(Box, {
    background: backgroundColor,
    color: textColor,
    borderRadiusStartStart: smUp ? "3" : void 0,
    borderRadiusStartEnd: smUp ? "3" : void 0,
    borderRadiusEndStart: !hasContent && smUp ? "3" : void 0,
    borderRadiusEndEnd: !hasContent && smUp ? "3" : void 0,
    padding: "300"
  }, import_react113.default.createElement(HorizontalStack, {
    align: "space-between",
    blockAlign: "center",
    gap: "200",
    wrap: false
  }, import_react113.default.createElement(HorizontalStack, {
    gap: "100",
    wrap: false
  }, bannerIcon, bannerTitle), dismissButton)), hasContent && import_react113.default.createElement(Box, {
    padding: {
      xs: "300",
      md: "400"
    },
    paddingBlockStart: "300"
  }, import_react113.default.createElement(VerticalStack, {
    gap: "200"
  }, import_react113.default.createElement("div", null, children2), actionButtons))));
}
function InlineIconBanner({
  backgroundColor,
  bannerIcon,
  actionButtons,
  dismissButton,
  children: children2
}) {
  const [blockAlign, setBlockAlign] = (0, import_react113.useState)("center");
  const contentNode = (0, import_react113.useRef)(null);
  const iconNode = (0, import_react113.useRef)(null);
  const handleResize = (0, import_react113.useCallback)(() => {
    var _a, _b;
    const contentHeight = (_a = contentNode.current) == null ? void 0 : _a.offsetHeight;
    const iconBoxHeight = (_b = iconNode.current) == null ? void 0 : _b.offsetHeight;
    if (!contentHeight || !iconBoxHeight)
      return;
    contentHeight > iconBoxHeight ? setBlockAlign("start") : setBlockAlign("center");
  }, []);
  (0, import_react113.useEffect)(() => handleResize(), [handleResize]);
  useEventListener("resize", handleResize);
  return import_react113.default.createElement(Box, {
    width: "100%",
    padding: "300",
    borderRadius: "3"
  }, import_react113.default.createElement(HorizontalStack, {
    align: "space-between",
    blockAlign,
    wrap: false
  }, import_react113.default.createElement(Box, {
    width: "100%"
  }, import_react113.default.createElement(HorizontalStack, {
    gap: "200",
    wrap: false,
    blockAlign
  }, bannerIcon ? import_react113.default.createElement("div", {
    ref: iconNode
  }, import_react113.default.createElement(Box, {
    background: backgroundColor,
    borderRadius: "2",
    padding: "100"
  }, bannerIcon)) : null, import_react113.default.createElement(Box, {
    ref: contentNode,
    width: "100%"
  }, import_react113.default.createElement(VerticalStack, {
    gap: "200"
  }, import_react113.default.createElement("div", null, children2), actionButtons)))), dismissButton));
}
function WithinContentContainerBanner({
  backgroundColor,
  textColor,
  bannerTitle,
  bannerIcon,
  actionButtons,
  dismissButton,
  children: children2
}) {
  return import_react113.default.createElement(Box, {
    width: "100%",
    background: backgroundColor,
    padding: "200",
    borderRadius: "2",
    color: textColor
  }, import_react113.default.createElement(HorizontalStack, {
    align: "space-between",
    blockAlign: "start",
    wrap: false,
    gap: "200"
  }, import_react113.default.createElement(HorizontalStack, {
    gap: "150",
    wrap: false
  }, bannerIcon, import_react113.default.createElement(Box, {
    width: "100%"
  }, import_react113.default.createElement(VerticalStack, {
    gap: "200"
  }, import_react113.default.createElement(VerticalStack, {
    gap: "050"
  }, bannerTitle, import_react113.default.createElement("div", null, children2)), actionButtons))), dismissButton));
}

// node_modules/@shopify/polaris/build/esm/components/Banner/Banner.js
var Banner = (0, import_react114.forwardRef)(function Banner2(props, bannerRef) {
  const {
    icon,
    action,
    secondaryAction,
    title,
    children: children2,
    status,
    onDismiss,
    stopAnnouncements,
    hideIcon
  } = props;
  const withinContentContainer = (0, import_react114.useContext)(WithinContentContext);
  const i18n = useI18n();
  const {
    wrapperRef,
    handleKeyUp,
    handleBlur,
    handleMouseUp,
    shouldShowFocus
  } = useBannerFocus(bannerRef);
  const {
    defaultIcon,
    iconColor,
    ariaRoleType
  } = useBannerAttributes(status);
  const iconName = icon || defaultIcon;
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles44.Banner, !polarisSummerEditions2023 && status && styles44[variationName("status", status)], onDismiss && styles44.hasDismiss, shouldShowFocus && styles44.keyFocused, withinContentContainer ? styles44.withinContentContainer : styles44.withinPage);
  let headingMarkup = null;
  if (title) {
    headingMarkup = import_react114.default.createElement(Text, {
      as: "h2",
      variant: "headingMd",
      breakWord: true
    }, title);
  }
  const spinnerMarkup = (action == null ? void 0 : action.loading) ? import_react114.default.createElement("button", {
    disabled: true,
    "aria-busy": true,
    className: classNames(styles44.Button, styles44.loading)
  }, import_react114.default.createElement("span", {
    className: styles44.Spinner
  }, import_react114.default.createElement(Spinner, {
    size: "small",
    accessibilityLabel: i18n.translate("Polaris.Button.spinnerAccessibilityLabel")
  })), action.content) : null;
  const primaryActionMarkup = action ? import_react114.default.createElement(Box, {
    paddingInlineEnd: "200"
  }, action.loading ? spinnerMarkup : unstyledButtonFrom(action, {
    className: `${styles44.Button} ${styles44.PrimaryAction}`
  })) : null;
  const secondaryActionMarkup = secondaryAction ? import_react114.default.createElement(SecondaryActionFrom, {
    action: secondaryAction
  }) : null;
  const actionMarkup = action || secondaryAction ? import_react114.default.createElement(Box, {
    paddingBlockStart: withinContentContainer ? "300" : "400",
    paddingBlockEnd: withinContentContainer ? "100" : void 0
  }, import_react114.default.createElement(ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup)) : null;
  let contentMarkup = null;
  if (children2 || actionMarkup) {
    contentMarkup = import_react114.default.createElement(Box, {
      paddingBlockStart: "050",
      paddingBlockEnd: "050"
    }, children2, actionMarkup);
  }
  const dismissButton = onDismiss && import_react114.default.createElement("div", {
    className: styles44.Dismiss
  }, import_react114.default.createElement(Button, {
    plain: true,
    icon: SvgCancelSmallMinor,
    onClick: onDismiss,
    accessibilityLabel: i18n.translate("Polaris.Banner.dismissButton")
  }));
  return import_react114.default.createElement(BannerContext.Provider, {
    value: true
  }, import_react114.default.createElement("div", {
    className,
    tabIndex: 0,
    ref: wrapperRef,
    role: ariaRoleType,
    "aria-live": stopAnnouncements ? "off" : "polite",
    onMouseUp: handleMouseUp,
    onKeyUp: handleKeyUp,
    onBlur: handleBlur
  }, polarisSummerEditions2023 ? import_react114.default.createElement(BannerExperimental, props) : import_react114.default.createElement(import_react114.default.Fragment, null, dismissButton, hideIcon ? null : import_react114.default.createElement(Box, {
    paddingInlineEnd: "400"
  }, import_react114.default.createElement(Icon, {
    source: iconName,
    color: iconColor
  })), import_react114.default.createElement("div", {
    className: styles44.ContentWrapper
  }, headingMarkup, contentMarkup))));
});
function SecondaryActionFrom({
  action
}) {
  if (action.url) {
    return import_react114.default.createElement(UnstyledLink, {
      className: styles44.SecondaryAction,
      url: action.url,
      external: action.external,
      target: action.target
    }, import_react114.default.createElement("span", {
      className: styles44.Text
    }, action.content));
  }
  return import_react114.default.createElement(UnstyledButton, {
    className: styles44.SecondaryAction,
    onClick: action.onAction
  }, import_react114.default.createElement("span", {
    className: styles44.Text
  }, action.content));
}
function useBannerAttributes(status) {
  switch (status) {
    case "success":
      return {
        defaultIcon: SvgCircleTickMajor,
        iconColor: "success",
        ariaRoleType: "status"
      };
    case "info":
      return {
        defaultIcon: SvgCircleInformationMajor,
        iconColor: "highlight",
        ariaRoleType: "status"
      };
    case "warning":
      return {
        defaultIcon: SvgCircleAlertMajor,
        iconColor: "warning",
        ariaRoleType: "alert"
      };
    case "critical":
      return {
        defaultIcon: SvgDiamondAlertMajor,
        iconColor: "critical",
        ariaRoleType: "alert"
      };
    default:
      return {
        defaultIcon: SvgCircleInformationMajor,
        iconColor: "base",
        ariaRoleType: "status"
      };
  }
}
function useBannerFocus(bannerRef) {
  const wrapperRef = (0, import_react114.useRef)(null);
  const [shouldShowFocus, setShouldShowFocus] = (0, import_react114.useState)(false);
  (0, import_react114.useImperativeHandle)(bannerRef, () => ({
    focus: () => {
      var _a;
      (_a = wrapperRef.current) == null ? void 0 : _a.focus();
      setShouldShowFocus(true);
    }
  }), []);
  const handleKeyUp = (event) => {
    if (event.target === wrapperRef.current) {
      setShouldShowFocus(true);
    }
  };
  const handleBlur = () => setShouldShowFocus(false);
  const handleMouseUp = (event) => {
    event.currentTarget.blur();
    setShouldShowFocus(false);
  };
  return {
    wrapperRef,
    handleKeyUp,
    handleBlur,
    handleMouseUp,
    shouldShowFocus
  };
}

// node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.js
var import_react115 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.scss.js
var styles46 = {
  "Bleed": "Polaris-Bleed"
};

// node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.js
var Bleed = ({
  marginInline,
  marginBlock,
  marginBlockStart,
  marginBlockEnd,
  marginInlineStart,
  marginInlineEnd,
  children: children2
}) => {
  const getNegativeMargins = (direction) => {
    const xAxis = ["marginInlineStart", "marginInlineEnd"];
    const yAxis = ["marginBlockStart", "marginBlockEnd"];
    const directionValues = {
      marginBlockStart,
      marginBlockEnd,
      marginInlineStart,
      marginInlineEnd,
      marginInline,
      marginBlock
    };
    if (directionValues[direction]) {
      return directionValues[direction];
    } else if (xAxis.includes(direction) && marginInline) {
      return directionValues.marginInline;
    } else if (yAxis.includes(direction) && marginBlock) {
      return directionValues.marginBlock;
    }
  };
  const negativeMarginBlockStart = getNegativeMargins("marginBlockStart");
  const negativeMarginBlockEnd = getNegativeMargins("marginBlockEnd");
  const negativeMarginInlineStart = getNegativeMargins("marginInlineStart");
  const negativeMarginInlineEnd = getNegativeMargins("marginInlineEnd");
  const style = {
    ...getResponsiveProps("bleed", "margin-block-start", "space", negativeMarginBlockStart),
    ...getResponsiveProps("bleed", "margin-block-end", "space", negativeMarginBlockEnd),
    ...getResponsiveProps("bleed", "margin-inline-start", "space", negativeMarginInlineStart),
    ...getResponsiveProps("bleed", "margin-inline-end", "space", negativeMarginInlineEnd)
  };
  return import_react115.default.createElement("div", {
    className: styles46.Bleed,
    style: sanitizeCustomProperties(style)
  }, children2);
};

// node_modules/@shopify/polaris/build/esm/components/Breadcrumbs/Breadcrumbs.js
var import_react116 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Breadcrumbs/Breadcrumbs.scss.js
var styles47 = {
  "Breadcrumb": "Polaris-Breadcrumbs__Breadcrumb",
  "Icon": "Polaris-Breadcrumbs__Icon",
  "Content": "Polaris-Breadcrumbs__Content"
};

// node_modules/@shopify/polaris/build/esm/components/Breadcrumbs/Breadcrumbs.js
function Breadcrumbs({
  backAction
}) {
  const {
    content
  } = backAction;
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const contentMarkup = import_react116.default.createElement(import_react116.default.Fragment, null, import_react116.default.createElement("span", {
    className: styles47.Icon
  }, import_react116.default.createElement(Icon, {
    source: SvgArrowLeftMinor
  })), import_react116.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, content));
  const breadcrumbMarkup = "url" in backAction ? import_react116.default.createElement(UnstyledLink, {
    key: content,
    url: backAction.url,
    className: styles47.Breadcrumb,
    onMouseUp: handleMouseUpByBlurring,
    "aria-label": backAction.accessibilityLabel
  }, contentMarkup) : import_react116.default.createElement("button", {
    key: content,
    className: styles47.Breadcrumb,
    onClick: backAction.onAction,
    onMouseUp: handleMouseUpByBlurring,
    type: "button",
    "aria-label": backAction.accessibilityLabel
  }, contentMarkup);
  const summerEditionsBreadcrumbMarkup = import_react116.default.createElement(Button, {
    key: content,
    url: "url" in backAction ? backAction.url : void 0,
    onClick: "onAction" in backAction ? backAction.onAction : void 0,
    onPointerDown: handleMouseUpByBlurring,
    icon: SvgArrowLeftMinor,
    accessibilityLabel: backAction.accessibilityLabel ?? content
  });
  return import_react116.default.createElement("nav", {
    role: "navigation"
  }, polarisSummerEditions2023 ? summerEditionsBreadcrumbMarkup : breadcrumbMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js
var import_react127 = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r)
    return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (-1 !== e.indexOf(n))
        continue;
      t[n] = r[n];
    }
  return t;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_react119 = __toESM(require_react());

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react118 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
  enter: import_prop_types.default.number,
  exit: import_prop_types.default.number,
  appear: import_prop_types.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  active: import_prop_types.default.string
}), import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  enterDone: import_prop_types.default.string,
  enterActive: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  exitDone: import_prop_types.default.string,
  exitActive: import_prop_types.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react117 = __toESM(require_react());
var TransitionGroupContext_default = import_react117.default.createContext(null);

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node) {
  return node.scrollTop;
};

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom2.default.findDOMNode(this);
          if (node)
            forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom2.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom2.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react118.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children2 === "function" ? children2(status, childProps) : import_react118.default.cloneElement(import_react118.default.Children.only(children2), childProps))
    );
  };
  return Transition2;
}(import_react118.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types2.default.shape({
    current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types2.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types2.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types2.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types2.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types2.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types2.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types2.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types2.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types2.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types2.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types2.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types2.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types2.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types2.default.func
} : {};
function noop5() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop5,
  onEntering: noop5,
  onEntered: noop5,
  onExit: noop5,
  onExiting: noop5,
  onExited: noop5
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return addClass(node, c);
  });
};
var removeClass2 = function removeClass3(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node, "exit");
      _this.addClass(node, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node, type);
      _this.addClass(node, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
      _this.removeClasses(node, "appear");
      _this.removeClasses(node, "enter");
      _this.addClass(node, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
      _this.addClass(node, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
      _this.removeClasses(node, "exit");
      _this.addClass(node, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames2 = _this.props.classNames;
      var isStringClassNames = typeof classNames2 === "string";
      var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames2[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      if (node)
        forceReflow(node);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react119.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react119.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types3.default.func
}) : {};
var CSSTransition_default = CSSTransition;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var import_prop_types5 = __toESM(require_prop_types());
var import_react122 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e) {
  if (void 0 === e)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react121 = __toESM(require_react());

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react120 = __toESM(require_react());
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react120.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2)
    import_react120.Children.map(children2, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react120.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key) {
    var child = children2[key];
    if (!(0, import_react120.isValidElement)(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react120.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key] = (0, import_react120.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key] = (0, import_react120.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react120.isValidElement)(prevChild)) {
      children2[key] = (0, import_react120.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component7 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component7 === null) {
      return import_react121.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return import_react121.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react121.default.createElement(Component7, props, children2));
  };
  return TransitionGroup2;
}(import_react121.default.Component);
TransitionGroup.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: import_prop_types4.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: import_prop_types4.default.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: import_prop_types4.default.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: import_prop_types4.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = import_react122.default.Children.toArray(children2)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom3.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react122.default.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react122.default.createElement(TransitionGroup_default, props, inProp ? import_react122.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react122.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react122.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types5.default.bool.isRequired,
  children: function children(props, propName) {
    if (import_react122.default.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_react123 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (import_react123.default.isValidElement(oldChildren) && import_react123.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element, name, cb) {
  return function() {
    var _element$props;
    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
  var current = _ref.current, changeState = _ref.changeState;
  return import_react123.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children2 = _ref2.children;
  return [current, import_react123.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children2 = _ref3.children, changeState = _ref3.changeState;
  return import_react123.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, import_react123.default.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children2 = _ref4.children, changeState = _ref4.changeState;
  return [import_react123.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react123.default.cloneElement(children2, {
        in: true
      }));
    })
  }), import_react123.default.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react123.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react123.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react123.default.Component);
SwitchTransition.propTypes = true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: import_prop_types6.default.oneOf([modes.in, modes.out]),
  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: import_prop_types6.default.oneOfType([import_prop_types6.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.scss.js
var styles48 = {
  "Group": "Polaris-BulkActions__Group",
  "Group-not-sticky": "Polaris-BulkActions--groupNotSticky",
  "Group-entering": "Polaris-BulkActions__Group--entering",
  "Group-exiting": "Polaris-BulkActions__Group--exiting",
  "Group-entered": "Polaris-BulkActions__Group--entered",
  "Group-exited": "Polaris-BulkActions__Group--exited",
  "Group-measuring": "Polaris-BulkActions__Group--measuring",
  "ButtonGroupWrapper": "Polaris-BulkActions__ButtonGroupWrapper",
  "BulkActionButton": "Polaris-BulkActions__BulkActionButton",
  "disabled": "Polaris-BulkActions--disabled"
};

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionMenu/BulkActionMenu.js
var import_react126 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionButton/BulkActionButton.js
var import_react125 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.js
var import_react124 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.scss.js
var styles49 = {
  "Indicator": "Polaris-Indicator",
  "pulseIndicator": "Polaris-Indicator--pulseIndicator"
};

// node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.js
function Indicator({
  pulse = true
}) {
  const className = classNames(styles49.Indicator, pulse && styles49.pulseIndicator);
  return import_react124.default.createElement("span", {
    className
  });
}

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionButton/BulkActionButton.js
function BulkActionButton({
  handleMeasurement,
  url,
  external,
  onAction,
  content,
  disclosure,
  accessibilityLabel,
  disabled,
  indicator,
  showContentInButton
}) {
  const bulkActionButton = (0, import_react125.useRef)(null);
  useComponentDidMount(() => {
    if (handleMeasurement && bulkActionButton.current) {
      const width2 = bulkActionButton.current.getBoundingClientRect().width;
      handleMeasurement(width2);
    }
  });
  const isActivatorForMoreActionsPopover = disclosure && !showContentInButton;
  const buttonContent = isActivatorForMoreActionsPopover ? void 0 : content;
  const buttonMarkup = import_react125.default.createElement(Button, {
    external,
    url,
    accessibilityLabel: isActivatorForMoreActionsPopover ? content : accessibilityLabel,
    disclosure: disclosure && showContentInButton,
    onClick: onAction,
    disabled,
    size: "slim",
    icon: isActivatorForMoreActionsPopover ? import_react125.default.createElement(Icon, {
      source: SvgHorizontalDotsMinor,
      color: "base"
    }) : void 0
  }, buttonContent);
  return import_react125.default.createElement("div", {
    className: styles48.BulkActionButton,
    ref: bulkActionButton
  }, isActivatorForMoreActionsPopover ? import_react125.default.createElement(Tooltip, {
    content,
    preferredPosition: "above"
  }, buttonMarkup) : buttonMarkup, indicator && import_react125.default.createElement(Indicator, null));
}

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionMenu/BulkActionMenu.js
function BulkActionMenu({
  title,
  actions,
  isNewBadgeInBadgeActions
}) {
  const {
    value: isVisible,
    toggle: toggleMenuVisibility
  } = useToggle(false);
  return import_react126.default.createElement(import_react126.default.Fragment, null, import_react126.default.createElement(Popover2, {
    active: isVisible,
    activator: import_react126.default.createElement(BulkActionButton, {
      disclosure: true,
      showContentInButton: true,
      onAction: toggleMenuVisibility,
      content: title,
      indicator: isNewBadgeInBadgeActions
    }),
    onClose: toggleMenuVisibility,
    preferInputActivator: true
  }, import_react126.default.createElement(ActionList, {
    items: actions,
    onActionAnyItem: toggleMenuVisibility
  })));
}

// node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js
var MAX_PROMOTED_ACTIONS = 2;
var BUTTONS_NODE_ADDITIONAL_WIDTH = 64;
var BulkActionsInner = class extends import_react127.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      popoverVisible: false,
      containerWidth: 0,
      measuring: true
    };
    this.containerNode = null;
    this.buttonsNode = null;
    this.moreActionsNode = null;
    this.groupNode = (0, import_react127.createRef)();
    this.promotedActionsWidths = [];
    this.bulkActionsWidth = 0;
    this.addedMoreActionsWidthForMeasuring = 0;
    this.handleResize = debounce(() => {
      const {
        popoverVisible
      } = this.state;
      if (this.containerNode) {
        const containerWidth = this.containerNode.getBoundingClientRect().width;
        if (containerWidth > 0) {
          this.setState({
            containerWidth
          });
        }
      }
      if (popoverVisible) {
        this.setState({
          popoverVisible: false
        });
      }
    }, 50, {
      trailing: true
    });
    this.setButtonsNode = (node) => {
      this.buttonsNode = node;
    };
    this.setContainerNode = (node) => {
      this.containerNode = node;
    };
    this.setMoreActionsNode = (node) => {
      this.moreActionsNode = node;
    };
    this.togglePopover = () => {
      if (this.props.onMoreActionPopoverToggle) {
        this.props.onMoreActionPopoverToggle(this.state.popoverVisible);
      }
      this.setState(({
        popoverVisible
      }) => ({
        popoverVisible: !popoverVisible
      }));
    };
    this.handleMeasurement = (width2) => {
      const {
        measuring
      } = this.state;
      if (measuring) {
        this.promotedActionsWidths.push(width2);
      }
    };
  }
  numberOfPromotedActionsToRender() {
    const {
      promotedActions
    } = this.props;
    const {
      containerWidth,
      measuring
    } = this.state;
    if (!promotedActions) {
      return 0;
    }
    const containerWidthMinusAdditionalWidth = Math.max(0, containerWidth - BUTTONS_NODE_ADDITIONAL_WIDTH);
    if (containerWidthMinusAdditionalWidth >= this.bulkActionsWidth || measuring) {
      return promotedActions.length;
    }
    let sufficientSpace = false;
    let counter = promotedActions.length - 1;
    let totalWidth = 0;
    while (!sufficientSpace && counter >= 0) {
      totalWidth += this.promotedActionsWidths[counter];
      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;
      if (containerWidthMinusAdditionalWidth >= widthWithRemovedAction) {
        sufficientSpace = true;
      } else {
        counter--;
      }
    }
    return clamp(counter, 0, promotedActions.length);
  }
  actionSections() {
    const {
      actions
    } = this.props;
    if (!actions || actions.length === 0) {
      return;
    }
    if (instanceOfBulkActionListSectionArray(actions)) {
      return actions;
    }
    if (instanceOfBulkActionArray(actions)) {
      return [{
        items: actions
      }];
    }
  }
  rolledInPromotedActions() {
    const {
      promotedActions
    } = this.props;
    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();
    if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {
      return [];
    }
    const rolledInPromotedActions = promotedActions.map((action) => {
      if (instanceOfMenuGroupDescriptor(action)) {
        return {
          items: [...action.actions]
        };
      }
      return {
        items: [action]
      };
    });
    return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);
  }
  // eslint-disable-next-line @typescript-eslint/member-ordering
  componentDidMount() {
    const {
      actions,
      promotedActions
    } = this.props;
    if (promotedActions && !actions && this.moreActionsNode) {
      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;
    }
    this.bulkActionsWidth = this.buttonsNode ? this.buttonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;
    if (this.containerNode) {
      this.setState({
        containerWidth: this.containerNode.getBoundingClientRect().width,
        measuring: false
      });
    }
  }
  // eslint-disable-next-line @typescript-eslint/member-ordering
  render() {
    const {
      selectMode,
      disabled,
      promotedActions,
      i18n,
      isSticky,
      width: width2
    } = this.props;
    const actionSections = this.actionSections();
    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && true) {
      console.warn(i18n.translate("Polaris.ResourceList.BulkActions.warningMessage", {
        maxPromotedActions: MAX_PROMOTED_ACTIONS
      }));
    }
    const {
      popoverVisible,
      measuring
    } = this.state;
    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();
    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => {
      if (instanceOfMenuGroupDescriptor(action)) {
        return import_react127.default.createElement(BulkActionMenu, Object.assign({
          key: index
        }, action, {
          isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()
        }));
      }
      return import_react127.default.createElement(BulkActionButton, Object.assign({
        key: index,
        disabled
      }, action, {
        handleMeasurement: this.handleMeasurement
      }));
    }) : null;
    const rolledInPromotedActions = this.rolledInPromotedActions();
    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate("Polaris.ResourceList.BulkActions.actionsActivatorLabel") : i18n.translate("Polaris.ResourceList.BulkActions.moreActionsActivatorLabel");
    let combinedActions = [];
    if (actionSections && rolledInPromotedActions.length > 0) {
      combinedActions = [...rolledInPromotedActions, ...actionSections];
    } else if (actionSections) {
      combinedActions = actionSections;
    } else if (rolledInPromotedActions.length > 0) {
      combinedActions = [...rolledInPromotedActions];
    }
    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? import_react127.default.createElement("div", {
      className: styles48.Popover,
      ref: this.setMoreActionsNode
    }, import_react127.default.createElement(Popover2, {
      active: popoverVisible,
      activator: import_react127.default.createElement(BulkActionButton, {
        disclosure: true,
        showContentInButton: !promotedActionsMarkup,
        onAction: this.togglePopover,
        content: activatorLabel,
        disabled,
        indicator: this.isNewBadgeInBadgeActions()
      }),
      preferredAlignment: "right",
      onClose: this.togglePopover
    }, import_react127.default.createElement(ActionList, {
      sections: combinedActions,
      onActionAnyItem: this.togglePopover
    }))) : null;
    const groupContent = promotedActionsMarkup || actionsPopover ? import_react127.default.createElement(HorizontalStack, {
      gap: "300"
    }, promotedActionsMarkup, actionsPopover) : null;
    if (!groupContent) {
      return null;
    }
    const group = import_react127.default.createElement(Transition_default, {
      timeout: 100,
      in: selectMode,
      key: "group",
      nodeRef: this.groupNode
    }, (status) => {
      const groupClassName = classNames(styles48.Group, !isSticky && styles48["Group-not-sticky"], !measuring && isSticky && styles48[`Group-${status}`], measuring && styles48["Group-measuring"]);
      return import_react127.default.createElement("div", {
        className: groupClassName,
        ref: this.groupNode,
        style: {
          width: width2
        }
      }, import_react127.default.createElement(EventListener, {
        event: "resize",
        handler: this.handleResize
      }), import_react127.default.createElement("div", {
        className: styles48.ButtonGroupWrapper,
        ref: this.setButtonsNode
      }, import_react127.default.createElement("div", {
        className: styles48.ButtonGroupInner
      }, groupContent)));
    });
    return import_react127.default.createElement("div", {
      ref: this.setContainerNode
    }, group);
  }
  isNewBadgeInBadgeActions() {
    var _a;
    const actions = this.actionSections();
    if (!actions)
      return false;
    for (const action of actions) {
      for (const item of action.items) {
        if (((_a = item.badge) == null ? void 0 : _a.status) === "new")
          return true;
      }
    }
    return false;
  }
};
function instanceOfBulkActionListSectionArray(actions) {
  const validList = actions.filter((action) => {
    return action.items;
  });
  return actions.length === validList.length;
}
function instanceOfBulkActionArray(actions) {
  const validList = actions.filter((action) => {
    return !action.items;
  });
  return actions.length === validList.length;
}
function instanceOfMenuGroupDescriptor(action) {
  return "title" in action;
}
function BulkActions(props) {
  const i18n = useI18n();
  return import_react127.default.createElement(BulkActionsInner, Object.assign({}, props, {
    i18n
  }));
}

// node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.js
var import_react135 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.scss.js
var styles50 = {
  "CalloutCard": "Polaris-CalloutCard",
  "Image": "Polaris-CalloutCard__Image",
  "DismissImage": "Polaris-CalloutCard__DismissImage",
  "Content": "Polaris-CalloutCard__Content",
  "Title": "Polaris-CalloutCard__Title",
  "Buttons": "Polaris-CalloutCard__Buttons",
  "Container": "Polaris-CalloutCard__Container",
  "Dismiss": "Polaris-CalloutCard__Dismiss",
  "hasDismiss": "Polaris-CalloutCard--hasDismiss"
};

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.js
var import_react133 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.scss.js
var styles51 = {
  "LegacyCard": "Polaris-LegacyCard",
  "Section": "Polaris-LegacyCard__Section",
  "subdued": "Polaris-LegacyCard--subdued",
  "Section-hideOnPrint": "Polaris-LegacyCard__Section--hideOnPrint",
  "hideOnPrint": "Polaris-LegacyCard--hideOnPrint",
  "Header": "Polaris-LegacyCard__Header",
  "Section-fullWidth": "Polaris-LegacyCard__Section--fullWidth",
  "Section-flush": "Polaris-LegacyCard__Section--flush",
  "Section-subdued": "Polaris-LegacyCard__Section--subdued",
  "SectionHeader": "Polaris-LegacyCard__SectionHeader",
  "Subsection": "Polaris-LegacyCard__Subsection",
  "Footer": "Polaris-LegacyCard__Footer",
  "LeftJustified": "Polaris-LegacyCard__LeftJustified",
  "FirstSectionPadding": "Polaris-LegacyCard__FirstSectionPadding",
  "LastSectionPadding": "Polaris-LegacyCard__LastSectionPadding"
};

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Header/Header.js
var import_react130 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.js
var import_react129 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.scss.js
var styles52 = {
  "LegacyStack": "Polaris-LegacyStack",
  "Item": "Polaris-LegacyStack__Item",
  "noWrap": "Polaris-LegacyStack--noWrap",
  "spacingNone": "Polaris-LegacyStack--spacingNone",
  "spacingExtraTight": "Polaris-LegacyStack--spacingExtraTight",
  "spacingTight": "Polaris-LegacyStack--spacingTight",
  "spacingBaseTight": "Polaris-LegacyStack--spacingBaseTight",
  "spacingLoose": "Polaris-LegacyStack--spacingLoose",
  "spacingExtraLoose": "Polaris-LegacyStack--spacingExtraLoose",
  "distributionLeading": "Polaris-LegacyStack--distributionLeading",
  "distributionTrailing": "Polaris-LegacyStack--distributionTrailing",
  "distributionCenter": "Polaris-LegacyStack--distributionCenter",
  "distributionEqualSpacing": "Polaris-LegacyStack--distributionEqualSpacing",
  "distributionFill": "Polaris-LegacyStack--distributionFill",
  "distributionFillEvenly": "Polaris-LegacyStack--distributionFillEvenly",
  "alignmentLeading": "Polaris-LegacyStack--alignmentLeading",
  "alignmentTrailing": "Polaris-LegacyStack--alignmentTrailing",
  "alignmentCenter": "Polaris-LegacyStack--alignmentCenter",
  "alignmentFill": "Polaris-LegacyStack--alignmentFill",
  "alignmentBaseline": "Polaris-LegacyStack--alignmentBaseline",
  "vertical": "Polaris-LegacyStack--vertical",
  "Item-fill": "Polaris-LegacyStack__Item--fill"
};

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/components/Item/Item.js
var import_react128 = __toESM(require_react());
function Item4({
  children: children2,
  fill
}) {
  const className = classNames(styles52.Item, fill && styles52["Item-fill"]);
  return import_react128.default.createElement("div", {
    className
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.js
var LegacyStack = (0, import_react129.memo)(function Stack({
  children: children2,
  vertical,
  spacing,
  distribution,
  alignment,
  wrap
}) {
  const className = classNames(styles52.LegacyStack, vertical && styles52.vertical, spacing && styles52[variationName("spacing", spacing)], distribution && styles52[variationName("distribution", distribution)], alignment && styles52[variationName("alignment", alignment)], wrap === false && styles52.noWrap);
  const itemMarkup = elementChildren(children2).map((child, index) => {
    const props = {
      key: index
    };
    return wrapWithComponent(child, Item4, props);
  });
  return import_react129.default.createElement("div", {
    className
  }, itemMarkup);
});
LegacyStack.Item = Item4;

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Header/Header.js
function Header2({
  children: children2,
  title,
  actions
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const actionMarkup = actions ? import_react130.default.createElement(ButtonGroup, null, buttonsFrom(actions, {
    plain: true
  })) : null;
  const titleMarkup = (0, import_react130.isValidElement)(title) ? title : import_react130.default.createElement(Text, {
    variant: polarisSummerEditions2023 ? "headingSm" : "headingMd",
    as: "h2"
  }, title);
  const headingMarkup = (
    // eslint-disable-next-line no-nested-ternary
    actionMarkup || children2 ? polarisSummerEditions2023 ? import_react130.default.createElement(HorizontalStack, {
      wrap: false,
      gap: "200",
      align: "space-between",
      blockAlign: "center"
    }, titleMarkup, import_react130.default.createElement(HorizontalStack, {
      wrap: false,
      gap: "400",
      blockAlign: "center"
    }, actionMarkup, children2)) : import_react130.default.createElement(LegacyStack, {
      alignment: "baseline"
    }, import_react130.default.createElement(LegacyStack.Item, {
      fill: true
    }, titleMarkup), actionMarkup, children2) : titleMarkup
  );
  return import_react130.default.createElement("div", {
    className: styles51.Header
  }, headingMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Section/Section.js
var import_react131 = __toESM(require_react());
function Section4({
  children: children2,
  title,
  subdued,
  flush,
  fullWidth,
  actions,
  hideOnPrint
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles51.Section, flush && styles51["Section-flush"], subdued && styles51["Section-subdued"], fullWidth && styles51["Section-fullWidth"], hideOnPrint && styles51["Section-hideOnPrint"]);
  const actionMarkup = actions ? import_react131.default.createElement(ButtonGroup, null, buttonsFrom(actions, {
    plain: true
  })) : null;
  const titleMarkup = typeof title === "string" ? import_react131.default.createElement(Text, {
    variant: "headingSm",
    as: "h3",
    fontWeight: polarisSummerEditions2023 ? "medium" : "semibold"
  }, title) : title;
  const titleAreaMarkup = titleMarkup || actionMarkup ? import_react131.default.createElement("div", {
    className: styles51.SectionHeader
  }, actionMarkup ? import_react131.default.createElement(LegacyStack, {
    alignment: "baseline"
  }, import_react131.default.createElement(LegacyStack.Item, {
    fill: true
  }, titleMarkup), actionMarkup) : titleMarkup) : null;
  return import_react131.default.createElement("div", {
    className
  }, titleAreaMarkup, children2);
}

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Subsection/Subsection.js
var import_react132 = __toESM(require_react());
function Subsection({
  children: children2
}) {
  return import_react132.default.createElement("div", {
    className: styles51.Subsection
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.js
var LegacyCard = function LegacyCard2({
  children: children2,
  hideOnPrint,
  title,
  subdued,
  sectioned,
  actions,
  primaryFooterAction,
  secondaryFooterActions,
  secondaryFooterActionsDisclosureText,
  footerActionAlignment = "right"
}) {
  const i18n = useI18n();
  const {
    value: secondaryActionsPopoverOpen,
    toggle: toggleSecondaryActionsPopoverOpen
  } = useToggle(false);
  const legacyCard = useLegacyCardPaddingObserverRef();
  const className = classNames(styles51.LegacyCard, subdued && styles51.subdued, hideOnPrint && styles51.hideOnPrint);
  const headerMarkup = title || actions ? import_react133.default.createElement(Header2, {
    actions,
    title
  }) : null;
  const content = sectioned ? import_react133.default.createElement(Section4, null, children2) : children2;
  const primaryFooterActionMarkup = primaryFooterAction ? buttonFrom(primaryFooterAction, {
    primary: true
  }) : null;
  let secondaryFooterActionsMarkup = null;
  if (secondaryFooterActions && secondaryFooterActions.length) {
    if (secondaryFooterActions.length === 1) {
      secondaryFooterActionsMarkup = buttonFrom(secondaryFooterActions[0]);
    } else {
      secondaryFooterActionsMarkup = import_react133.default.createElement(import_react133.default.Fragment, null, import_react133.default.createElement(Popover2, {
        active: secondaryActionsPopoverOpen,
        activator: import_react133.default.createElement(Button, {
          disclosure: true,
          onClick: toggleSecondaryActionsPopoverOpen
        }, secondaryFooterActionsDisclosureText || i18n.translate("Polaris.Common.more")),
        onClose: toggleSecondaryActionsPopoverOpen
      }, import_react133.default.createElement(ActionList, {
        items: secondaryFooterActions
      })));
    }
  }
  const footerMarkup = primaryFooterActionMarkup || secondaryFooterActionsMarkup ? import_react133.default.createElement("div", {
    className: classNames(styles51.Footer, footerActionAlignment === "left" && styles51.LeftJustified)
  }, footerActionAlignment === "right" ? import_react133.default.createElement(ButtonGroup, null, secondaryFooterActionsMarkup, primaryFooterActionMarkup) : import_react133.default.createElement(ButtonGroup, null, primaryFooterActionMarkup, secondaryFooterActionsMarkup)) : null;
  return import_react133.default.createElement(WithinContentContext.Provider, {
    value: true
  }, import_react133.default.createElement("div", {
    className,
    ref: legacyCard
  }, headerMarkup, content, footerMarkup));
};
LegacyCard.Header = Header2;
LegacyCard.Section = Section4;
LegacyCard.Subsection = Subsection;
function useLegacyCardPaddingObserverRef() {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const legacyCard = (0, import_react133.useRef)(null);
  (0, import_react133.useEffect)(() => {
    if (!polarisSummerEditions2023) {
      return;
    }
    const legacyCardNode = legacyCard.current;
    let firstSection;
    let lastSection;
    if (legacyCardNode) {
      const updateFirstAndLastSectionPadding = () => {
        var _a, _b;
        updatePadding(firstSection, "top", false);
        updatePadding(lastSection, "bottom", false);
        const currentElements = legacyCardNode.querySelectorAll(`.${styles51.Section}, .${styles51.Header}, .${styles51.Footer}`);
        if (!(currentElements == null ? void 0 : currentElements.length))
          return;
        const firstElement = currentElements[0];
        const lastElement = getMostSeniorLastElement(currentElements);
        if ((_a = legacyCardNode.firstChild) == null ? void 0 : _a.contains(firstElement)) {
          firstSection = firstElement;
          updatePadding(firstSection, "top", true);
        }
        if ((_b = legacyCardNode.lastChild) == null ? void 0 : _b.contains(lastElement)) {
          lastSection = lastElement;
          updatePadding(lastSection, "bottom", true);
        }
      };
      updateFirstAndLastSectionPadding();
      const observer = new MutationObserver(updateFirstAndLastSectionPadding);
      observer.observe(legacyCardNode, {
        childList: true,
        subtree: true
      });
      return () => {
        updatePadding(firstSection, "top", false);
        updatePadding(lastSection, "bottom", false);
        observer.disconnect();
      };
    }
  }, [polarisSummerEditions2023]);
  return legacyCard;
}
function updatePadding(element, area, add) {
  if (!element || element.className.includes(styles51["Section-flush"]))
    return;
  switch (area) {
    case "top":
      element.classList.toggle(styles51.FirstSectionPadding, add);
      return;
    case "bottom":
      element.classList.toggle(styles51.LastSectionPadding, add);
  }
}
function getMostSeniorLastElement(elements) {
  let lastElement = elements[0];
  elements.forEach((element) => {
    if (!lastElement.contains(element)) {
      lastElement = element;
    }
  });
  return lastElement;
}

// node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.js
var import_react134 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.scss.js
var styles53 = {
  "TextContainer": "Polaris-TextContainer",
  "spacingTight": "Polaris-TextContainer--spacingTight",
  "spacingLoose": "Polaris-TextContainer--spacingLoose"
};

// node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.js
function TextContainer({
  spacing,
  children: children2
}) {
  const className = classNames(styles53.TextContainer, spacing && styles53[variationName("spacing", spacing)]);
  return import_react134.default.createElement("div", {
    className
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.js
function CalloutCard({
  title,
  children: children2,
  illustration,
  primaryAction,
  secondaryAction,
  onDismiss
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const primaryActionMarkup = buttonFrom(primaryAction);
  const secondaryActionMarkup = secondaryAction ? buttonFrom(secondaryAction, {
    plain: true,
    primary: polarisSummerEditions2023
  }) : null;
  const buttonMarkup = secondaryActionMarkup ? import_react135.default.createElement(ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup) : primaryActionMarkup;
  const dismissButton = onDismiss ? import_react135.default.createElement("div", {
    className: styles50.Dismiss
  }, import_react135.default.createElement(Button, {
    plain: true,
    icon: SvgCancelSmallMinor,
    onClick: onDismiss,
    accessibilityLabel: "Dismiss card"
  })) : null;
  const imageClassName = classNames(styles50.Image, onDismiss && styles50.DismissImage);
  const containerClassName = classNames(styles50.Container, onDismiss && styles50.hasDismiss);
  return import_react135.default.createElement(LegacyCard, null, import_react135.default.createElement("div", {
    className: containerClassName
  }, dismissButton, import_react135.default.createElement(LegacyCard.Section, null, import_react135.default.createElement("div", {
    className: styles50.CalloutCard
  }, import_react135.default.createElement("div", {
    className: styles50.Content
  }, import_react135.default.createElement("div", {
    className: styles50.Title
  }, import_react135.default.createElement(Text, {
    variant: "headingMd",
    as: "h2"
  }, title)), import_react135.default.createElement(TextContainer, null, children2), import_react135.default.createElement("div", {
    className: styles50.Buttons
  }, buttonMarkup)), import_react135.default.createElement(Image, {
    alt: "",
    className: imageClassName,
    source: illustration
  })))));
}

// node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.js
var import_react137 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.scss.js
var styles54 = {
  "ChoiceChildren": "Polaris-ChoiceList__ChoiceChildren"
};

// node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.js
var import_react136 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.scss.js
var styles55 = {
  "RadioButton": "Polaris-RadioButton",
  "Input": "Polaris-RadioButton__Input",
  "Backdrop": "Polaris-RadioButton__Backdrop",
  "ChoiceLabel": "Polaris-RadioButton__ChoiceLabel"
};

// node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.js
function RadioButton({
  ariaDescribedBy: ariaDescribedByProp,
  label,
  labelHidden,
  helpText,
  checked,
  disabled,
  onChange,
  onFocus,
  onBlur,
  id: idProp,
  name: nameProp,
  value,
  fill,
  bleed,
  bleedBlockStart,
  bleedBlockEnd,
  bleedInlineStart,
  bleedInlineEnd
}) {
  const uniqId = (0, import_react136.useId)();
  const id = idProp ?? uniqId;
  const name = nameProp || id;
  const inputNode = (0, import_react136.useRef)(null);
  const handleBlur = () => {
    onBlur && onBlur();
  };
  function handleChange({
    currentTarget
  }) {
    onChange && onChange(currentTarget.checked, id);
  }
  const describedBy = [];
  if (helpText) {
    describedBy.push(helpTextID(id));
  }
  if (ariaDescribedByProp) {
    describedBy.push(ariaDescribedByProp);
  }
  const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
  const inputClassName = classNames(styles55.Input);
  const extraChoiceProps = {
    helpText,
    bleed,
    bleedBlockStart,
    bleedBlockEnd,
    bleedInlineStart,
    bleedInlineEnd
  };
  return import_react136.default.createElement(Choice, Object.assign({
    label,
    labelHidden,
    disabled,
    id,
    labelClassName: styles55.ChoiceLabel,
    fill
  }, extraChoiceProps), import_react136.default.createElement("span", {
    className: styles55.RadioButton
  }, import_react136.default.createElement("input", {
    id,
    name,
    value,
    type: "radio",
    checked,
    disabled,
    className: inputClassName,
    onChange: handleChange,
    onFocus,
    onBlur: handleBlur,
    "aria-describedby": ariaDescribedBy,
    ref: inputNode
  }), import_react136.default.createElement("span", {
    className: styles55.Backdrop
  })));
}

// node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.js
function ChoiceList({
  title,
  titleHidden,
  allowMultiple,
  choices,
  selected,
  onChange = noop6,
  error,
  disabled = false,
  name: nameProp
}) {
  const ControlComponent = allowMultiple ? Checkbox : RadioButton;
  const uniqName = (0, import_react137.useId)();
  const name = nameProp ?? uniqName;
  const finalName = allowMultiple ? `${name}[]` : name;
  const titleMarkup = title ? import_react137.default.createElement(Box, {
    as: "legend",
    paddingBlockEnd: {
      xs: "500",
      md: "100"
    },
    visuallyHidden: titleHidden
  }, title) : null;
  const choicesMarkup = choices.map((choice) => {
    const {
      value,
      id,
      label,
      helpText,
      disabled: choiceDisabled,
      describedByError
    } = choice;
    function handleChange(checked) {
      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);
    }
    const isSelected2 = choiceIsSelected(choice, selected);
    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected2) : null;
    const children2 = renderedChildren ? import_react137.default.createElement("div", {
      className: styles54.ChoiceChildren
    }, import_react137.default.createElement(Box, {
      paddingBlockStart: {
        xs: "400",
        md: "0"
      }
    }, renderedChildren)) : null;
    return import_react137.default.createElement("li", {
      key: value
    }, import_react137.default.createElement(Bleed, {
      marginBlockEnd: helpText ? {
        xs: "100",
        md: "0"
      } : {
        xs: "0"
      }
    }, import_react137.default.createElement(ControlComponent, {
      name: finalName,
      value,
      id,
      label,
      disabled: choiceDisabled || disabled,
      fill: {
        xs: true,
        sm: false
      },
      checked: choiceIsSelected(choice, selected),
      helpText,
      onChange: handleChange,
      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null
    }), children2));
  });
  const errorMarkup = error && import_react137.default.createElement(Box, {
    paddingBlockStart: {
      xs: "0",
      md: "100"
    },
    paddingBlockEnd: "200"
  }, import_react137.default.createElement(InlineError, {
    message: error,
    fieldID: finalName
  }));
  return import_react137.default.createElement(VerticalStack, {
    as: "fieldset",
    gap: {
      xs: "400",
      md: "0"
    },
    "aria-invalid": error != null,
    id: finalName
  }, titleMarkup, import_react137.default.createElement(VerticalStack, {
    as: "ul",
    gap: {
      xs: "400",
      md: "0"
    }
  }, choicesMarkup), errorMarkup);
}
function noop6() {
}
function choiceIsSelected({
  value
}, selected) {
  return selected.includes(value);
}
function updateSelectedChoices({
  value
}, checked, selected, allowMultiple = false) {
  if (checked) {
    return allowMultiple ? [...selected, value] : [value];
  }
  return selected.filter((selectedChoice) => selectedChoice !== value);
}

// node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.js
var import_react138 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.scss.js
var styles56 = {
  "Collapsible": "Polaris-Collapsible",
  "isFullyClosed": "Polaris-Collapsible--isFullyClosed",
  "expandOnPrint": "Polaris-Collapsible--expandOnPrint"
};

// node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.js
function Collapsible({
  id,
  expandOnPrint,
  open,
  transition = true,
  children: children2,
  onAnimationEnd
}) {
  const [height2, setHeight] = (0, import_react138.useState)(0);
  const [isOpen, setIsOpen] = (0, import_react138.useState)(open);
  const [animationState, setAnimationState] = (0, import_react138.useState)("idle");
  const collapsibleContainer = (0, import_react138.useRef)(null);
  const isFullyOpen = animationState === "idle" && open && isOpen;
  const isFullyClosed = animationState === "idle" && !open && !isOpen;
  const content = expandOnPrint || !isFullyClosed ? children2 : null;
  const wrapperClassName = classNames(styles56.Collapsible, isFullyClosed && styles56.isFullyClosed, expandOnPrint && styles56.expandOnPrint);
  const transitionDisabled = isTransitionDisabled(transition);
  const transitionStyles3 = typeof transition === "object" && {
    transitionDuration: transition.duration,
    transitionTimingFunction: transition.timingFunction
  };
  const collapsibleStyles = {
    ...transitionStyles3,
    ...{
      maxHeight: isFullyOpen ? "none" : `${height2}px`,
      overflow: isFullyOpen ? "visible" : "hidden"
    }
  };
  const handleCompleteAnimation = (0, import_react138.useCallback)(({
    target
  }) => {
    if (target === collapsibleContainer.current) {
      setAnimationState("idle");
      setIsOpen(open);
      onAnimationEnd && onAnimationEnd();
    }
  }, [onAnimationEnd, open]);
  const startAnimation = (0, import_react138.useCallback)(() => {
    if (transitionDisabled) {
      setIsOpen(open);
      setAnimationState("idle");
      if (open && collapsibleContainer.current) {
        setHeight(collapsibleContainer.current.scrollHeight);
      } else {
        setHeight(0);
      }
    } else {
      setAnimationState("measuring");
    }
  }, [open, transitionDisabled]);
  (0, import_react138.useEffect)(() => {
    if (open !== isOpen) {
      startAnimation();
    }
  }, [open, isOpen]);
  (0, import_react138.useEffect)(() => {
    if (!open || !collapsibleContainer.current)
      return;
    setHeight(collapsibleContainer.current.scrollHeight);
  }, []);
  (0, import_react138.useEffect)(() => {
    if (!collapsibleContainer.current)
      return;
    switch (animationState) {
      case "idle":
        break;
      case "measuring":
        setHeight(collapsibleContainer.current.scrollHeight);
        setAnimationState("animating");
        break;
      case "animating":
        setHeight(open ? collapsibleContainer.current.scrollHeight : 0);
    }
  }, [animationState, open, isOpen]);
  return import_react138.default.createElement("div", {
    id,
    style: collapsibleStyles,
    ref: collapsibleContainer,
    className: wrapperClassName,
    onTransitionEnd: handleCompleteAnimation,
    "aria-hidden": !open
  }, content);
}
var zeroDurationRegex = /^0(ms|s)$/;
function isTransitionDisabled(transitionProp) {
  if (typeof transitionProp === "boolean") {
    return !transitionProp;
  }
  const {
    duration
  } = transitionProp;
  if (duration && zeroDurationRegex.test(duration.trim())) {
    return true;
  }
  return false;
}

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.js
var import_react142 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.scss.js
var styles57 = {
  "ColorPicker": "Polaris-ColorPicker",
  "MainColor": "Polaris-ColorPicker__MainColor",
  "fullWidth": "Polaris-ColorPicker--fullWidth",
  "Dragger": "Polaris-ColorPicker__Dragger",
  "ColorLayer": "Polaris-ColorPicker__ColorLayer",
  "HuePicker": "Polaris-ColorPicker__HuePicker",
  "AlphaPicker": "Polaris-ColorPicker__AlphaPicker",
  "Slidable": "Polaris-ColorPicker__Slidable"
};

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/AlphaPicker.js
var import_react140 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/utilities.js
var VERTICAL_PADDING = 13;
function calculateDraggerY(alpha, sliderHeight, draggerHeight) {
  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);
  return clamp(offset, 0, sliderHeight);
}
function alphaForDraggerY(y, sliderHeight) {
  const offsetY = clamp(y, 0, sliderHeight);
  return alphaForOffset(offsetY, sliderHeight);
}
function alphaForOffset(offset, sliderHeight) {
  const selectionHeight = offset - VERTICAL_PADDING;
  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;
  return clamp(1 - selectionHeight / slidableArea, 0, 1);
}
function offsetForAlpha(alpha, sliderHeight, draggerHeight) {
  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);
  return clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);
}

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/Slidable/Slidable.js
var import_react139 = __toESM(require_react());
var isDragging = false;
if (!isServer) {
  window.addEventListener("touchmove", (event) => {
    if (!isDragging) {
      return;
    }
    event.preventDefault();
  }, {
    passive: false
  });
}
var Slidable = class extends import_react139.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      dragging: false
    };
    this.node = null;
    this.draggerNode = null;
    this.setDraggerNode = (node) => {
      this.draggerNode = node;
    };
    this.setNode = (node) => {
      this.node = node;
    };
    this.startDrag = (event) => {
      if (isMouseDownEvent(event)) {
        this.handleDraggerMove(event.clientX, event.clientY);
      }
      isDragging = true;
      this.setState({
        dragging: true
      });
    };
    this.handleDragEnd = () => {
      isDragging = false;
      this.setState({
        dragging: false
      });
    };
    this.handleMove = (event) => {
      event.stopImmediatePropagation();
      event.stopPropagation();
      if (event.cancelable) {
        event.preventDefault();
      }
      if (isMouseMoveEvent(event)) {
        this.handleDraggerMove(event.clientX, event.clientY);
        return;
      }
      this.handleDraggerMove(event.touches[0].clientX, event.touches[0].clientY);
    };
    this.handleDraggerMove = (x, y) => {
      if (this.node == null) {
        return;
      }
      const {
        onChange
      } = this.props;
      const rect = this.node.getBoundingClientRect();
      const offsetX = x - rect.left;
      const offsetY = y - rect.top;
      onChange({
        x: offsetX,
        y: offsetY
      });
    };
  }
  componentDidMount() {
    const {
      onDraggerHeight
    } = this.props;
    if (onDraggerHeight == null) {
      return;
    }
    const {
      draggerNode
    } = this;
    if (draggerNode == null) {
      return;
    }
    onDraggerHeight(draggerNode.clientWidth);
    if (true) {
      setTimeout(() => {
        onDraggerHeight(draggerNode.clientWidth);
      }, 0);
    }
  }
  render() {
    const {
      dragging
    } = this.state;
    const {
      draggerX = 0,
      draggerY = 0
    } = this.props;
    const draggerPositioning = {
      transform: `translate3d(${draggerX}px, ${draggerY}px, 0)`
    };
    const moveListener = dragging ? import_react139.default.createElement(EventListener, {
      event: "mousemove",
      handler: this.handleMove,
      passive: false
    }) : null;
    const touchMoveListener = dragging ? import_react139.default.createElement(EventListener, {
      event: "touchmove",
      handler: this.handleMove,
      passive: false
    }) : null;
    const endDragListener = dragging ? import_react139.default.createElement(EventListener, {
      event: "mouseup",
      handler: this.handleDragEnd
    }) : null;
    const touchEndListener = dragging ? import_react139.default.createElement(EventListener, {
      event: "touchend",
      handler: this.handleDragEnd
    }) : null;
    const touchCancelListener = dragging ? import_react139.default.createElement(EventListener, {
      event: "touchcancel",
      handler: this.handleDragEnd
    }) : null;
    return import_react139.default.createElement("div", {
      ref: this.setNode,
      className: styles57.Slidable,
      onMouseDown: this.startDrag,
      onTouchStart: this.startDrag
    }, endDragListener, moveListener, touchMoveListener, touchEndListener, touchCancelListener, import_react139.default.createElement("div", {
      style: draggerPositioning,
      className: styles57.Dragger,
      ref: this.setDraggerNode
    }));
  }
};
function isMouseMoveEvent(event) {
  return event.type === "mousemove";
}
function isMouseDownEvent(event) {
  return event.type === "mousedown";
}

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/AlphaPicker.js
var AlphaPicker = class extends import_react140.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      sliderHeight: 0,
      draggerHeight: 0
    };
    this.setSliderHeight = (node) => {
      if (node == null) {
        return;
      }
      this.setState({
        sliderHeight: node.clientHeight
      });
      if (true) {
        setTimeout(() => {
          this.setState({
            sliderHeight: node.clientHeight
          });
        }, 0);
      }
    };
    this.setDraggerHeight = (height2) => {
      this.setState({
        draggerHeight: height2
      });
    };
    this.handleChange = ({
      y
    }) => {
      const {
        onChange
      } = this.props;
      const {
        sliderHeight
      } = this.state;
      const alpha = alphaForDraggerY(y, sliderHeight);
      onChange(alpha);
    };
  }
  render() {
    const {
      color: color2,
      alpha
    } = this.props;
    const {
      sliderHeight,
      draggerHeight
    } = this.state;
    const draggerY = calculateDraggerY(alpha, sliderHeight, draggerHeight);
    const background = alphaGradientForColor(color2);
    return import_react140.default.createElement("div", {
      className: styles57.AlphaPicker,
      ref: this.setSliderHeight
    }, import_react140.default.createElement("div", {
      className: styles57.ColorLayer,
      style: {
        background
      }
    }), import_react140.default.createElement(Slidable, {
      draggerY,
      draggerX: 0,
      onChange: this.handleChange,
      onDraggerHeight: this.setDraggerHeight
    }));
  }
};
function alphaGradientForColor(color2) {
  const {
    red: red3,
    green: green3,
    blue: blue3
  } = hsbToRgb(color2);
  const rgb = `${red3}, ${green3}, ${blue3}`;
  return `linear-gradient(to top, rgba(${rgb}, 0) 18px, rgba(${rgb}, 1) calc(100% - 18px))`;
}

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/HuePicker.js
var import_react141 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/utilities.js
var VERTICAL_PADDING2 = 13;
function calculateDraggerY2(hue, sliderHeight, draggerHeight) {
  const offset = offsetForHue(hue, sliderHeight, draggerHeight);
  return clamp(offset, 0, sliderHeight);
}
function hueForDraggerY(y, sliderHeight) {
  const offsetY = clamp(y, 0, sliderHeight);
  return hueForOffset(offsetY, sliderHeight);
}
function hueForOffset(offset, sliderHeight) {
  const selectionHeight = offset - VERTICAL_PADDING2;
  const slidableArea = sliderHeight - VERTICAL_PADDING2 * 2;
  return clamp(selectionHeight / slidableArea * 360, 0, 360);
}
function offsetForHue(hue, sliderHeight, draggerHeight) {
  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING2);
  return clamp(hue / 360 * slidableArea + VERTICAL_PADDING2, 0, sliderHeight - draggerHeight);
}

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/HuePicker.js
var HuePicker = class extends import_react141.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      sliderHeight: 0,
      draggerHeight: 0
    };
    this.setSliderHeight = (node) => {
      if (node == null) {
        return;
      }
      this.setState({
        sliderHeight: node.clientHeight
      });
      if (true) {
        setTimeout(() => {
          this.setState({
            sliderHeight: node.clientHeight
          });
        }, 0);
      }
    };
    this.setDraggerHeight = (height2) => {
      this.setState({
        draggerHeight: height2
      });
    };
    this.handleChange = ({
      y
    }) => {
      const {
        onChange
      } = this.props;
      const {
        sliderHeight
      } = this.state;
      const hue = hueForDraggerY(y, sliderHeight);
      onChange(hue);
    };
  }
  render() {
    const {
      hue
    } = this.props;
    const {
      sliderHeight,
      draggerHeight
    } = this.state;
    const draggerY = calculateDraggerY2(hue, sliderHeight, draggerHeight);
    return import_react141.default.createElement("div", {
      className: styles57.HuePicker,
      ref: this.setSliderHeight
    }, import_react141.default.createElement(Slidable, {
      draggerY,
      draggerX: 0,
      onChange: this.handleChange,
      onDraggerHeight: this.setDraggerHeight
    }));
  }
};

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.js
var RESIZE_DEBOUNCE_TIME_MS = 200;
var ColorPicker = class extends import_react142.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      pickerSize: {
        width: 0,
        height: 0
      }
    };
    this.colorNode = null;
    this.handleResize = debounce(() => {
      const {
        colorNode
      } = this;
      if (colorNode == null) {
        return;
      }
      this.setState({
        pickerSize: {
          width: colorNode.clientWidth,
          height: colorNode.clientHeight
        }
      });
    }, RESIZE_DEBOUNCE_TIME_MS, {
      leading: true,
      trailing: true,
      maxWait: RESIZE_DEBOUNCE_TIME_MS
    });
    this.setColorNode = (node) => {
      this.colorNode = node;
    };
    this.handleHueChange = (hue) => {
      const {
        color: {
          brightness,
          saturation,
          alpha = 1
        },
        onChange
      } = this.props;
      onChange({
        hue,
        brightness,
        saturation,
        alpha
      });
    };
    this.handleAlphaChange = (alpha) => {
      const {
        color: {
          hue,
          brightness,
          saturation
        },
        onChange
      } = this.props;
      onChange({
        hue,
        brightness,
        saturation,
        alpha
      });
    };
    this.handleDraggerMove = ({
      x,
      y
    }) => {
      const {
        pickerSize
      } = this.state;
      const {
        color: {
          hue,
          alpha = 1
        },
        onChange
      } = this.props;
      const saturation = clamp(x / pickerSize.width, 0, 1);
      const brightness = clamp(1 - y / pickerSize.height, 0, 1);
      onChange({
        hue,
        saturation,
        brightness,
        alpha
      });
    };
    this.handlePickerDrag = (event) => {
      event.preventDefault();
    };
  }
  componentDidMount() {
    const {
      colorNode
    } = this;
    if (colorNode == null) {
      return;
    }
    this.setState({
      pickerSize: {
        width: colorNode.clientWidth,
        height: colorNode.clientHeight
      }
    });
    if (true) {
      setTimeout(() => {
        this.setState({
          pickerSize: {
            width: colorNode.clientWidth,
            height: colorNode.clientHeight
          }
        });
      }, 0);
    }
  }
  render() {
    const {
      id,
      color: color2,
      allowAlpha,
      fullWidth
    } = this.props;
    const {
      hue,
      saturation,
      brightness,
      alpha: providedAlpha
    } = color2;
    const {
      pickerSize
    } = this.state;
    const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;
    const {
      red: red3,
      green: green3,
      blue: blue3
    } = hsbToRgb({
      hue,
      saturation: 1,
      brightness: 1
    });
    const colorString = `rgba(${red3}, ${green3}, ${blue3}, ${alpha})`;
    const draggerX = clamp(saturation * pickerSize.width, 0, pickerSize.width);
    const draggerY = clamp(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);
    const alphaSliderMarkup = allowAlpha ? import_react142.default.createElement(AlphaPicker, {
      alpha,
      color: color2,
      onChange: this.handleAlphaChange
    }) : null;
    const className = classNames(styles57.ColorPicker, fullWidth && styles57.fullWidth);
    return import_react142.default.createElement("div", {
      className,
      id,
      onMouseDown: this.handlePickerDrag
    }, import_react142.default.createElement("div", {
      ref: this.setColorNode,
      className: styles57.MainColor
    }, import_react142.default.createElement("div", {
      className: styles57.ColorLayer,
      style: {
        backgroundColor: colorString
      }
    }), import_react142.default.createElement(Slidable, {
      onChange: this.handleDraggerMove,
      draggerX,
      draggerY
    })), import_react142.default.createElement(HuePicker, {
      hue,
      onChange: this.handleHueChange
    }), alphaSliderMarkup, import_react142.default.createElement(EventListener, {
      event: "resize",
      handler: this.handleResize
    }));
  }
};

// node_modules/@shopify/polaris/build/esm/components/HorizontalGrid/HorizontalGrid.js
var import_react143 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/HorizontalGrid/HorizontalGrid.scss.js
var styles58 = {
  "HorizontalGrid": "Polaris-HorizontalGrid"
};

// node_modules/@shopify/polaris/build/esm/components/HorizontalGrid/HorizontalGrid.js
function HorizontalGrid({
  children: children2,
  columns,
  gap,
  alignItems
}) {
  const style = {
    ...getResponsiveValue("horizontal-grid", "grid-template-columns", formatHorizontalGrid(columns)),
    ...getResponsiveProps("horizontal-grid", "gap", "space", gap),
    "--pc-horizontal-grid-align-items": alignItems
  };
  return import_react143.default.createElement("div", {
    className: styles58.HorizontalGrid,
    style: sanitizeCustomProperties(style)
  }, children2);
}
function formatHorizontalGrid(columns) {
  if (typeof columns === "object" && columns !== null && !Array.isArray(columns)) {
    return Object.fromEntries(Object.entries(columns).map(([breakpointAlias, breakpointHorizontalGrid]) => [breakpointAlias, getColumnValue(breakpointHorizontalGrid)]));
  }
  return getColumnValue(columns);
}
function getColumnValue(columns) {
  if (!columns)
    return void 0;
  if (typeof columns === "number" || !isNaN(Number(columns))) {
    return `repeat(${Number(columns)}, minmax(0, 1fr))`;
  }
  if (typeof columns === "string")
    return columns;
  return columns.map((column) => {
    switch (column) {
      case "oneThird":
        return "minmax(0, 1fr)";
      case "oneHalf":
        return "minmax(0, 1fr)";
      case "twoThirds":
        return "minmax(0, 2fr)";
    }
  }).join(" ");
}

// node_modules/@shopify/polaris/build/esm/components/ContextualSaveBar/ContextualSaveBar.js
var import_react146 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/frame/hooks.js
var import_react145 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/frame/context.js
var import_react144 = __toESM(require_react());
var FrameContext = (0, import_react144.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/frame/hooks.js
function useFrame() {
  const frame = (0, import_react145.useContext)(FrameContext);
  if (!frame) {
    throw new Error("No Frame context was provided. Your component must be wrapped in a <Frame> component. See https://polaris.shopify.com/components/frame for implementation instructions.");
  }
  return frame;
}

// node_modules/@shopify/polaris/build/esm/components/ContextualSaveBar/ContextualSaveBar.js
var ContextualSaveBar = (0, import_react146.memo)(function ContextualSaveBar2({
  message,
  saveAction,
  discardAction,
  alignContentFlush,
  fullWidth,
  contextControl,
  secondaryMenu
}) {
  const {
    setContextualSaveBar,
    removeContextualSaveBar
  } = useFrame();
  (0, import_react146.useEffect)(() => {
    setContextualSaveBar({
      message,
      saveAction,
      discardAction,
      alignContentFlush,
      fullWidth,
      contextControl,
      secondaryMenu
    });
  }, [message, saveAction, discardAction, alignContentFlush, setContextualSaveBar, fullWidth, contextControl, secondaryMenu]);
  (0, import_react146.useEffect)(() => {
    return removeContextualSaveBar;
  }, [removeContextualSaveBar]);
  return null;
});

// node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js
var import_react152 = __toESM(require_react());
var import_react_fast_compare = __toESM(require_react_fast_compare());

// node_modules/@shopify/polaris/build/esm/components/DataTable/utilities.js
function measureColumn(tableData) {
  return function(column, index) {
    const {
      firstVisibleColumnIndex,
      tableLeftVisibleEdge: tableStart,
      tableRightVisibleEdge: tableEnd
    } = tableData;
    const leftEdge = column.offsetLeft;
    const rightEdge = leftEdge + column.offsetWidth;
    const isVisibleLeft = isEdgeVisible(leftEdge, tableStart, tableEnd, "left");
    const isVisibleRight = isEdgeVisible(rightEdge, tableStart, tableEnd, "right");
    const isVisible = isVisibleLeft || isVisibleRight;
    const width2 = column.offsetWidth;
    if (isVisible) {
      tableData.firstVisibleColumnIndex = Math.min(firstVisibleColumnIndex, index);
    }
    return {
      leftEdge,
      rightEdge,
      isVisible,
      width: width2,
      index
    };
  };
}
function isEdgeVisible(position, start, end, edgeType) {
  const minVisiblePixels = 30;
  return position >= start + (edgeType === "left" ? 0 : minVisiblePixels) && position <= end - minVisiblePixels;
}
function getPrevAndCurrentColumns(tableData, columnData) {
  const {
    firstVisibleColumnIndex
  } = tableData;
  const previousColumnIndex = Math.max(firstVisibleColumnIndex - 1, 0);
  const previousColumn = columnData[previousColumnIndex];
  const currentColumn = columnData[firstVisibleColumnIndex];
  return {
    previousColumn,
    currentColumn
  };
}

// node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.scss.js
var styles59 = {
  "DataTable": "Polaris-DataTable",
  "condensed": "Polaris-DataTable--condensed",
  "Navigation": "Polaris-DataTable__Navigation",
  "IncreasedTableDensity": "Polaris-DataTable__IncreasedTableDensity",
  "Pip": "Polaris-DataTable__Pip",
  "Pip-visible": "Polaris-DataTable__Pip--visible",
  "ScrollContainer": "Polaris-DataTable__ScrollContainer",
  "Table": "Polaris-DataTable__Table",
  "TableRow": "Polaris-DataTable__TableRow",
  "Cell": "Polaris-DataTable__Cell",
  "ZebraStripingOnData": "Polaris-DataTable__ZebraStripingOnData",
  "RowCountIsEven": "Polaris-DataTable__RowCountIsEven",
  "ShowTotalsInFooter": "Polaris-DataTable__ShowTotalsInFooter",
  "Cell-separate": "Polaris-DataTable__Cell--separate",
  "Cell-firstColumn": "Polaris-DataTable__Cell--firstColumn",
  "Cell-numeric": "Polaris-DataTable__Cell--numeric",
  "Cell-truncated": "Polaris-DataTable__Cell--truncated",
  "Cell-header": "Polaris-DataTable__Cell--header",
  "Cell-sortable": "Polaris-DataTable__Cell--sortable",
  "Heading-left": "Polaris-DataTable__Heading--left",
  "Cell-verticalAlignTop": "Polaris-DataTable__Cell--verticalAlignTop",
  "Cell-verticalAlignBottom": "Polaris-DataTable__Cell--verticalAlignBottom",
  "Cell-verticalAlignMiddle": "Polaris-DataTable__Cell--verticalAlignMiddle",
  "Cell-verticalAlignBaseline": "Polaris-DataTable__Cell--verticalAlignBaseline",
  "hoverable": "Polaris-DataTable--hoverable",
  "Cell-hovered": "Polaris-DataTable__Cell--hovered",
  "Icon": "Polaris-DataTable__Icon",
  "Heading": "Polaris-DataTable__Heading",
  "StickyHeaderEnabled": "Polaris-DataTable__StickyHeaderEnabled",
  "StickyHeaderWrapper": "Polaris-DataTable__StickyHeaderWrapper",
  "Cell-sorted": "Polaris-DataTable__Cell--sorted",
  "Cell-total": "Polaris-DataTable__Cell--total",
  "ShowTotals": "Polaris-DataTable__ShowTotals",
  "Cell-total-footer": "Polaris-DataTable--cellTotalFooter",
  "Footer": "Polaris-DataTable__Footer",
  "StickyHeaderInner": "Polaris-DataTable__StickyHeaderInner",
  "StickyHeaderInner-isSticky": "Polaris-DataTable__StickyHeaderInner--isSticky",
  "StickyHeaderTable": "Polaris-DataTable__StickyHeaderTable",
  "FixedFirstColumn": "Polaris-DataTable__FixedFirstColumn",
  "StickyTableHeadingsRow": "Polaris-DataTable__StickyTableHeadingsRow",
  "TooltipContent": "Polaris-DataTable__TooltipContent"
};

// node_modules/@shopify/polaris/build/esm/components/DataTable/components/Cell/Cell.js
var import_react147 = __toESM(require_react());
function Cell({
  content,
  contentType,
  nthColumn,
  firstColumn,
  truncate,
  header,
  total,
  totalInFooter,
  sorted,
  sortable,
  sortDirection,
  inFixedNthColumn,
  verticalAlign = "top",
  defaultSortDirection = "ascending",
  onSort,
  colSpan,
  setRef = () => {
  },
  stickyHeadingCell = false,
  stickyCellWidth,
  hovered = false,
  handleFocus = () => {
  },
  hasFixedNthColumn = false,
  fixedCellVisible = false,
  firstColumnMinWidth,
  style,
  lastFixedFirstColumn
}) {
  const i18n = useI18n();
  const numeric = contentType === "numeric";
  const className = classNames(styles59.Cell, styles59[`Cell-${variationName("verticalAlign", verticalAlign)}`], firstColumn && styles59["Cell-firstColumn"], truncate && styles59["Cell-truncated"], header && styles59["Cell-header"], total && styles59["Cell-total"], totalInFooter && styles59["Cell-total-footer"], numeric && styles59["Cell-numeric"], sortable && styles59["Cell-sortable"], sorted && styles59["Cell-sorted"], stickyHeadingCell && styles59.StickyHeaderCell, hovered && styles59["Cell-hovered"], lastFixedFirstColumn && inFixedNthColumn && fixedCellVisible && styles59["Cell-separate"], nthColumn && inFixedNthColumn && stickyHeadingCell && styles59.FixedFirstColumn);
  const headerClassName = classNames(header && styles59.Heading, header && contentType === "text" && styles59["Heading-left"]);
  const iconClassName = classNames(sortable && styles59.Icon);
  const direction = sorted && sortDirection ? sortDirection : defaultSortDirection;
  const source = direction === "descending" ? SvgSortDescendingMajor : SvgSortAscendingMajor;
  const oppositeDirection = sortDirection === "ascending" ? "descending" : "ascending";
  const sortAccessibilityLabel = i18n.translate("Polaris.DataTable.sortAccessibilityLabel", {
    direction: sorted ? oppositeDirection : direction
  });
  const iconMarkup = import_react147.default.createElement("span", {
    className: iconClassName
  }, import_react147.default.createElement(Icon, {
    source,
    accessibilityLabel: sortAccessibilityLabel
  }));
  const focusable = !(stickyHeadingCell && hasFixedNthColumn && nthColumn && !inFixedNthColumn);
  const sortableHeadingContent = import_react147.default.createElement("button", {
    className: headerClassName,
    onClick: onSort,
    onFocus: handleFocus,
    tabIndex: focusable ? 0 : -1
  }, iconMarkup, content);
  const columnHeadingContent = sortable ? sortableHeadingContent : content;
  const colSpanProp = colSpan && colSpan > 1 ? {
    colSpan
  } : {};
  const minWidthStyles = nthColumn && firstColumnMinWidth ? {
    minWidth: firstColumnMinWidth
  } : {
    minWidth: stickyCellWidth
  };
  const stickyHeading = import_react147.default.createElement("th", Object.assign({
    ref: setRef
  }, headerCell.props, colSpanProp, {
    className,
    "aria-sort": sortDirection,
    style: {
      ...style,
      ...minWidthStyles
    },
    "data-index-table-sticky-heading": true
  }), columnHeadingContent);
  const headingMarkup = header ? import_react147.default.createElement("th", Object.assign({}, headerCell.props, {
    "aria-sort": sortDirection
  }, colSpanProp, {
    ref: setRef,
    className,
    scope: "col",
    style: {
      ...minWidthStyles
    }
  }), columnHeadingContent) : import_react147.default.createElement("th", Object.assign({}, colSpanProp, {
    ref: setRef,
    className,
    scope: "row",
    style: {
      ...minWidthStyles
    }
  }), truncate ? import_react147.default.createElement(TruncatedText, {
    className: styles59.TooltipContent
  }, content) : content);
  const cellMarkup = header || firstColumn || nthColumn ? headingMarkup : import_react147.default.createElement("td", Object.assign({
    className
  }, colSpanProp), content);
  return stickyHeadingCell ? stickyHeading : cellMarkup;
}
var TruncatedText = ({
  children: children2,
  className = ""
}) => {
  const textRef = (0, import_react147.useRef)(null);
  const {
    current
  } = textRef;
  const text2 = import_react147.default.createElement("span", {
    ref: textRef,
    className
  }, children2);
  return (current == null ? void 0 : current.scrollWidth) > (current == null ? void 0 : current.offsetWidth) ? import_react147.default.createElement(Tooltip, {
    content: textRef.current.innerText
  }, text2) : text2;
};

// node_modules/@shopify/polaris/build/esm/components/AfterInitialMount/AfterInitialMount.js
var import_react148 = __toESM(require_react());
function AfterInitialMount({
  children: children2,
  onMount,
  fallback = null
}) {
  const isMounted = useIsAfterInitialMount();
  const content = isMounted ? children2 : fallback;
  (0, import_react148.useEffect)(() => {
    if (isMounted && onMount) {
      onMount();
    }
  }, [isMounted, onMount]);
  return import_react148.default.createElement(import_react148.default.Fragment, null, content);
}

// node_modules/@shopify/polaris/build/esm/components/Sticky/Sticky.js
var import_react150 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/hooks.js
var import_react149 = __toESM(require_react());
function useStickyManager() {
  const stickyManager = (0, import_react149.useContext)(StickyManagerContext);
  if (!stickyManager) {
    throw new MissingAppProviderError("No StickyManager was provided.");
  }
  return stickyManager;
}

// node_modules/@shopify/polaris/build/esm/components/Sticky/Sticky.js
var StickyInner = class extends import_react150.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      isSticky: false,
      style: {}
    };
    this.placeHolderNode = null;
    this.stickyNode = null;
    this.setPlaceHolderNode = (node) => {
      this.placeHolderNode = node;
    };
    this.setStickyNode = (node) => {
      this.stickyNode = node;
    };
    this.handlePositioning = (stick, top = 0, left = 0, width2 = 0) => {
      const {
        isSticky
      } = this.state;
      if (stick && !isSticky || !stick && isSticky) {
        this.adjustPlaceHolderNode(stick);
        this.setState({
          isSticky: !isSticky
        }, () => {
          if (this.props.onStickyChange == null) {
            return null;
          }
          this.props.onStickyChange(!isSticky);
          if (this.props.boundingElement == null) {
            return null;
          }
          this.props.boundingElement.toggleAttribute("data-sticky-active");
        });
      }
      const style = stick ? {
        position: "fixed",
        top,
        left,
        width: width2
      } : {};
      this.setState({
        style
      });
    };
    this.adjustPlaceHolderNode = (add) => {
      if (this.placeHolderNode && this.stickyNode) {
        this.placeHolderNode.style.paddingBottom = add ? `${getRectForNode(this.stickyNode).height}px` : "0px";
      }
    };
  }
  componentDidMount() {
    const {
      boundingElement,
      offset = false,
      disableWhenStacked = false,
      stickyManager
    } = this.props;
    if (!this.stickyNode || !this.placeHolderNode)
      return;
    stickyManager.registerStickyItem({
      stickyNode: this.stickyNode,
      placeHolderNode: this.placeHolderNode,
      handlePositioning: this.handlePositioning,
      offset,
      boundingElement,
      disableWhenStacked
    });
  }
  componentWillUnmount() {
    const {
      stickyManager
    } = this.props;
    if (!this.stickyNode)
      return;
    stickyManager.unregisterStickyItem(this.stickyNode);
  }
  render() {
    const {
      style,
      isSticky
    } = this.state;
    const {
      children: children2
    } = this.props;
    const childrenContent = isFunction(children2) ? children2(isSticky) : children2;
    return import_react150.default.createElement("div", null, import_react150.default.createElement("div", {
      ref: this.setPlaceHolderNode
    }), import_react150.default.createElement("div", {
      ref: this.setStickyNode,
      style
    }, childrenContent));
  }
};
function isFunction(arg) {
  return typeof arg === "function";
}
function Sticky(props) {
  const stickyManager = useStickyManager();
  return import_react150.default.createElement(StickyInner, Object.assign({}, props, {
    stickyManager
  }));
}

// node_modules/@shopify/polaris/build/esm/components/DataTable/components/Navigation/Navigation.js
var import_react151 = __toESM(require_react());
function Navigation({
  columnVisibilityData,
  isScrolledFarthestLeft,
  isScrolledFarthestRight,
  navigateTableLeft,
  navigateTableRight,
  fixedFirstColumns,
  setRef = () => {
  }
}) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const pipMarkup = columnVisibilityData.map((column, index) => {
    if (index < fixedFirstColumns)
      return;
    const className = classNames(styles59.Pip, column.isVisible && styles59["Pip-visible"]);
    return import_react151.default.createElement("div", {
      className,
      key: `pip-${index}`
    });
  });
  const leftA11yLabel = i18n.translate("Polaris.DataTable.navAccessibilityLabel", {
    direction: "left"
  });
  const rightA11yLabel = i18n.translate("Polaris.DataTable.navAccessibilityLabel", {
    direction: "right"
  });
  return import_react151.default.createElement("div", {
    className: styles59.Navigation,
    ref: setRef
  }, import_react151.default.createElement(Button, {
    plain: true,
    primary: polarisSummerEditions2023,
    icon: SvgChevronLeftMinor,
    disabled: isScrolledFarthestLeft,
    accessibilityLabel: leftA11yLabel,
    onClick: navigateTableLeft
  }), pipMarkup, import_react151.default.createElement(Button, {
    plain: true,
    primary: polarisSummerEditions2023,
    icon: SvgChevronRightMinor,
    disabled: isScrolledFarthestRight,
    accessibilityLabel: rightA11yLabel,
    onClick: navigateTableRight
  }));
}

// node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js
var getRowClientHeights = (rows) => {
  const heights = [];
  if (!rows) {
    return heights;
  }
  rows.forEach((row) => {
    heights.push(row.clientHeight);
  });
  return heights;
};
var DataTableInner = class extends import_react152.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      condensed: false,
      columnVisibilityData: [],
      isScrolledFarthestLeft: true,
      isScrolledFarthestRight: false,
      rowHovered: void 0
    };
    this.dataTable = (0, import_react152.createRef)();
    this.scrollContainer = (0, import_react152.createRef)();
    this.table = (0, import_react152.createRef)();
    this.stickyTable = (0, import_react152.createRef)();
    this.stickyNav = null;
    this.headerNav = null;
    this.tableHeadings = [];
    this.stickyHeadings = [];
    this.tableHeadingWidths = [];
    this.stickyHeaderActive = false;
    this.scrollStopTimer = null;
    this.handleResize = debounce(() => {
      const {
        table: {
          current: table
        },
        scrollContainer: {
          current: scrollContainer
        }
      } = this;
      let condensed = false;
      if (table && scrollContainer) {
        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;
      }
      this.setState({
        condensed,
        ...this.calculateColumnVisibilityData(condensed)
      });
    });
    this.setCellRef = ({
      ref,
      index,
      inStickyHeader
    }) => {
      if (ref == null) {
        return;
      }
      if (inStickyHeader) {
        this.stickyHeadings[index] = ref;
        const button = ref.querySelector("button");
        if (button == null) {
          return;
        }
        button.addEventListener("focus", this.handleHeaderButtonFocus);
      } else {
        this.tableHeadings[index] = ref;
        this.tableHeadingWidths[index] = ref.clientWidth;
      }
    };
    this.changeHeadingFocus = () => {
      const {
        tableHeadings,
        stickyHeadings,
        stickyNav,
        headerNav
      } = this;
      const stickyFocusedItemIndex = stickyHeadings.findIndex((item) => {
        var _a;
        return item === ((_a = document.activeElement) == null ? void 0 : _a.parentElement);
      });
      const tableFocusedItemIndex = tableHeadings.findIndex((item) => {
        var _a;
        return item === ((_a = document.activeElement) == null ? void 0 : _a.parentElement);
      });
      const arrowsInStickyNav = stickyNav == null ? void 0 : stickyNav.querySelectorAll("button");
      const arrowsInHeaderNav = headerNav == null ? void 0 : headerNav.querySelectorAll("button");
      let stickyFocusedNavIndex = -1;
      arrowsInStickyNav == null ? void 0 : arrowsInStickyNav.forEach((item, index) => {
        if (item === document.activeElement) {
          stickyFocusedNavIndex = index;
        }
      });
      let headerFocusedNavIndex = -1;
      arrowsInHeaderNav == null ? void 0 : arrowsInHeaderNav.forEach((item, index) => {
        if (item === document.activeElement) {
          headerFocusedNavIndex = index;
        }
      });
      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {
        return null;
      }
      let button;
      if (stickyFocusedItemIndex >= 0) {
        button = tableHeadings[stickyFocusedItemIndex].querySelector("button");
      } else if (tableFocusedItemIndex >= 0) {
        button = stickyHeadings[tableFocusedItemIndex].querySelector("button");
      }
      if (stickyFocusedNavIndex >= 0) {
        button = arrowsInHeaderNav == null ? void 0 : arrowsInHeaderNav[stickyFocusedNavIndex];
      } else if (headerFocusedNavIndex >= 0) {
        button = arrowsInStickyNav == null ? void 0 : arrowsInStickyNav[headerFocusedNavIndex];
      }
      if (button == null) {
        return null;
      }
      button.style.visibility = "visible";
      button.focus();
      button.style.removeProperty("visibility");
    };
    this.calculateColumnVisibilityData = (condensed) => {
      const fixedFirstColumns = this.fixedFirstColumns();
      const {
        table: {
          current: table
        },
        scrollContainer: {
          current: scrollContainer
        },
        dataTable: {
          current: dataTable
        }
      } = this;
      const {
        stickyHeader
      } = this.props;
      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {
        const headerCells = table.querySelectorAll(headerCell.selector);
        const rightMostHeader = headerCells[fixedFirstColumns - 1];
        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;
        if (headerCells.length > 0) {
          const firstVisibleColumnIndex = headerCells.length - 1;
          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;
          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;
          const tableData = {
            firstVisibleColumnIndex,
            tableLeftVisibleEdge,
            tableRightVisibleEdge
          };
          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));
          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];
          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;
          return {
            columnVisibilityData,
            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),
            isScrolledFarthestLeft,
            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge
          };
        }
      }
      return {
        columnVisibilityData: [],
        previousColumn: void 0,
        currentColumn: void 0
      };
    };
    this.handleHeaderButtonFocus = (event) => {
      var _a;
      const fixedFirstColumns = this.fixedFirstColumns();
      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {
        return;
      }
      const target = event.target;
      const currentCell = target.parentNode;
      const tableScrollLeft = this.scrollContainer.current.scrollLeft;
      const tableViewableWidth = this.scrollContainer.current.offsetWidth;
      const tableRightEdge = tableScrollLeft + tableViewableWidth;
      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? (_a = this.state.columnVisibilityData[fixedFirstColumns]) == null ? void 0 : _a.rightEdge : 0;
      const currentColumnLeftEdge = currentCell.offsetLeft;
      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;
      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {
        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;
      }
      if (currentColumnRightEdge > tableRightEdge) {
        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;
      }
    };
    this.stickyHeaderScrolling = () => {
      const {
        current: stickyTable
      } = this.stickyTable;
      const {
        current: scrollContainer
      } = this.scrollContainer;
      if (stickyTable == null || scrollContainer == null) {
        return;
      }
      stickyTable.scrollLeft = scrollContainer.scrollLeft;
    };
    this.scrollListener = () => {
      var _a;
      if (this.scrollStopTimer) {
        clearTimeout(this.scrollStopTimer);
      }
      this.scrollStopTimer = setTimeout(() => {
        this.setState((prevState) => ({
          ...this.calculateColumnVisibilityData(prevState.condensed)
        }));
      }, 100);
      this.setState({
        isScrolledFarthestLeft: ((_a = this.scrollContainer.current) == null ? void 0 : _a.scrollLeft) === 0
      });
      if (this.props.stickyHeader && this.stickyHeaderActive) {
        this.stickyHeaderScrolling();
      }
    };
    this.handleHover = (row) => () => {
      this.setState({
        rowHovered: row
      });
    };
    this.handleFocus = (event) => {
      var _a;
      const fixedFirstColumns = this.fixedFirstColumns();
      if (this.scrollContainer.current == null || event.target == null) {
        return;
      }
      const currentCell = event.target.parentNode;
      const fixedNthColumn = this.props;
      const nthColumnWidth = fixedNthColumn ? (_a = this.state.columnVisibilityData[fixedFirstColumns]) == null ? void 0 : _a.rightEdge : 0;
      const currentColumnLeftEdge = currentCell.offsetLeft;
      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;
      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {
        this.scrollContainer.current.scrollLeft = desiredScrollLeft;
      }
    };
    this.navigateTable = (direction) => {
      var _a;
      const fixedFirstColumns = this.fixedFirstColumns();
      const {
        currentColumn,
        previousColumn
      } = this.state;
      const nthColumnWidth = (_a = this.state.columnVisibilityData[fixedFirstColumns - 1]) == null ? void 0 : _a.rightEdge;
      if (!currentColumn || !previousColumn) {
        return;
      }
      let prevWidths = 0;
      for (let index = 0; index < currentColumn.index; index++) {
        prevWidths += this.state.columnVisibilityData[index].width;
      }
      const {
        current: scrollContainer
      } = this.scrollContainer;
      const handleScroll = () => {
        let newScrollLeft = 0;
        if (fixedFirstColumns) {
          newScrollLeft = direction === "right" ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;
        } else {
          newScrollLeft = direction === "right" ? currentColumn.rightEdge : previousColumn.leftEdge;
        }
        if (scrollContainer) {
          scrollContainer.scrollLeft = newScrollLeft;
          requestAnimationFrame(() => {
            this.setState((prevState) => ({
              ...this.calculateColumnVisibilityData(prevState.condensed)
            }));
          });
        }
      };
      return handleScroll;
    };
    this.renderHeading = ({
      heading,
      headingIndex,
      inFixedNthColumn,
      inStickyHeader
    }) => {
      var _a;
      const {
        sortable,
        truncate = false,
        columnContentTypes,
        defaultSortDirection,
        initialSortColumnIndex = 0,
        verticalAlign,
        firstColumnMinWidth
      } = this.props;
      const fixedFirstColumns = this.fixedFirstColumns();
      const {
        sortDirection = defaultSortDirection,
        sortedColumnIndex = initialSortColumnIndex,
        isScrolledFarthestLeft
      } = this.state;
      let sortableHeadingProps;
      const headingCellId = `heading-cell-${headingIndex}`;
      const stickyHeaderId = `stickyheader-${headingIndex}`;
      const id = inStickyHeader ? stickyHeaderId : headingCellId;
      if (sortable) {
        const isSortable = sortable[headingIndex];
        const isSorted = isSortable && sortedColumnIndex === headingIndex;
        const direction = isSorted ? sortDirection : "none";
        sortableHeadingProps = {
          defaultSortDirection,
          sorted: isSorted,
          sortable: isSortable,
          sortDirection: direction,
          onSort: this.defaultOnSort(headingIndex),
          fixedNthColumn: fixedFirstColumns,
          inFixedNthColumn: fixedFirstColumns
        };
      }
      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : void 0;
      const fixedCellVisible = !isScrolledFarthestLeft;
      const cellProps = {
        header: true,
        stickyHeadingCell: inStickyHeader,
        content: heading,
        contentType: columnContentTypes[headingIndex],
        nthColumn: headingIndex < fixedFirstColumns,
        fixedFirstColumns,
        truncate,
        headingIndex,
        ...sortableHeadingProps,
        verticalAlign,
        handleFocus: this.handleFocus,
        stickyCellWidth,
        fixedCellVisible,
        firstColumnMinWidth
      };
      if (inFixedNthColumn && inStickyHeader) {
        return [import_react152.default.createElement(Cell, Object.assign({
          key: id
        }, cellProps, {
          setRef: (ref) => {
            this.setCellRef({
              ref,
              index: headingIndex,
              inStickyHeader
            });
          },
          inFixedNthColumn: false
        })), import_react152.default.createElement(Cell, Object.assign({
          key: `${id}-sticky`
        }, cellProps, {
          setRef: (ref) => {
            this.setCellRef({
              ref,
              index: headingIndex,
              inStickyHeader
            });
          },
          inFixedNthColumn: Boolean(fixedFirstColumns),
          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,
          style: {
            left: (_a = this.state.columnVisibilityData[headingIndex]) == null ? void 0 : _a.leftEdge
          }
        }))];
      }
      return import_react152.default.createElement(Cell, Object.assign({
        key: id
      }, cellProps, {
        setRef: (ref) => {
          this.setCellRef({
            ref,
            index: headingIndex,
            inStickyHeader
          });
        },
        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,
        inFixedNthColumn
      }));
    };
    this.totalsRowHeading = () => {
      const {
        i18n,
        totals,
        totalsName
      } = this.props;
      const totalsLabel = totalsName ? totalsName : {
        singular: i18n.translate("Polaris.DataTable.totalRowHeading"),
        plural: i18n.translate("Polaris.DataTable.totalsRowHeading")
      };
      return totals && totals.filter((total) => total !== "").length > 1 ? totalsLabel.plural : totalsLabel.singular;
    };
    this.renderTotals = ({
      total,
      index
    }) => {
      const fixedFirstColumns = this.fixedFirstColumns();
      const id = `totals-cell-${index}`;
      const {
        truncate = false,
        verticalAlign,
        columnContentTypes
      } = this.props;
      let content;
      let contentType;
      if (index === 0) {
        content = this.totalsRowHeading();
      }
      if (total !== "" && index > 0) {
        contentType = columnContentTypes[index];
        content = total;
      }
      const totalInFooter = this.props.showTotalsInFooter;
      return import_react152.default.createElement(Cell, {
        total: true,
        totalInFooter,
        nthColumn: index <= fixedFirstColumns - 1,
        firstColumn: index === 0,
        key: id,
        content,
        contentType,
        truncate,
        verticalAlign
      });
    };
    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {
      const fixedFirstColumns = this.fixedFirstColumns();
      if (fixedFirstColumns) {
        return 1;
      }
      const rowLen = rowLength ? rowLength : 1;
      const colLen = headingsLength ? headingsLength : contentTypesLength;
      const colSpan = Math.floor(colLen / rowLen);
      const remainder = colLen % rowLen;
      return cellIndex === 0 ? colSpan + remainder : colSpan;
    };
    this.defaultRenderRow = ({
      row,
      index,
      inFixedNthColumn,
      rowHeights
    }) => {
      const {
        columnContentTypes,
        truncate = false,
        verticalAlign,
        hoverable = true,
        headings
      } = this.props;
      const {
        condensed
      } = this.state;
      const fixedFirstColumns = this.fixedFirstColumns();
      const className = classNames(styles59.TableRow, hoverable && styles59.hoverable);
      return import_react152.default.createElement("tr", {
        key: `row-${index}`,
        className,
        onMouseEnter: this.handleHover(index),
        onMouseLeave: this.handleHover()
      }, row.map((content, cellIndex) => {
        const hovered = index === this.state.rowHovered;
        const id = `cell-${cellIndex}-row-${index}`;
        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);
        return import_react152.default.createElement(Cell, {
          key: id,
          content,
          contentType: columnContentTypes[cellIndex],
          nthColumn: cellIndex <= fixedFirstColumns - 1,
          firstColumn: cellIndex === 0,
          truncate,
          verticalAlign,
          colSpan,
          hovered,
          style: rowHeights ? {
            height: `${rowHeights[index]}px`
          } : {},
          inFixedNthColumn: condensed && inFixedNthColumn
        });
      }));
    };
    this.defaultOnSort = (headingIndex) => {
      const {
        onSort,
        defaultSortDirection = "ascending",
        initialSortColumnIndex
      } = this.props;
      const {
        sortDirection = defaultSortDirection,
        sortedColumnIndex = initialSortColumnIndex
      } = this.state;
      let newSortDirection = defaultSortDirection;
      if (sortedColumnIndex === headingIndex) {
        newSortDirection = sortDirection === "ascending" ? "descending" : "ascending";
      }
      const handleSort = () => {
        this.setState({
          sortDirection: newSortDirection,
          sortedColumnIndex: headingIndex
        }, () => {
          if (onSort) {
            onSort(headingIndex, newSortDirection);
          }
        });
      };
      return handleSort;
    };
  }
  componentDidMount() {
    if (true) {
      setTimeout(() => {
        this.handleResize();
      }, 10);
    } else {
      this.handleResize();
    }
  }
  componentDidUpdate(prevProps) {
    if ((0, import_react_fast_compare.default)(prevProps, this.props)) {
      return;
    }
    this.handleResize();
  }
  componentWillUnmount() {
    this.handleResize.cancel();
  }
  render() {
    var _a, _b, _c;
    const {
      headings,
      totals,
      showTotalsInFooter,
      rows,
      footerContent,
      hideScrollIndicator = false,
      increasedTableDensity = false,
      hasZebraStripingOnData = false,
      stickyHeader = false,
      hasFixedFirstColumn: fixedFirstColumn = false
    } = this.props;
    const {
      condensed,
      columnVisibilityData,
      isScrolledFarthestLeft,
      isScrolledFarthestRight
    } = this.state;
    if (fixedFirstColumn && true) {
      console.warn("Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.");
    }
    const fixedFirstColumns = this.fixedFirstColumns();
    const rowCountIsEven = rows.length % 2 === 0;
    const className = classNames(styles59.DataTable, condensed && styles59.condensed, totals && styles59.ShowTotals, showTotalsInFooter && styles59.ShowTotalsInFooter, hasZebraStripingOnData && styles59.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles59.RowCountIsEven);
    const wrapperClassName = classNames(styles59.TableWrapper, condensed && styles59.condensed, increasedTableDensity && styles59.IncreasedTableDensity, stickyHeader && styles59.StickyHeaderEnabled);
    const headingMarkup = import_react152.default.createElement("tr", null, headings.map((heading, index) => this.renderHeading({
      heading,
      headingIndex: index,
      inFixedNthColumn: false,
      inStickyHeader: false
    })));
    const totalsMarkup = totals ? import_react152.default.createElement("tr", null, totals.map((total, index) => this.renderTotals({
      total,
      index
    }))) : null;
    const nthColumns = rows.map((row) => row.slice(0, fixedFirstColumns));
    const nthHeadings = headings.slice(0, fixedFirstColumns);
    const nthTotals = totals == null ? void 0 : totals.slice(0, fixedFirstColumns);
    const tableHeaderRows = (_a = this.table.current) == null ? void 0 : _a.children[0].childNodes;
    const tableBodyRows = (_b = this.table.current) == null ? void 0 : _b.children[1].childNodes;
    const headerRowHeights = getRowClientHeights(tableHeaderRows);
    const bodyRowHeights = getRowClientHeights(tableBodyRows);
    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && import_react152.default.createElement("table", {
      className: classNames(styles59.FixedFirstColumn, !isScrolledFarthestLeft && styles59.separate),
      style: {
        width: `${(_c = columnVisibilityData[fixedFirstColumns - 1]) == null ? void 0 : _c.rightEdge}px`
      }
    }, import_react152.default.createElement("thead", null, import_react152.default.createElement("tr", {
      style: {
        height: `${headerRowHeights[0]}px`
      }
    }, nthHeadings.map((heading, index) => this.renderHeading({
      heading,
      headingIndex: index,
      inFixedNthColumn: true,
      inStickyHeader: false
    }))), totals && !showTotalsInFooter && import_react152.default.createElement("tr", {
      style: {
        height: `${headerRowHeights[1]}px`
      }
    }, nthTotals == null ? void 0 : nthTotals.map((total, index) => this.renderTotals({
      total,
      index
    })))), import_react152.default.createElement("tbody", null, nthColumns.map((row, index) => this.defaultRenderRow({
      row,
      index,
      inFixedNthColumn: true,
      rowHeights: bodyRowHeights
    }))), totals && showTotalsInFooter && import_react152.default.createElement("tfoot", null, import_react152.default.createElement("tr", null, nthTotals == null ? void 0 : nthTotals.map((total, index) => this.renderTotals({
      total,
      index
    })))));
    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({
      row,
      index,
      inFixedNthColumn: false
    }));
    const footerMarkup = footerContent ? import_react152.default.createElement("div", {
      className: styles59.Footer
    }, footerContent) : null;
    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;
    const footerTotalsMarkup = showTotalsInFooter ? import_react152.default.createElement("tfoot", null, totalsMarkup) : null;
    const navigationMarkup = (location) => hideScrollIndicator ? null : import_react152.default.createElement(Navigation, {
      columnVisibilityData,
      isScrolledFarthestLeft,
      isScrolledFarthestRight,
      navigateTableLeft: this.navigateTable("left"),
      navigateTableRight: this.navigateTable("right"),
      fixedFirstColumns,
      setRef: (ref) => {
        if (location === "header") {
          this.headerNav = ref;
        } else if (location === "sticky") {
          this.stickyNav = ref;
        }
      }
    });
    const stickyHeaderMarkup = stickyHeader ? import_react152.default.createElement(AfterInitialMount, null, import_react152.default.createElement("div", {
      className: styles59.StickyHeaderWrapper,
      role: "presentation"
    }, import_react152.default.createElement(Sticky, {
      boundingElement: this.dataTable.current,
      onStickyChange: (isSticky) => {
        this.changeHeadingFocus();
        this.stickyHeaderActive = isSticky;
      }
    }, (isSticky) => {
      const stickyHeaderInnerClassNames = classNames(styles59.StickyHeaderInner, isSticky && styles59["StickyHeaderInner-isSticky"]);
      const stickyHeaderTableClassNames = classNames(styles59.StickyHeaderTable, !isScrolledFarthestLeft && styles59.separate);
      return import_react152.default.createElement("div", {
        className: stickyHeaderInnerClassNames
      }, import_react152.default.createElement("div", null, navigationMarkup("sticky")), import_react152.default.createElement("table", {
        className: stickyHeaderTableClassNames,
        ref: this.stickyTable
      }, import_react152.default.createElement("thead", null, import_react152.default.createElement("tr", {
        className: styles59.StickyTableHeadingsRow
      }, headings.map((heading, index) => {
        return this.renderHeading({
          heading,
          headingIndex: index,
          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),
          inStickyHeader: true
        });
      })))));
    }))) : null;
    return import_react152.default.createElement("div", {
      className: wrapperClassName,
      ref: this.dataTable
    }, stickyHeaderMarkup, navigationMarkup("header"), import_react152.default.createElement("div", {
      className
    }, import_react152.default.createElement("div", {
      className: styles59.ScrollContainer,
      ref: this.scrollContainer
    }, import_react152.default.createElement(EventListener, {
      event: "resize",
      handler: this.handleResize
    }), import_react152.default.createElement(EventListener, {
      capture: true,
      passive: true,
      event: "scroll",
      handler: this.scrollListener
    }), fixedNthColumnMarkup, import_react152.default.createElement("table", {
      className: styles59.Table,
      ref: this.table
    }, import_react152.default.createElement("thead", null, headingMarkup, headerTotalsMarkup), import_react152.default.createElement("tbody", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));
  }
  fixedFirstColumns() {
    const {
      hasFixedFirstColumn,
      fixedFirstColumns = 0,
      headings
    } = this.props;
    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;
    if (numberOfFixedFirstColumns >= headings.length) {
      return 0;
    }
    return numberOfFixedFirstColumns;
  }
};
function DataTable(props) {
  const i18n = useI18n();
  return import_react152.default.createElement(DataTableInner, Object.assign({}, props, {
    i18n
  }));
}

// node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.js
var import_react156 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/dates.js
var WEEK_LENGTH = 7;
function getWeeksForMonth(month, year, weekStartsOn = 0) {
  const firstOfMonth = new Date(year, month, 1);
  const firstDayOfWeek = firstOfMonth.getDay();
  const weeks = [[]];
  let currentWeek = weeks[0];
  let currentDate = firstOfMonth;
  const orderedWeekday = getOrderedWeekdays(weekStartsOn);
  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {
    currentWeek.push(null);
  }
  while (currentDate.getMonth() === month) {
    if (currentWeek.length === WEEK_LENGTH) {
      currentWeek = [];
      weeks.push(currentWeek);
    }
    currentWeek.push(currentDate);
    currentDate = new Date(year, month, currentDate.getDate() + 1);
  }
  while (currentWeek.length < 7) {
    currentWeek.push(null);
  }
  return weeks;
}
function dateIsInRange(day, range) {
  if (day == null) {
    return false;
  }
  const {
    start,
    end
  } = range;
  return Boolean(start && day > start && end && day < end);
}
function dateIsSelected(day, range) {
  if (day == null) {
    return false;
  }
  const {
    start,
    end
  } = range;
  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));
}
function isSameDay(day1, day2) {
  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();
}
function getNewRange(range, selected) {
  if (range == null) {
    return {
      start: selected,
      end: selected
    };
  }
  const {
    start,
    end
  } = range;
  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {
    return {
      start: selected,
      end: selected
    };
  }
  if (start) {
    if (isDateBefore(selected, start)) {
      return {
        start: selected,
        end: selected
      };
    }
    return {
      start,
      end: selected
    };
  }
  if (end) {
    if (isDateBefore(selected, end)) {
      return {
        start: selected,
        end
      };
    }
    return {
      start: start || end,
      end: selected
    };
  }
  return {
    start: selected,
    end: selected
  };
}
function getNextDisplayMonth(month) {
  if (month === 11) {
    return 0;
  }
  return month + 1;
}
function getNextDisplayYear(month, year) {
  if (month === 11) {
    return year + 1;
  }
  return year;
}
function getPreviousDisplayMonth(month) {
  if (month === 0) {
    return 11;
  }
  return month - 1;
}
function getPreviousDisplayYear(month, year) {
  if (month === 0) {
    return year - 1;
  }
  return year;
}
function isDateAfter(date, dateToCompare) {
  return date.getTime() > dateToCompare.getTime();
}
function isDateBefore(date, dateToCompare) {
  return date.getTime() < dateToCompare.getTime();
}
function isDateDisabled(date, datesToCompare) {
  return datesToCompare.some((dateToCompare) => {
    return date.getTime() === dateToCompare.getTime();
  });
}
var WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];
function getOrderedWeekdays(weekStartsOn) {
  const weekDays = [...WEEKDAYS];
  const restOfDays = weekDays.splice(weekStartsOn);
  return [...restOfDays, ...weekDays];
}

// node_modules/@shopify/polaris/build/esm/components/DatePicker/utilities.js
function monthName(month) {
  switch (month) {
    case 0:
      return "january";
    case 1:
      return "february";
    case 2:
      return "march";
    case 3:
      return "april";
    case 4:
      return "may";
    case 5:
      return "june";
    case 6:
      return "july";
    case 7:
      return "august";
    case 8:
      return "september";
    case 9:
      return "october";
    case 10:
      return "november";
    case 11:
      return "december";
  }
}
function weekdayName(weekday) {
  switch (weekday) {
    case 0:
      return "sunday";
    case 1:
      return "monday";
    case 2:
      return "tuesday";
    case 3:
      return "wednesday";
    case 4:
      return "thursday";
    case 5:
      return "friday";
    case 6:
      return "saturday";
  }
}

// node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.scss.js
var styles60 = {
  "DatePicker": "Polaris-DatePicker",
  "MonthLayout": "Polaris-DatePicker__MonthLayout",
  "MonthContainer": "Polaris-DatePicker__MonthContainer",
  "Month": "Polaris-DatePicker__Month",
  "Month-current": "Polaris-DatePicker__Month--current",
  "DayCell": "Polaris-DatePicker__DayCell",
  "DayCell-inRange": "Polaris-DatePicker__DayCell--inRange",
  "Day": "Polaris-DatePicker__Day",
  "Day-today": "Polaris-DatePicker__Day--today",
  "Day-inRange": "Polaris-DatePicker__Day--inRange",
  "Day-selected": "Polaris-DatePicker__Day--selected",
  "Day-disabled": "Polaris-DatePicker__Day--disabled",
  "EmptyDayCell": "Polaris-DatePicker__EmptyDayCell",
  "Weekday": "Polaris-DatePicker__Weekday",
  "Weekday-current": "Polaris-DatePicker__Weekday--current",
  "Header": "Polaris-DatePicker__Header",
  "Title": "Polaris-DatePicker__Title",
  "Day-firstInRange": "Polaris-DatePicker__Day--firstInRange",
  "Day-hasRange": "Polaris-DatePicker__Day--hasRange",
  "Day-hoverRight": "Polaris-DatePicker__Day--hoverRight",
  "Day-lastInRange": "Polaris-DatePicker__Day--lastInRange",
  "Week": "Polaris-DatePicker__Week"
};

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Month/Month.js
var import_react155 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Weekday/Weekday.js
var import_react153 = __toESM(require_react());
var Weekday = (0, import_react153.memo)(function Weekday2({
  label,
  title,
  current
}) {
  const className = classNames(styles60.Weekday, current && styles60["Weekday-current"]);
  return import_react153.default.createElement("th", {
    "aria-label": label,
    scope: "col",
    className
  }, title);
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Day/Day.js
var import_react154 = __toESM(require_react());
var Day = (0, import_react154.memo)(function Day2({
  day,
  focused,
  onClick,
  onHover = noop7,
  onFocus = noop7,
  selected,
  inRange,
  inHoveringRange,
  disabled,
  lastDayOfMonth,
  isLastSelectedDay,
  isFirstSelectedDay,
  isHoveringRight,
  rangeIsDifferent,
  weekday,
  selectedAccessibilityLabelPrefix
}) {
  const i18n = useI18n();
  const dayNode = (0, import_react154.useRef)(null);
  const hoverValue = lastDayOfMonth || day;
  (0, import_react154.useEffect)(() => {
    if (focused && dayNode.current) {
      dayNode.current.focus();
    }
  }, [focused]);
  if (!day) {
    return import_react154.default.createElement("td", {
      className: styles60.EmptyDayCell,
      onMouseOver: () => onHover(hoverValue)
    });
  }
  const handleClick = onClick && !disabled ? onClick.bind(null, day) : noop7;
  const today = isSameDay(/* @__PURE__ */ new Date(), day);
  const dayCellClassName = classNames(styles60.DayCell, selected && styles60["DayCell-selected"], (inRange || inHoveringRange) && !disabled && styles60["DayCell-inRange"], isLastSelectedDay && styles60["DayCell-lastInRange"], isFirstSelectedDay && styles60["DayCell-firstInRange"], isHoveringRight && styles60["DayCell-hoverRight"], rangeIsDifferent && styles60["DayCell-hasRange"]);
  const dayClassName = classNames(styles60.Day, selected && styles60["Day-selected"], disabled && styles60["Day-disabled"], today && styles60["Day-today"], (inRange || inHoveringRange) && !disabled && styles60["Day-inRange"], isLastSelectedDay && styles60["Day-lastInRange"], isFirstSelectedDay && styles60["Day-firstInRange"], isHoveringRight && styles60["Day-hoverRight"], rangeIsDifferent && styles60["Day-hasRange"]);
  const date = day.getDate();
  const tabIndex = (focused || selected || today || date === 1) && !disabled ? 0 : -1;
  const ariaLabel = [selected && selectedAccessibilityLabelPrefix ? `${selectedAccessibilityLabelPrefix} ` : "", `${today ? i18n.translate("Polaris.DatePicker.today") : ""}`, `${weekday ? weekday : ""} `, `${i18n.translate(`Polaris.DatePicker.months.${monthName(day.getMonth())}`)} `, `${date} `, `${day.getFullYear()}`].join("");
  return import_react154.default.createElement("td", {
    className: dayCellClassName
  }, import_react154.default.createElement("button", {
    onFocus: () => onFocus(day),
    type: "button",
    ref: dayNode,
    tabIndex,
    className: dayClassName,
    onMouseOver: () => onHover(hoverValue),
    onClick: handleClick,
    "aria-label": ariaLabel,
    "aria-disabled": disabled,
    "aria-pressed": selected
  }, date));
});
function noop7() {
}

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Month/Month.js
function Month({
  focusedDate,
  selected,
  hoverDate,
  disableDatesBefore,
  disableDatesAfter,
  disableSpecificDates,
  allowRange,
  onChange = noop8,
  onHover = noop8,
  onFocus = noop8,
  month,
  year,
  weekStartsOn,
  accessibilityLabelPrefixes
}) {
  const i18n = useI18n();
  const isInHoveringRange = allowRange ? hoveringDateIsInRange : () => false;
  const now = /* @__PURE__ */ new Date();
  const current = now.getMonth() === month && now.getFullYear() === year;
  const className = classNames(styles60.Title, current && styles60["Month-current"]);
  const weeks = (0, import_react155.useMemo)(() => getWeeksForMonth(month, year, weekStartsOn), [month, weekStartsOn, year]);
  const weekdays = getOrderedWeekdays(weekStartsOn).map((weekday) => import_react155.default.createElement(Weekday, {
    key: weekday,
    title: i18n.translate(`Polaris.DatePicker.daysAbbreviated.${weekdayName(weekday)}`),
    label: weekdayLabel(weekday),
    current: current && (/* @__PURE__ */ new Date()).getDay() === weekday
  }));
  const handleDateClick = (0, import_react155.useCallback)((selectedDate) => {
    onChange(getNewRange(allowRange ? selected : void 0, selectedDate));
  }, [allowRange, onChange, selected]);
  const lastDayOfMonth = (0, import_react155.useMemo)(() => new Date(year, month + 1, 0), [month, year]);
  function renderWeek(day, dayIndex) {
    if (day == null) {
      return import_react155.default.createElement(Day, {
        key: dayIndex,
        onHover,
        lastDayOfMonth
      });
    }
    const disabled = disableDatesBefore && isDateBefore(day, disableDatesBefore) || disableDatesAfter && isDateAfter(day, disableDatesAfter) || disableSpecificDates && isDateDisabled(day, disableSpecificDates);
    const isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);
    const isLastSelectedDay = allowRange && selected && (!isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && isSameDay(selected.start, selected.end) && isDateAfter(hoverDate, selected.start) && isSameDay(day, hoverDate) && !isFirstSelectedDay);
    const rangeIsDifferent = !(selected && isSameDay(selected.start, selected.end));
    const isHoveringRight = hoverDate && isDateBefore(day, hoverDate);
    const [firstAccessibilityLabelPrefix, lastAccessibilityLabelPrefix] = accessibilityLabelPrefixes;
    let accessibilityLabelPrefix;
    if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) {
      accessibilityLabelPrefix = firstAccessibilityLabelPrefix;
    } else if (allowRange && isLastSelectedDay) {
      accessibilityLabelPrefix = lastAccessibilityLabelPrefix;
    }
    return import_react155.default.createElement(Day, {
      selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,
      weekday: weekdayLabel(dayIndex),
      focused: focusedDate != null && isSameDay(day, focusedDate),
      day,
      key: dayIndex,
      onFocus,
      onClick: handleDateClick,
      onHover,
      selected: selected != null && dateIsSelected(day, selected),
      inRange: selected != null && dateIsInRange(day, selected),
      disabled,
      inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),
      isLastSelectedDay,
      isFirstSelectedDay,
      isHoveringRight,
      rangeIsDifferent
    });
  }
  const weeksMarkup = weeks.map((week, index) => import_react155.default.createElement("tr", {
    className: styles60.Week,
    key: index
  }, week.map(renderWeek)));
  return import_react155.default.createElement("div", {
    className: styles60.MonthContainer
  }, import_react155.default.createElement("table", {
    role: "grid",
    className: styles60.Month
  }, import_react155.default.createElement("caption", {
    className
  }, i18n.translate(`Polaris.DatePicker.months.${monthName(month)}`), " ", year), import_react155.default.createElement("thead", null, import_react155.default.createElement("tr", {
    className: styles60.WeekHeadings
  }, weekdays)), import_react155.default.createElement("tbody", null, weeksMarkup)));
  function weekdayLabel(weekday) {
    return i18n.translate(`Polaris.DatePicker.days.${weekdayName(weekday)}`);
  }
}
function noop8() {
}
function hoveringDateIsInRange(day, range, hoverEndDate) {
  if (day == null) {
    return false;
  }
  const {
    start,
    end
  } = range;
  return Boolean(isSameDay(start, end) && day > start && day <= hoverEndDate);
}
function isDateEnd(day, range) {
  if (day == null)
    return false;
  const {
    end
  } = range;
  return Boolean(end && isSameDay(end, day));
}
function isDateStart(day, range) {
  if (day == null)
    return false;
  const {
    start
  } = range;
  return Boolean(start && isSameDay(start, day));
}

// node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.js
function DatePicker({
  id,
  selected,
  month,
  year,
  allowRange,
  multiMonth,
  disableDatesBefore,
  disableDatesAfter,
  disableSpecificDates,
  weekStartsOn = 0,
  dayAccessibilityLabelPrefix,
  onMonthChange,
  onChange = noop9
}) {
  const i18n = useI18n();
  const [hoverDate, setHoverDate] = (0, import_react156.useState)(void 0);
  const [focusDate, setFocusDate] = (0, import_react156.useState)(void 0);
  (0, import_react156.useEffect)(() => {
    setFocusDate(void 0);
  }, [selected]);
  const handleFocus = (0, import_react156.useCallback)((date) => {
    setFocusDate(date);
  }, []);
  const setFocusDateAndHandleMonthChange = (0, import_react156.useCallback)((date) => {
    if (onMonthChange) {
      onMonthChange(date.getMonth(), date.getFullYear());
    }
    setHoverDate(date);
    setFocusDate(date);
  }, [onMonthChange]);
  const handleDateSelection = (0, import_react156.useCallback)((range) => {
    const {
      end
    } = range;
    setHoverDate(end);
    setFocusDate(new Date(end));
    onChange(range);
  }, [onChange]);
  const handleMonthChangeClick = (0, import_react156.useCallback)((month2, year2) => {
    if (!onMonthChange) {
      return;
    }
    setFocusDate(void 0);
    onMonthChange(month2, year2);
  }, [onMonthChange]);
  const handleHover = (0, import_react156.useCallback)((date) => {
    setHoverDate(date);
  }, []);
  const handleKeyUp = (0, import_react156.useCallback)((event) => {
    const {
      key
    } = event;
    const range = deriveRange(selected);
    const focusedDate = focusDate || range && range.start;
    if (focusedDate == null) {
      return;
    }
    if (key === "ArrowUp") {
      const previousWeek = new Date(focusedDate);
      previousWeek.setDate(focusedDate.getDate() - 7);
      if (!(disableDatesBefore && isDateBefore(previousWeek, disableDatesBefore) || disableSpecificDates && isDateDisabled(previousWeek, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(previousWeek);
      }
    }
    if (key === "ArrowDown") {
      const nextWeek = new Date(focusedDate);
      nextWeek.setDate(focusedDate.getDate() + 7);
      if (!(disableDatesAfter && isDateAfter(nextWeek, disableDatesAfter) || disableSpecificDates && isDateDisabled(nextWeek, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(nextWeek);
      }
    }
    if (key === "ArrowRight") {
      const tomorrow = new Date(focusedDate);
      tomorrow.setDate(focusedDate.getDate() + 1);
      if (!(disableDatesAfter && isDateAfter(tomorrow, disableDatesAfter) || disableSpecificDates && isDateDisabled(tomorrow, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(tomorrow);
      }
    }
    if (key === "ArrowLeft") {
      const yesterday = new Date(focusedDate);
      yesterday.setDate(focusedDate.getDate() - 1);
      if (!(disableDatesBefore && isDateBefore(yesterday, disableDatesBefore) || disableSpecificDates && isDateDisabled(yesterday, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(yesterday);
      }
    }
  }, [disableDatesAfter, disableDatesBefore, disableSpecificDates, focusDate, selected, setFocusDateAndHandleMonthChange]);
  const showNextYear = getNextDisplayYear(month, year);
  const showNextMonth = getNextDisplayMonth(month);
  const showNextToNextYear = getNextDisplayYear(showNextMonth, showNextYear);
  const showNextToNextMonth = getNextDisplayMonth(showNextMonth);
  const showPreviousYear = getPreviousDisplayYear(month, year);
  const showPreviousMonth = getPreviousDisplayMonth(month);
  const previousMonthName = i18n.translate(`Polaris.DatePicker.months.${monthName(showPreviousMonth)}`);
  const nextMonth = multiMonth ? i18n.translate(`Polaris.DatePicker.months.${monthName(showNextToNextMonth)}`) : i18n.translate(`Polaris.DatePicker.months.${monthName(showNextMonth)}`);
  const nextYear = multiMonth ? showNextToNextYear : showNextYear;
  const monthIsSelected = (0, import_react156.useMemo)(() => deriveRange(selected), [selected]);
  const firstDatePickerAccessibilityLabelPrefix = allowRange ? i18n.translate(`Polaris.DatePicker.start`) : dayAccessibilityLabelPrefix;
  const secondDatePickerAccessibilityLabelPrefix = i18n.translate(`Polaris.DatePicker.end`);
  const accessibilityLabelPrefixes = [firstDatePickerAccessibilityLabelPrefix, secondDatePickerAccessibilityLabelPrefix];
  const secondDatePicker = multiMonth ? import_react156.default.createElement(Month, {
    onFocus: handleFocus,
    focusedDate: focusDate,
    month: showNextMonth,
    year: showNextYear,
    selected: monthIsSelected,
    hoverDate,
    onChange: handleDateSelection,
    onHover: handleHover,
    disableDatesBefore,
    disableDatesAfter,
    disableSpecificDates,
    allowRange,
    weekStartsOn,
    accessibilityLabelPrefixes
  }) : null;
  const datePickerClassName = classNames(styles60.DatePicker);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  return import_react156.default.createElement("div", {
    id,
    className: datePickerClassName,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp
  }, import_react156.default.createElement("div", {
    className: styles60.Header
  }, import_react156.default.createElement(Button, {
    plain: true,
    primary: polarisSummerEditions2023,
    icon: SvgArrowLeftMinor,
    accessibilityLabel: i18n.translate("Polaris.DatePicker.previousMonth", {
      previousMonthName,
      showPreviousYear
    }),
    onClick: () => handleMonthChangeClick(showPreviousMonth, showPreviousYear)
  }), import_react156.default.createElement(Button, {
    plain: true,
    primary: polarisSummerEditions2023,
    icon: SvgArrowRightMinor,
    accessibilityLabel: i18n.translate("Polaris.DatePicker.nextMonth", {
      nextMonth,
      nextYear
    }),
    onClick: () => handleMonthChangeClick(showNextMonth, showNextYear)
  })), import_react156.default.createElement("div", {
    className: styles60.MonthLayout
  }, import_react156.default.createElement(Month, {
    onFocus: handleFocus,
    focusedDate: focusDate,
    month,
    year,
    selected: deriveRange(selected),
    hoverDate,
    onChange: handleDateSelection,
    onHover: handleHover,
    disableDatesBefore,
    disableDatesAfter,
    disableSpecificDates,
    allowRange,
    weekStartsOn,
    accessibilityLabelPrefixes
  }), secondDatePicker));
}
function noop9() {
}
function handleKeyDown(event) {
  const {
    key
  } = event;
  if (key === "ArrowUp" || key === "ArrowDown" || key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}
function deriveRange(selected) {
  return selected instanceof Date ? {
    start: selected,
    end: selected
  } : selected;
}

// node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.js
var import_react157 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.scss.js
var styles61 = {
  "DescriptionList": "Polaris-DescriptionList",
  "Term": "Polaris-DescriptionList__Term",
  "spacingTight": "Polaris-DescriptionList--spacingTight",
  "Description": "Polaris-DescriptionList__Description"
};

// node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.js
function DescriptionList({
  items,
  spacing = "loose"
}) {
  const terms = items.reduce((allTerms, {
    term,
    description
  }, index) => [...allTerms, import_react157.default.createElement("dt", {
    key: `dt${index}`,
    className: styles61.Term
  }, import_react157.default.createElement(Text, {
    as: "span",
    variant: "headingSm"
  }, term)), import_react157.default.createElement("dd", {
    key: `dd${index}`,
    className: styles61.Description
  }, description)], []);
  const className = classNames(styles61.DescriptionList, spacing === "tight" && styles61.spacingTight);
  return import_react157.default.createElement("dl", {
    className
  }, terms);
}

// node_modules/@shopify/polaris/build/esm/components/Divider/Divider.js
var import_react158 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Divider/Divider.scss.js
var styles62 = {
  "Divider": "Polaris-Divider"
};

// node_modules/@shopify/polaris/build/esm/components/Divider/Divider.js
var Divider = ({
  borderColor = "border-secondary",
  borderWidth = "1"
}) => {
  const borderColorValue = borderColor === "transparent" ? borderColor : `var(--p-color-${borderColor})`;
  return import_react158.default.createElement("hr", {
    className: styles62.Divider,
    style: {
      borderBlockStart: `var(--p-border-width-${borderWidth}) solid ${borderColorValue}`
    }
  });
};

// node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.js
var import_react161 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/capitalize.js
function capitalize2(word = "") {
  const wordLower = word.toLowerCase();
  return wordLower.charAt(0).toUpperCase() + wordLower.slice(1);
}

// node_modules/@shopify/polaris/build/esm/components/DropZone/context.js
var import_react159 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/DropZone/utils/index.js
var dragEvents = ["dragover", "dragenter", "drop"];
function fileAccepted(file, accept) {
  return file.type === "application/x-moz-file" || accepts(file, accept);
}
function getDataTransferFiles(event) {
  if (isDragEvent(event) && event.dataTransfer) {
    const dt = event.dataTransfer;
    if (dt.files && dt.files.length) {
      return Array.from(dt.files);
    } else if (dt.items && dt.items.length) {
      return Array.from(dt.items);
    }
  } else if (isChangeEvent(event) && event.target.files) {
    return Array.from(event.target.files);
  }
  return [];
}
function accepts(file, acceptedFiles) {
  if (file && acceptedFiles) {
    const fileName = file.name || "";
    const mimeType = file.type || "";
    const baseMimeType = mimeType.replace(/\/.*$/, "");
    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
    return acceptedFilesArray.some((type) => {
      const validType = type.trim();
      if (validType.startsWith(".")) {
        return fileName.toLowerCase().endsWith(validType.toLowerCase());
      } else if (validType.endsWith("/*")) {
        return baseMimeType === validType.replace(/\/.*$/, "");
      }
      return mimeType === validType;
    });
  }
  return true;
}
function isDragEvent(event) {
  return dragEvents.indexOf(event.type) > 0;
}
function isChangeEvent(event) {
  return Object.prototype.hasOwnProperty.call(event, "target");
}
var defaultAllowMultiple = true;
function createAllowMultipleKey(allowMultiple) {
  return allowMultiple ? "allowMultiple" : "single";
}

// node_modules/@shopify/polaris/build/esm/components/DropZone/context.js
var DropZoneContext = (0, import_react159.createContext)({
  disabled: false,
  focused: false,
  size: "extraLarge",
  type: "file",
  measuring: false,
  allowMultiple: defaultAllowMultiple
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.scss.js
var styles63 = {
  "DropZone": "Polaris-DropZone",
  "focused": "Polaris-DropZone--focused",
  "hasOutline": "Polaris-DropZone--hasOutline",
  "isDisabled": "Polaris-DropZone--isDisabled",
  "isDragging": "Polaris-DropZone--isDragging",
  "sizeLarge": "Polaris-DropZone--sizeLarge",
  "sizeMedium": "Polaris-DropZone--sizeMedium",
  "sizeSmall": "Polaris-DropZone--sizeSmall",
  "measuring": "Polaris-DropZone--measuring",
  "Container": "Polaris-DropZone__Container",
  "Overlay": "Polaris-DropZone__Overlay",
  "hasError": "Polaris-DropZone--hasError"
};

// node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.js
var import_react160 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.scss.js
var styles64 = {
  "FileUpload": "Polaris-DropZone-FileUpload",
  "large": "Polaris-DropZone-FileUpload--large",
  "small": "Polaris-DropZone-FileUpload--small",
  "Action": "Polaris-DropZone-FileUpload__Action",
  "disabled": "Polaris-DropZone-FileUpload--disabled",
  "ActionTitle": "Polaris-DropZone-FileUpload__ActionTitle",
  "ActionTitle-disabled": "Polaris-DropZone-FileUpload__ActionTitle--disabled",
  "ActionTitle-focused": "Polaris-DropZone-FileUpload__ActionTitle--focused",
  "UploadIcon": "Polaris-DropZone-FileUpload__UploadIcon"
};

// node_modules/@shopify/polaris/build/esm/components/DropZone/images/upload-arrow.svg.js
var img = "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill-rule='evenodd' d='M20 10a10 10 0 11-20 0 10 10 0 0120 0zM5.3 8.3l4-4a1 1 0 011.4 0l4 4a1 1 0 01-1.4 1.4L11 7.4V15a1 1 0 11-2 0V7.4L6.7 9.7a1 1 0 01-1.4-1.4z' fill='%235C5F62'/%3e%3c/svg%3e";
var uploadArrow = img;

// node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.js
function FileUpload(props) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const {
    size: size2,
    measuring,
    type,
    disabled,
    allowMultiple
  } = (0, import_react160.useContext)(DropZoneContext);
  const typeSuffix = capitalize2(type);
  const allowMultipleKey = createAllowMultipleKey(allowMultiple);
  const {
    actionTitle = i18n.translate(`Polaris.DropZone.${allowMultipleKey}.actionTitle${typeSuffix}`),
    actionHint
  } = props;
  const actionClassNames = classNames(styles64.Action, disabled && styles64.disabled);
  const actionMarkup = import_react160.default.createElement("div", {
    className: actionClassNames
  }, actionTitle);
  const fileUploadClassName = classNames(styles64.FileUpload, measuring && styles64.measuring, size2 === "large" && styles64.large, size2 === "small" && styles64.small);
  const actionHintMarkup = actionHint && import_react160.default.createElement(Text, {
    variant: "bodySm",
    as: "p",
    color: "subdued"
  }, actionHint);
  let viewMarkup;
  switch (size2) {
    case "large":
      viewMarkup = import_react160.default.createElement(VerticalStack, {
        inlineAlign: "center",
        gap: "200"
      }, actionMarkup, actionHintMarkup);
      break;
    case "medium":
      viewMarkup = import_react160.default.createElement(VerticalStack, {
        inlineAlign: "center",
        gap: "200"
      }, actionMarkup, actionHintMarkup);
      break;
    case "small":
      viewMarkup = import_react160.default.createElement("img", {
        width: "20",
        src: uploadArrow,
        alt: ""
      });
      if (polarisSummerEditions2023) {
        viewMarkup = import_react160.default.createElement("div", {
          className: classNames(styles64.UploadIcon, disabled && styles64.disabled)
        }, import_react160.default.createElement(Icon, {
          source: SvgUploadMajor
        }));
      }
      break;
  }
  return import_react160.default.createElement("div", {
    className: fileUploadClassName
  }, viewMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.js
var DropZone = function DropZone2({
  dropOnPage,
  label,
  labelAction,
  labelHidden,
  children: children2,
  disabled = false,
  outline = true,
  accept,
  active,
  overlay: overlay2 = true,
  allowMultiple = defaultAllowMultiple,
  overlayText,
  errorOverlayText,
  id: idProp,
  type = "file",
  onClick,
  error,
  openFileDialog,
  variableHeight,
  onFileDialogClose,
  customValidator,
  onDrop,
  onDropAccepted,
  onDropRejected,
  onDragEnter,
  onDragOver,
  onDragLeave
}) {
  const node = (0, import_react161.useRef)(null);
  const inputRef = (0, import_react161.useRef)(null);
  const dragTargets = (0, import_react161.useRef)([]);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const adjustSize = (0, import_react161.useCallback)(debounce(() => {
    if (!node.current) {
      return;
    }
    if (variableHeight) {
      setMeasuring(false);
      return;
    }
    let size3 = "large";
    const width2 = node.current.getBoundingClientRect().width;
    if (width2 < 100) {
      size3 = "small";
    } else if (width2 < 160) {
      size3 = "medium";
    }
    setSize(size3);
    measuring && setMeasuring(false);
  }, 50, {
    trailing: true
  }), []);
  const [dragging, setDragging] = (0, import_react161.useState)(false);
  const [internalError, setInternalError] = (0, import_react161.useState)(false);
  const {
    value: focused,
    setTrue: handleFocus,
    setFalse: handleBlur
  } = useToggle(false);
  const [size2, setSize] = (0, import_react161.useState)("large");
  const [measuring, setMeasuring] = (0, import_react161.useState)(true);
  const i18n = useI18n();
  const getValidatedFiles = (0, import_react161.useCallback)((files) => {
    const acceptedFiles = [];
    const rejectedFiles = [];
    Array.from(files).forEach((file) => {
      !fileAccepted(file, accept) || customValidator && !customValidator(file) ? rejectedFiles.push(file) : acceptedFiles.push(file);
    });
    if (!allowMultiple) {
      acceptedFiles.splice(1, acceptedFiles.length);
      rejectedFiles.push(...acceptedFiles.slice(1));
    }
    return {
      files,
      acceptedFiles,
      rejectedFiles
    };
  }, [accept, allowMultiple, customValidator]);
  const handleDrop = (0, import_react161.useCallback)((event) => {
    stopEvent(event);
    if (disabled)
      return;
    const fileList = getDataTransferFiles(event);
    const {
      files,
      acceptedFiles,
      rejectedFiles
    } = getValidatedFiles(fileList);
    dragTargets.current = [];
    setDragging(false);
    setInternalError(rejectedFiles.length > 0);
    onDrop && onDrop(files, acceptedFiles, rejectedFiles);
    onDropAccepted && acceptedFiles.length && onDropAccepted(acceptedFiles);
    onDropRejected && rejectedFiles.length && onDropRejected(rejectedFiles);
    if (!(event.target && "value" in event.target))
      return;
    event.target.value = "";
  }, [disabled, getValidatedFiles, onDrop, onDropAccepted, onDropRejected]);
  const handleDragEnter = (0, import_react161.useCallback)((event) => {
    stopEvent(event);
    if (disabled)
      return;
    const fileList = getDataTransferFiles(event);
    if (event.target && !dragTargets.current.includes(event.target)) {
      dragTargets.current.push(event.target);
    }
    if (dragging)
      return;
    const {
      rejectedFiles
    } = getValidatedFiles(fileList);
    setDragging(true);
    setInternalError(rejectedFiles.length > 0);
    onDragEnter && onDragEnter();
  }, [disabled, dragging, getValidatedFiles, onDragEnter]);
  const handleDragOver = (0, import_react161.useCallback)((event) => {
    stopEvent(event);
    if (disabled)
      return;
    onDragOver && onDragOver();
  }, [disabled, onDragOver]);
  const handleDragLeave = (0, import_react161.useCallback)((event) => {
    event.preventDefault();
    if (disabled)
      return;
    dragTargets.current = dragTargets.current.filter((el) => {
      const compareNode = dropOnPage && !isServer ? document : node.current;
      return el !== event.target && compareNode && compareNode.contains(el);
    });
    if (dragTargets.current.length > 0)
      return;
    setDragging(false);
    setInternalError(false);
    onDragLeave && onDragLeave();
  }, [dropOnPage, disabled, onDragLeave]);
  const dropNode = dropOnPage && !isServer ? document : node.current;
  useEventListener("drop", handleDrop, dropNode);
  useEventListener("dragover", handleDragOver, dropNode);
  useEventListener("dragenter", handleDragEnter, dropNode);
  useEventListener("dragleave", handleDragLeave, dropNode);
  useEventListener("resize", adjustSize, isServer ? null : window);
  useComponentDidMount(() => {
    adjustSize();
  });
  const uniqId = (0, import_react161.useId)();
  const id = idProp ?? uniqId;
  const typeSuffix = capitalize2(type);
  const allowMultipleKey = createAllowMultipleKey(allowMultiple);
  const overlayTextWithDefault = overlayText === void 0 ? i18n.translate(`Polaris.DropZone.${allowMultipleKey}.overlayText${typeSuffix}`) : overlayText;
  const errorOverlayTextWithDefault = errorOverlayText === void 0 ? i18n.translate(`Polaris.DropZone.errorOverlayText${typeSuffix}`) : errorOverlayText;
  const labelValue = label || i18n.translate(`Polaris.DropZone.${allowMultipleKey}.label${typeSuffix}`);
  const labelHiddenValue = label ? labelHidden : true;
  const classes = classNames(styles63.DropZone, outline && styles63.hasOutline, focused && styles63.focused, (active || dragging) && styles63.isDragging, disabled && styles63.isDisabled, (internalError || error) && styles63.hasError, !variableHeight && styles63[variationName("size", size2)], measuring && styles63.measuring);
  const dragOverlay = (active || dragging) && !internalError && !error && overlay2 && overlayMarkup(SvgUploadMajor, "interactive", overlayTextWithDefault);
  const dragErrorOverlay = dragging && (internalError || error) && overlayMarkup(SvgCircleAlertMajor, "critical", errorOverlayTextWithDefault);
  const context = (0, import_react161.useMemo)(() => ({
    disabled,
    focused,
    size: size2,
    type: type || "file",
    measuring,
    allowMultiple
  }), [disabled, focused, measuring, size2, type, allowMultiple]);
  const open = (0, import_react161.useCallback)(() => {
    if (!inputRef.current)
      return;
    inputRef.current.click();
  }, [inputRef]);
  const triggerFileDialog = (0, import_react161.useCallback)(() => {
    open();
    onFileDialogClose == null ? void 0 : onFileDialogClose();
  }, [open, onFileDialogClose]);
  function overlayMarkup(icon, color2, text2) {
    let iconColor = color2;
    const summerEditions = {
      critical: "critical",
      interactive: void 0
    };
    if (polarisSummerEditions2023) {
      iconColor = summerEditions[color2];
    }
    return import_react161.default.createElement("div", {
      className: styles63.Overlay
    }, import_react161.default.createElement(VerticalStack, {
      gap: "200",
      inlineAlign: "center"
    }, size2 === "small" && import_react161.default.createElement(Icon, {
      source: icon,
      color: iconColor
    }), (size2 === "medium" || size2 === "large") && import_react161.default.createElement(Text, {
      variant: "bodySm",
      as: "p",
      fontWeight: "bold"
    }, text2)));
  }
  function handleClick(event) {
    if (disabled)
      return;
    return onClick ? onClick(event) : open();
  }
  (0, import_react161.useEffect)(() => {
    if (openFileDialog)
      triggerFileDialog();
  }, [openFileDialog, triggerFileDialog]);
  return import_react161.default.createElement(DropZoneContext.Provider, {
    value: context
  }, import_react161.default.createElement(Labelled, {
    id,
    label: labelValue,
    action: labelAction,
    labelHidden: labelHiddenValue
  }, import_react161.default.createElement("div", {
    ref: node,
    className: classes,
    "aria-disabled": disabled,
    onClick: handleClick,
    onDragStart: stopEvent
  }, dragOverlay, dragErrorOverlay, import_react161.default.createElement(Text, {
    variant: "bodySm",
    as: "span",
    visuallyHidden: true
  }, import_react161.default.createElement("input", {
    id,
    accept,
    disabled,
    multiple: allowMultiple,
    onChange: handleDrop,
    onFocus: handleFocus,
    onBlur: handleBlur,
    type: "file",
    ref: inputRef,
    autoComplete: "off"
  })), import_react161.default.createElement("div", {
    className: styles63.Container
  }, children2))));
};
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
DropZone.FileUpload = FileUpload;

// node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/EmptySearchResult.js
var import_react162 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/illustrations/empty-search.svg.js
var img2 = "data:image/svg+xml,%3csvg width='60' height='60' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' d='M41.87 24a17.87 17.87 0 11-35.74 0 17.87 17.87 0 0135.74 0zm-3.15 18.96a24 24 0 114.24-4.24L59.04 54.8a3 3 0 11-4.24 4.24L38.72 42.96z' fill='%238C9196'/%3e%3c/svg%3e";
var emptySearch = img2;

// node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/EmptySearchResult.js
function EmptySearchResult({
  title,
  description,
  withIllustration
}) {
  const i18n = useI18n();
  const altText = i18n.translate("Polaris.EmptySearchResult.altText");
  const descriptionMarkup = description ? import_react162.default.createElement("p", null, description) : null;
  const illustrationMarkup = withIllustration ? import_react162.default.createElement(Image, {
    alt: altText,
    source: emptySearch,
    draggable: false
  }) : null;
  return import_react162.default.createElement(LegacyStack, {
    alignment: "center",
    vertical: true
  }, illustrationMarkup, import_react162.default.createElement(Text, {
    variant: "headingLg",
    as: "p"
  }, title), import_react162.default.createElement(Text, {
    color: "subdued",
    as: "span"
  }, descriptionMarkup));
}

// node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.js
var import_react163 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.scss.js
var styles65 = {
  "imageContained": "Polaris-EmptyState--imageContained"
};

// node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.js
function EmptyState({
  children: children2,
  heading,
  image,
  largeImage,
  imageContained,
  fullWidth = false,
  action,
  secondaryAction,
  footerContent
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const withinContentContainer = (0, import_react163.useContext)(WithinContentContext);
  const imageContainedClass = classNames(imageContained && styles65.imageContained);
  const imageMarkup = largeImage ? import_react163.default.createElement(Image, {
    alt: "",
    role: "presentation",
    source: largeImage,
    className: imageContainedClass,
    sourceSet: [{
      source: image,
      descriptor: "568w"
    }, {
      source: largeImage,
      descriptor: "1136w"
    }],
    sizes: "(max-width: 568px) 60vw"
  }) : import_react163.default.createElement(Image, {
    className: imageContainedClass,
    role: "presentation",
    alt: "",
    source: image
  });
  const secondaryActionMarkup = secondaryAction ? buttonFrom(secondaryAction, {}) : null;
  const footerContentMarkup = footerContent ? import_react163.default.createElement(Box, {
    paddingBlockStart: "400"
  }, import_react163.default.createElement(Text, {
    as: "span",
    color: polarisSummerEditions2023 ? void 0 : "subdued",
    alignment: "center",
    variant: polarisSummerEditions2023 ? "bodySm" : "bodyMd"
  }, footerContent)) : null;
  const headingSize = withinContentContainer ? "headingLg" : "headingXl";
  const primaryActionMarkup = action ? buttonFrom(action, {
    primary: true,
    size: "medium"
  }) : null;
  const headingMarkup = heading ? import_react163.default.createElement(Box, {
    paddingBlockEnd: polarisSummerEditions2023 ? "150" : "400"
  }, import_react163.default.createElement(Text, {
    variant: polarisSummerEditions2023 ? "headingMd" : headingSize,
    as: "p",
    alignment: "center"
  }, heading)) : null;
  const childrenMarkup = children2 ? import_react163.default.createElement(Text, {
    as: "span",
    color: polarisSummerEditions2023 ? void 0 : "subdued",
    alignment: "center",
    variant: polarisSummerEditions2023 ? "bodySm" : "bodyMd"
  }, children2) : null;
  const textContentMarkup = headingMarkup || children2 ? import_react163.default.createElement(Box, {
    paddingBlockEnd: polarisSummerEditions2023 ? "400" : "600"
  }, headingMarkup, childrenMarkup) : null;
  const actionsMarkup = primaryActionMarkup || secondaryActionMarkup ? import_react163.default.createElement(HorizontalStack, {
    align: "center",
    gap: "200"
  }, secondaryActionMarkup, primaryActionMarkup) : null;
  const detailsMarkup = textContentMarkup || actionsMarkup || footerContentMarkup ? import_react163.default.createElement(Box, {
    maxWidth: fullWidth ? "100%" : "400px"
  }, import_react163.default.createElement(VerticalStack, {
    inlineAlign: "center"
  }, textContentMarkup, actionsMarkup, footerContentMarkup)) : null;
  return import_react163.default.createElement(Box, {
    paddingInlineStart: "0",
    paddingInlineEnd: "0",
    paddingBlockStart: "500",
    paddingBlockEnd: "1600"
  }, import_react163.default.createElement(VerticalStack, {
    inlineAlign: "center"
  }, imageMarkup, detailsMarkup));
}

// node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.js
var import_react165 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.scss.js
var styles66 = {
  "ExceptionList": "Polaris-ExceptionList",
  "Item": "Polaris-ExceptionList__Item",
  "Icon": "Polaris-ExceptionList__Icon",
  "statusWarning": "Polaris-ExceptionList--statusWarning",
  "statusCritical": "Polaris-ExceptionList--statusCritical",
  "Bullet": "Polaris-ExceptionList__Bullet",
  "Title": "Polaris-ExceptionList__Title",
  "Description": "Polaris-ExceptionList__Description"
};

// node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.js
var import_react164 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.scss.js
var styles67 = {
  "Truncate": "Polaris-Truncate"
};

// node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.js
function Truncate({
  children: children2
}) {
  return import_react164.default.createElement("span", {
    className: styles67.Truncate
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.js
function ExceptionList({
  items: itemsList
}) {
  const items = itemsList.map((item, index) => {
    const {
      status,
      icon,
      title,
      description,
      truncate = false
    } = item;
    const itemClasses = classNames(styles66.Item, status && styles66[variationName("status", status)]);
    const iconMarkup = icon ? import_react165.default.createElement(Icon, {
      source: icon
    }) : import_react165.default.createElement("span", {
      className: styles66.Bullet
    });
    const titleMarkup = title && import_react165.default.createElement("span", {
      className: styles66.Title
    }, title);
    const descriptionMarkup = description && import_react165.default.createElement("span", {
      className: styles66.Description
    }, description);
    const Element2 = truncate ? Truncate : import_react165.Fragment;
    return import_react165.default.createElement("li", {
      className: itemClasses,
      key: index
    }, import_react165.default.createElement("span", {
      className: styles66.Icon
    }, iconMarkup), import_react165.default.createElement(Element2, null, titleMarkup, descriptionMarkup));
  });
  return import_react165.default.createElement("ul", {
    className: styles66.ExceptionList
  }, items);
}

// node_modules/@shopify/polaris/build/esm/components/Filters/Filters.js
var import_react168 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Filters/Filters.scss.js
var styles68 = {
  "Container": "Polaris-Filters__Container",
  "ContainerUplift": "Polaris-Filters__ContainerUplift",
  "SearchField": "Polaris-Filters__SearchField",
  "Spinner": "Polaris-Filters__Spinner",
  "FiltersWrapper": "Polaris-Filters__FiltersWrapper",
  "hideQueryField": "Polaris-Filters--hideQueryField",
  "FiltersInner": "Polaris-Filters__FiltersInner",
  "AddFilter": "Polaris-Filters__AddFilter",
  "FiltersWrapperWithAddButton": "Polaris-Filters__FiltersWrapperWithAddButton",
  "AddFilterActivatorMultiple": "Polaris-Filters__AddFilterActivatorMultiple",
  "FiltersStickyArea": "Polaris-Filters__FiltersStickyArea",
  "ClearAll": "Polaris-Filters__ClearAll",
  "MultiplePinnedFilterClearAll": "Polaris-Filters__MultiplePinnedFilterClearAll"
};

// node_modules/@shopify/polaris/build/esm/components/Filters/components/SearchField/SearchField.js
var import_react166 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Filters/components/SearchField/SearchField.scss.js
var styles69 = {
  "SearchField": "Polaris-Filters-SearchField",
  "Label": "Polaris-Filters-SearchField__Label",
  "Input": "Polaris-Filters-SearchField__Input",
  "borderless": "Polaris-Filters-SearchField--borderless",
  "focused": "Polaris-Filters-SearchField--focused",
  "ClearButton": "Polaris-Filters-SearchField__ClearButton",
  "ClearButton-focused": "Polaris-Filters-SearchField__ClearButton--focused"
};

// node_modules/@shopify/polaris/build/esm/components/Filters/components/SearchField/SearchField.js
function SearchField2({
  onChange,
  onClear,
  onFocus,
  onBlur,
  focused,
  value,
  placeholder,
  disabled,
  borderlessQueryField
}) {
  const i18n = useI18n();
  const id = (0, import_react166.useId)();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const inputRef = (0, import_react166.useRef)(null);
  function handleChange(value2) {
    onChange(value2);
  }
  (0, import_react166.useEffect)(() => {
    var _a;
    if (focused)
      (_a = inputRef.current) == null ? void 0 : _a.focus();
  }, [focused]);
  function handleClear() {
    if (onClear) {
      onClear();
    } else {
      onChange("");
    }
  }
  return polarisSummerEditions2023 ? import_react166.default.createElement("div", {
    className: styles69.SearchField
  }, import_react166.default.createElement("label", {
    className: styles69.Label,
    htmlFor: id
  }, placeholder), import_react166.default.createElement("input", {
    id,
    ref: inputRef,
    className: classNames(styles69.Input, focused && styles69.focused, borderlessQueryField && styles69.borderless),
    value,
    onChange: (event) => handleChange((event == null ? void 0 : event.currentTarget.value) ?? value),
    onFocus,
    onBlur,
    autoComplete: "off",
    placeholder,
    disabled
  }), value !== "" && import_react166.default.createElement(UnstyledButton, {
    className: classNames(styles69.ClearButton, focused && styles69["ClearButton-focused"]),
    onClick: () => handleClear(),
    disabled
  }, import_react166.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, i18n.translate("Polaris.Common.clear")), import_react166.default.createElement(Icon, {
    source: SvgCircleCancelMinor,
    color: "subdued"
  }))) : import_react166.default.createElement(TextField, {
    value,
    onChange: handleChange,
    onFocus,
    onBlur,
    label: placeholder,
    labelHidden: true,
    autoComplete: "off",
    focused,
    placeholder,
    clearButton: true,
    onClearButtonClick: handleClear,
    disabled,
    borderless: borderlessQueryField
  });
}

// node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.js
var import_react167 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.scss.js
var styles70 = {
  "FilterButton": "Polaris-Filters-FilterPill__FilterButton",
  "focusedFilterButton": "Polaris-Filters-FilterPill--focusedFilterButton",
  "disabledFilterButton": "Polaris-Filters-FilterPill--disabledFilterButton",
  "ActiveFilterButton": "Polaris-Filters-FilterPill__ActiveFilterButton",
  "PlainButton": "Polaris-Filters-FilterPill__PlainButton",
  "ToggleButton": "Polaris-Filters-FilterPill__ToggleButton",
  "Label": "Polaris-Filters-FilterPill__Label",
  "clearButton": "Polaris-Filters-FilterPill--clearButton",
  "IconWrapper": "Polaris-Filters-FilterPill__IconWrapper",
  "PopoverWrapper": "Polaris-Filters-FilterPill__PopoverWrapper",
  "ClearButtonWrapper": "Polaris-Filters-FilterPill__ClearButtonWrapper"
};

// node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.js
function FilterPill({
  filterKey,
  label,
  filter,
  disabled,
  hideClearButton,
  selected,
  initialActive,
  closeOnChildOverlayClick,
  onRemove,
  onClick
}) {
  const i18n = useI18n();
  const {
    mdDown
  } = useBreakpoints();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const elementRef = (0, import_react167.useRef)(null);
  const {
    value: focused,
    setTrue: setFocusedTrue,
    setFalse: setFocusedFalse
  } = useToggle(false);
  const [popoverActive, setPopoverActive] = (0, import_react167.useState)(initialActive);
  (0, import_react167.useEffect)(() => {
    var _a, _b;
    const node = elementRef.current;
    if (!node || !popoverActive) {
      return;
    }
    const parent = (_a = node.parentElement) == null ? void 0 : _a.parentElement;
    if (!parent) {
      return;
    }
    (_b = parent.scroll) == null ? void 0 : _b.call(parent, {
      left: node.offsetLeft
    });
  }, [elementRef, popoverActive]);
  const togglePopoverActive = (0, import_react167.useCallback)(() => {
    if (filter) {
      setPopoverActive((popoverActive2) => !popoverActive2);
    }
    if (onClick) {
      onClick(filterKey);
    }
  }, [filter, filterKey, onClick]);
  const handlePopoverClose = (0, import_react167.useCallback)(() => {
    togglePopoverActive();
    if (!selected) {
      onRemove == null ? void 0 : onRemove(filterKey);
    }
  }, [onRemove, selected, filterKey, togglePopoverActive]);
  const handleClear = () => {
    if (onRemove)
      onRemove(filterKey);
    setPopoverActive(false);
  };
  const buttonClasses = classNames(styles70.FilterButton, selected && styles70.ActiveFilterButton, popoverActive && styles70.FocusFilterButton, focused && styles70.focusedFilterButton, disabled && styles70.disabledFilterButton);
  const clearButtonClassNames = classNames(styles70.PlainButton, styles70.clearButton);
  const toggleButtonClassNames = classNames(styles70.PlainButton, styles70.ToggleButton);
  const se23LabelVariant = mdDown && polarisSummerEditions2023 ? "bodyLg" : "bodySm";
  const labelVariant = mdDown ? "bodyMd" : "bodySm";
  const wrappedLabel = import_react167.default.createElement("div", {
    className: styles70.Label
  }, import_react167.default.createElement(Text, {
    variant: polarisSummerEditions2023 ? se23LabelVariant : labelVariant,
    as: "span"
  }, label));
  const activator = import_react167.default.createElement("div", {
    className: buttonClasses
  }, import_react167.default.createElement(HorizontalStack, {
    gap: "0",
    wrap: false
  }, import_react167.default.createElement(UnstyledButton, {
    onFocus: setFocusedTrue,
    onBlur: setFocusedFalse,
    onClick: togglePopoverActive,
    className: toggleButtonClassNames,
    type: "button",
    disabled
  }, import_react167.default.createElement(HorizontalStack, {
    wrap: false,
    align: "center",
    blockAlign: "center",
    gap: "0"
  }, selected ? import_react167.default.createElement(import_react167.default.Fragment, null, wrappedLabel) : import_react167.default.createElement(import_react167.default.Fragment, null, wrappedLabel, import_react167.default.createElement("div", {
    className: styles70.IconWrapper
  }, import_react167.default.createElement(Icon, {
    source: polarisSummerEditions2023 ? SvgChevronDownMinor : SvgCaretDownMinor,
    color: "base"
  }))))), selected ? import_react167.default.createElement(UnstyledButton, {
    onClick: handleClear,
    className: clearButtonClassNames,
    type: "button",
    "aria-label": i18n.translate("Polaris.FilterPill.clear"),
    disabled
  }, import_react167.default.createElement("div", {
    className: styles70.IconWrapper
  }, import_react167.default.createElement(Icon, {
    source: SvgCancelSmallMinor,
    color: "base"
  }))) : null));
  const clearButtonMarkup = !hideClearButton && import_react167.default.createElement("div", {
    className: styles70.ClearButtonWrapper
  }, import_react167.default.createElement(Button, {
    onClick: handleClear,
    plain: true,
    disabled: !selected,
    textAlign: "left"
  }, i18n.translate("Polaris.FilterPill.clear")));
  if (disabled) {
    return null;
  }
  return import_react167.default.createElement("div", {
    ref: elementRef
  }, import_react167.default.createElement(Popover2, {
    active: popoverActive && !disabled,
    activator,
    key: filterKey,
    onClose: handlePopoverClose,
    preferredAlignment: "left",
    preventCloseOnChildOverlayClick: !closeOnChildOverlayClick
  }, import_react167.default.createElement("div", {
    className: styles70.PopoverWrapper
  }, import_react167.default.createElement(Popover2.Section, null, import_react167.default.createElement(VerticalStack, {
    gap: "100"
  }, filter, clearButtonMarkup)))));
}

// node_modules/@shopify/polaris/build/esm/components/Filters/Filters.js
var TRANSITION_DURATION = "var(--p-motion-duration-150)";
var TRANSITION_MARGIN = "-36px";
var defaultStyle = {
  transition: `opacity ${TRANSITION_DURATION} var(--p-motion-ease)`,
  opacity: 0
};
var transitionStyles = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  },
  exiting: {
    opacity: 0
  },
  exited: {
    opacity: 0
  },
  unmounted: {
    opacity: 0
  }
};
var defaultFilterStyles = {
  transition: `opacity ${TRANSITION_DURATION} var(--p-motion-ease), margin ${TRANSITION_DURATION} var(--p-motion-ease)`,
  opacity: 0,
  marginTop: TRANSITION_MARGIN
};
var transitionFilterStyles = {
  entering: {
    opacity: 1,
    marginTop: 0
  },
  entered: {
    opacity: 1,
    marginTop: 0
  },
  exiting: {
    opacity: 0,
    marginTop: TRANSITION_MARGIN
  },
  exited: {
    opacity: 0,
    marginTop: TRANSITION_MARGIN
  },
  unmounted: {
    opacity: 0,
    marginTop: TRANSITION_MARGIN
  }
};
function Filters({
  queryValue,
  queryPlaceholder,
  focused,
  filters,
  appliedFilters,
  onQueryChange,
  onQueryClear,
  onQueryBlur,
  onQueryFocus,
  onClearAll,
  children: children2,
  disabled,
  hideFilters,
  hideQueryField,
  disableQueryField,
  borderlessQueryField,
  loading,
  disableFilters,
  mountedState,
  onAddFilterClick,
  closeOnChildOverlayClick
}) {
  const i18n = useI18n();
  const {
    mdDown
  } = useBreakpoints();
  const {
    polarisSummerEditions2023: se23
  } = useFeatures();
  const [popoverActive, setPopoverActive] = (0, import_react168.useState)(false);
  const [localPinnedFilters, setLocalPinnedFilters] = (0, import_react168.useState)([]);
  const hasMounted = (0, import_react168.useRef)(false);
  (0, import_react168.useEffect)(() => {
    hasMounted.current = true;
  });
  const togglePopoverActive = () => setPopoverActive((popoverActive2) => !popoverActive2);
  const handleAddFilterClick = () => {
    onAddFilterClick == null ? void 0 : onAddFilterClick();
    togglePopoverActive();
  };
  const appliedFilterKeys = appliedFilters == null ? void 0 : appliedFilters.map(({
    key
  }) => key);
  const pinnedFiltersFromPropsAndAppliedFilters = filters.filter(({
    pinned,
    key
  }) => (Boolean(pinned) || (appliedFilterKeys == null ? void 0 : appliedFilterKeys.includes(key))) && // Filters that are pinned in local state display at the end of our list
  !localPinnedFilters.find((filterKey) => filterKey === key));
  (0, import_react168.useEffect)(() => {
    const allAppliedFilterKeysInLocalPinnedFilters = !appliedFilterKeys || appliedFilterKeys.every((value) => localPinnedFilters.includes(value));
    if (!allAppliedFilterKeysInLocalPinnedFilters) {
      setLocalPinnedFilters((currentLocalPinnedFilters) => {
        const newPinnedFilters = (appliedFilterKeys == null ? void 0 : appliedFilterKeys.filter((filterKey) => !currentLocalPinnedFilters.find((currentFilterKey) => currentFilterKey === filterKey))) || [];
        return [...currentLocalPinnedFilters, ...newPinnedFilters];
      });
    }
  }, [appliedFilterKeys, localPinnedFilters]);
  const pinnedFiltersFromLocalState = localPinnedFilters.map((key) => filters.find((filter) => filter.key === key)).reduce((acc, filter) => filter ? [...acc, filter] : acc, []);
  const pinnedFilters = [...pinnedFiltersFromPropsAndAppliedFilters, ...pinnedFiltersFromLocalState];
  const onFilterClick = ({
    key,
    onAction
  }) => () => {
    setTimeout(() => {
      setLocalPinnedFilters((currentLocalPinnedFilters) => [.../* @__PURE__ */ new Set([...currentLocalPinnedFilters, key])]);
      onAction == null ? void 0 : onAction();
      togglePopoverActive();
    }, 0);
  };
  const filterToActionItem = (filter) => ({
    ...filter,
    content: filter.label,
    onAction: onFilterClick(filter)
  });
  const unpinnedFilters = filters.filter((filter) => !pinnedFilters.some(({
    key
  }) => key === filter.key));
  const unsectionedFilters = unpinnedFilters.filter((filter) => !filter.section).map(filterToActionItem);
  const sectionedFilters = unpinnedFilters.filter((filter) => filter.section).reduce((acc, filter) => {
    const filterActionItem = filterToActionItem(filter);
    const sectionIndex = acc.findIndex((section) => section.title === filter.section);
    if (sectionIndex === -1) {
      acc.push({
        title: filter.section,
        items: [filterActionItem]
      });
    } else {
      acc[sectionIndex].items.push(filterActionItem);
    }
    return acc;
  }, []);
  const hasOneOrMorePinnedFilters = pinnedFilters.length >= 1;
  const se23LabelVariant = mdDown && se23 ? "bodyLg" : "bodySm";
  const labelVariant = mdDown ? "bodyMd" : "bodySm";
  const addFilterActivator = import_react168.default.createElement("div", null, import_react168.default.createElement(UnstyledButton, {
    type: "button",
    className: styles68.AddFilter,
    onClick: handleAddFilterClick,
    "aria-label": i18n.translate("Polaris.Filters.addFilter"),
    disabled: disabled || unsectionedFilters.length === 0 && sectionedFilters.length === 0 || disableFilters
  }, import_react168.default.createElement(Text, {
    variant: se23 ? se23LabelVariant : labelVariant,
    as: "span"
  }, i18n.translate("Polaris.Filters.addFilter"), " "), import_react168.default.createElement(SvgPlusMinor, null)));
  const handleClearAllFilters = () => {
    setLocalPinnedFilters([]);
    onClearAll == null ? void 0 : onClearAll();
  };
  const shouldShowAddButton = filters.some((filter) => !filter.pinned);
  const additionalContent = (0, import_react168.useMemo)(() => {
    return import_react168.default.createElement(import_react168.default.Fragment, null, import_react168.default.createElement("div", {
      className: styles68.Spinner
    }, loading ? import_react168.default.createElement(Spinner, {
      size: "small"
    }) : null), children2);
  }, [loading, children2]);
  const containerSpacing = se23 ? {
    paddingInlineStart: "2",
    paddingInlineEnd: "2",
    paddingBlockStart: "2",
    paddingBlockEnd: "2"
  } : {
    paddingBlockStart: {
      xs: "3",
      md: "2"
    },
    paddingBlockEnd: {
      xs: "3",
      md: "2"
    },
    paddingInlineStart: "2",
    paddingInlineEnd: {
      xs: "4",
      md: "3"
    }
  };
  const queryFieldMarkup = hideQueryField ? null : import_react168.default.createElement("div", {
    className: classNames(styles68.Container, se23 && styles68.ContainerUplift)
  }, import_react168.default.createElement(Box, containerSpacing, import_react168.default.createElement(HorizontalStack, {
    align: "start",
    blockAlign: "center",
    gap: {
      xs: "400",
      md: "300"
    }
  }, import_react168.default.createElement("div", {
    className: styles68.SearchField,
    style: mountedState ? {
      ...defaultStyle,
      ...transitionStyles[mountedState]
    } : void 0
  }, import_react168.default.createElement(SearchField2, {
    onChange: onQueryChange,
    onFocus: onQueryFocus,
    onBlur: onQueryBlur,
    onClear: onQueryClear,
    value: queryValue,
    placeholder: queryPlaceholder,
    focused,
    disabled: disabled || disableQueryField,
    borderlessQueryField
  })), additionalContent)));
  const mountedStateStyles = mountedState && !hideQueryField ? {
    ...defaultFilterStyles,
    ...transitionFilterStyles[mountedState]
  } : void 0;
  const pinnedFiltersMarkup = pinnedFilters.map(({
    key: filterKey,
    ...pinnedFilter
  }) => {
    const appliedFilter = appliedFilters == null ? void 0 : appliedFilters.find(({
      key
    }) => key === filterKey);
    const handleFilterPillRemove = () => {
      setLocalPinnedFilters((currentLocalPinnedFilters) => currentLocalPinnedFilters.filter((key) => key !== filterKey));
      appliedFilter == null ? void 0 : appliedFilter.onRemove(filterKey);
    };
    return import_react168.default.createElement(FilterPill, Object.assign({
      key: filterKey
    }, pinnedFilter, {
      initialActive: hasMounted.current && !pinnedFilter.pinned && !appliedFilter,
      label: (appliedFilter == null ? void 0 : appliedFilter.label) || pinnedFilter.label,
      filterKey,
      selected: appliedFilterKeys == null ? void 0 : appliedFilterKeys.includes(filterKey),
      onRemove: handleFilterPillRemove,
      disabled: pinnedFilter.disabled || disableFilters,
      closeOnChildOverlayClick
    }));
  });
  const addButton = shouldShowAddButton ? import_react168.default.createElement("div", {
    className: classNames(styles68.AddFilterActivator, hasOneOrMorePinnedFilters && styles68.AddFilterActivatorMultiple)
  }, import_react168.default.createElement(Popover2, {
    active: popoverActive && !disabled,
    activator: addFilterActivator,
    onClose: togglePopoverActive
  }, import_react168.default.createElement(ActionList, {
    actionRole: "menuitem",
    items: unsectionedFilters,
    sections: sectionedFilters
  }))) : null;
  const clearAllMarkup = (appliedFilters == null ? void 0 : appliedFilters.length) || localPinnedFilters.length ? import_react168.default.createElement("div", {
    className: classNames(styles68.ClearAll, hasOneOrMorePinnedFilters && shouldShowAddButton && styles68.MultiplePinnedFilterClearAll)
  }, import_react168.default.createElement(Button, {
    size: "micro",
    plain: true,
    onClick: handleClearAllFilters,
    removeUnderline: true,
    monochrome: se23
  }, i18n.translate("Polaris.Filters.clearFilters"))) : null;
  const filtersMarkup = hideFilters || filters.length === 0 ? null : import_react168.default.createElement("div", {
    className: classNames(styles68.FiltersWrapper, shouldShowAddButton && hasOneOrMorePinnedFilters && styles68.FiltersWrapperWithAddButton),
    "aria-live": "polite",
    style: mountedStateStyles
  }, import_react168.default.createElement("div", {
    className: classNames(styles68.FiltersInner)
  }, import_react168.default.createElement("div", {
    className: classNames(styles68.FiltersStickyArea)
  }, pinnedFiltersMarkup, addButton, clearAllMarkup)), hideQueryField ? import_react168.default.createElement(Box, {
    paddingInlineEnd: "300",
    paddingBlockStart: "200",
    paddingBlockEnd: "200"
  }, import_react168.default.createElement(HorizontalStack, {
    align: "start",
    blockAlign: "center",
    gap: {
      xs: "400",
      md: "300"
    }
  }, additionalContent)) : null);
  return import_react168.default.createElement("div", {
    className: classNames(styles68.Filters, hideQueryField && styles68.hideQueryField)
  }, queryFieldMarkup, filtersMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/Focus/Focus.js
var import_react169 = __toESM(require_react());
var Focus = (0, import_react169.memo)(function Focus2({
  children: children2,
  disabled,
  root
}) {
  (0, import_react169.useEffect)(() => {
    if (disabled || !root) {
      return;
    }
    const node = isRef(root) ? root.current : root;
    if (!node || node.querySelector("[autofocus]")) {
      return;
    }
    focusFirstFocusableNode(node, false);
  }, [disabled, root]);
  return import_react169.default.createElement(import_react169.default.Fragment, null, children2);
});
function isRef(ref) {
  return ref.current !== void 0;
}

// node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.js
var import_react170 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.scss.js
var styles71 = {
  "FooterHelp": "Polaris-FooterHelp",
  "Text": "Polaris-FooterHelp__Text"
};

// node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.js
function FooterHelp({
  children: children2
}) {
  return import_react170.default.createElement("div", {
    className: styles71.FooterHelp
  }, import_react170.default.createElement("div", {
    className: styles71.Text
  }, children2));
}

// node_modules/@shopify/polaris/build/esm/components/Form/Form.js
var import_react171 = __toESM(require_react());
function Form({
  acceptCharset,
  action,
  autoComplete,
  children: children2,
  encType,
  implicitSubmit = true,
  method = "post",
  name,
  noValidate,
  preventDefault: preventDefault3 = true,
  target,
  onSubmit
}) {
  const i18n = useI18n();
  const handleSubmit = (0, import_react171.useCallback)((event) => {
    if (!preventDefault3) {
      return;
    }
    event.preventDefault();
    onSubmit(event);
  }, [onSubmit, preventDefault3]);
  const autoCompleteInputs = normalizeAutoComplete(autoComplete);
  const submitMarkup = implicitSubmit ? import_react171.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, import_react171.default.createElement("button", {
    type: "submit",
    "aria-hidden": "true",
    tabIndex: -1
  }, i18n.translate("Polaris.Common.submit"))) : null;
  return import_react171.default.createElement("form", {
    acceptCharset,
    action,
    autoComplete: autoCompleteInputs,
    encType,
    method,
    name,
    noValidate,
    target,
    onSubmit: handleSubmit
  }, submitMarkup, children2);
}
function normalizeAutoComplete(autoComplete) {
  if (autoComplete == null) {
    return autoComplete;
  }
  return autoComplete ? "on" : "off";
}

// node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.js
var import_react174 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.scss.js
var styles72 = {
  "FormLayout": "Polaris-FormLayout",
  "Title": "Polaris-FormLayout__Title",
  "Items": "Polaris-FormLayout__Items",
  "Item": "Polaris-FormLayout__Item",
  "grouped": "Polaris-FormLayout--grouped",
  "condensed": "Polaris-FormLayout--condensed"
};

// node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Group/Group.js
var import_react173 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Item/Item.js
var import_react172 = __toESM(require_react());
function Item5({
  children: children2
}) {
  return children2 ? import_react172.default.createElement("div", {
    className: styles72.Item
  }, children2) : null;
}

// node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Group/Group.js
function Group({
  children: children2,
  condensed,
  title,
  helpText
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(condensed ? styles72.condensed : styles72.grouped);
  const id = (0, import_react173.useId)();
  let helpTextElement = null;
  let helpTextID3;
  let titleElement = null;
  let titleID;
  if (helpText) {
    helpTextID3 = `${id}HelpText`;
    helpTextElement = import_react173.default.createElement(Box, {
      id: helpTextID3,
      paddingBlockStart: "200",
      paddingInlineStart: polarisSummerEditions2023 ? "200" : "500",
      paddingBlockEnd: "0",
      paddingInlineEnd: polarisSummerEditions2023 ? "200" : "500",
      color: "text-subdued"
    }, helpText);
  }
  if (title) {
    titleID = `${id}Title`;
    titleElement = import_react173.default.createElement("div", {
      id: titleID,
      className: styles72.Title
    }, title);
  }
  const itemsMarkup = import_react173.Children.map(children2, (child) => wrapWithComponent(child, Item5, {}));
  return import_react173.default.createElement("div", {
    role: "group",
    className,
    "aria-labelledby": titleID,
    "aria-describedby": helpTextID3
  }, titleElement, import_react173.default.createElement("div", {
    className: styles72.Items
  }, itemsMarkup), helpTextElement);
}

// node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.js
var FormLayout = (0, import_react174.memo)(function FormLayout2({
  children: children2
}) {
  return import_react174.default.createElement("div", {
    className: styles72.FormLayout
  }, import_react174.Children.map(children2, wrapChildren));
});
FormLayout.Group = Group;
function wrapChildren(child, index) {
  if (isElementOfType(child, Group)) {
    return child;
  }
  const props = {
    key: index
  };
  return wrapWithComponent(child, Item5, props);
}

// node_modules/@shopify/polaris/build/esm/components/Frame/Frame.js
var import_react194 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/set-root-property.js
function setRootProperty(name, value, node) {
  if (!document)
    return;
  const element = node || document.documentElement;
  element.style.setProperty(name, value);
}

// node_modules/@shopify/polaris/build/esm/components/Frame/Frame.scss.js
var styles73 = {
  "Frame": "Polaris-Frame",
  "Navigation": "Polaris-Frame__Navigation",
  "hasTopBar": "Polaris-Frame--hasTopBar",
  "Navigation-enter": "Polaris-Frame__Navigation--enter",
  "Navigation-enterActive": "Polaris-Frame__Navigation--enterActive",
  "Navigation-exit": "Polaris-Frame__Navigation--exit",
  "Navigation-exitActive": "Polaris-Frame__Navigation--exitActive",
  "NavigationDismiss": "Polaris-Frame__NavigationDismiss",
  "Navigation-visible": "Polaris-Frame__Navigation--visible",
  "TopBar": "Polaris-Frame__TopBar",
  "ContextualSaveBar": "Polaris-Frame__ContextualSaveBar",
  "Main": "Polaris-Frame__Main",
  "hasNav": "Polaris-Frame--hasNav",
  "Content": "Polaris-Frame__Content",
  "hasSidebar": "Polaris-Frame--hasSidebar",
  "GlobalRibbonContainer": "Polaris-Frame__GlobalRibbonContainer",
  "LoadingBar": "Polaris-Frame__LoadingBar",
  "Skip": "Polaris-Frame__Skip",
  "focused": "Polaris-Frame--focused",
  "pressed": "Polaris-Frame--pressed"
};

// node_modules/@shopify/polaris/build/esm/utilities/media-query/hooks.js
var import_react175 = __toESM(require_react());
function useMediaQuery() {
  const mediaQuery = (0, import_react175.useContext)(MediaQueryContext);
  if (!mediaQuery) {
    throw new Error("No mediaQuery was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return mediaQuery;
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.js
var import_react177 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-is-mounted-ref.js
var import_react176 = __toESM(require_react());
function useIsMountedRef() {
  const isMounted = (0, import_react176.useRef)(false);
  (0, import_react176.useEffect)(() => {
    isMounted.current = true;
    return () => {
      isMounted.current = false;
    };
  }, []);
  return isMounted;
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.scss.js
var styles74 = {
  "Loading": "Polaris-Frame-Loading",
  "Level": "Polaris-Frame-Loading__Level"
};

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.js
var STUCK_THRESHOLD = 99;
function Loading2() {
  const i18n = useI18n();
  const isMountedRef = useIsMountedRef();
  const [progress, setProgress] = (0, import_react177.useState)(0);
  const [animating, setAnimating] = (0, import_react177.useState)(false);
  (0, import_react177.useEffect)(() => {
    if (progress >= STUCK_THRESHOLD || animating) {
      return;
    }
    requestAnimationFrame(() => {
      if (!isMountedRef.current)
        return;
      const step = Math.max((STUCK_THRESHOLD - progress) / 10, 1);
      setAnimating(true);
      setProgress(progress + step);
    });
  }, [progress, animating, isMountedRef]);
  const customStyles = {
    transform: `scaleX(${Math.floor(progress) / 100})`
  };
  return import_react177.default.createElement("div", {
    className: styles74.Loading,
    "aria-valuenow": progress,
    "aria-valuemin": 0,
    "aria-valuemax": 100,
    role: "progressbar",
    "aria-label": i18n.translate("Polaris.Loading.label")
  }, import_react177.default.createElement("div", {
    className: styles74.Level,
    style: customStyles,
    onTransitionEnd: () => setAnimating(false)
  }));
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.js
var import_react178 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.scss.js
var styles75 = {
  "startFade": "Polaris-Frame-CSSAnimation--startFade",
  "endFade": "Polaris-Frame-CSSAnimation--endFade"
};

// node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.js
var TransitionStatus2;
(function(TransitionStatus3) {
  TransitionStatus3["Entering"] = "entering";
  TransitionStatus3["Entered"] = "entered";
  TransitionStatus3["Exiting"] = "exiting";
  TransitionStatus3["Exited"] = "exited";
})(TransitionStatus2 || (TransitionStatus2 = {}));
function CSSAnimation({
  in: inProp,
  className,
  type,
  children: children2
}) {
  const [transitionStatus, setTransitionStatus] = (0, import_react178.useState)(inProp ? TransitionStatus2.Entering : TransitionStatus2.Exited);
  const isMounted = (0, import_react178.useRef)(false);
  const node = (0, import_react178.useRef)(null);
  (0, import_react178.useEffect)(() => {
    if (!isMounted.current)
      return;
    transitionStatus === TransitionStatus2.Entering && changeTransitionStatus(TransitionStatus2.Entered);
  }, [transitionStatus]);
  (0, import_react178.useEffect)(() => {
    if (!isMounted.current)
      return;
    inProp && changeTransitionStatus(TransitionStatus2.Entering);
    !inProp && changeTransitionStatus(TransitionStatus2.Exiting);
  }, [inProp]);
  (0, import_react178.useEffect)(() => {
    isMounted.current = true;
  }, []);
  const wrapperClassName = classNames(className, styles75[variationName("start", type)], inProp && styles75[variationName("end", type)]);
  const content = transitionStatus === TransitionStatus2.Exited && !inProp ? null : children2;
  return import_react178.default.createElement("div", {
    className: wrapperClassName,
    ref: node,
    onTransitionEnd: handleTransitionEnd
  }, content);
  function handleTransitionEnd() {
    transitionStatus === TransitionStatus2.Exiting && changeTransitionStatus(TransitionStatus2.Exited);
  }
  function changeTransitionStatus(transitionStatus2) {
    setTransitionStatus(transitionStatus2);
    if (transitionStatus2 === TransitionStatus2.Entering)
      node.current && node.current.getBoundingClientRect();
  }
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.js
var import_react188 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/pluck-deep.js
function pluckDeep(obj, key) {
  if (!obj) {
    return null;
  }
  const keys = Object.keys(obj);
  for (const currKey of keys) {
    if (currKey === key) {
      return obj[key];
    }
    if (isObject(obj[currKey])) {
      const plucked = pluckDeep(obj[currKey], key);
      if (plucked) {
        return plucked;
      }
    }
  }
  return null;
}

// node_modules/@shopify/polaris/build/esm/utilities/get-width.js
function getWidth(value = {}, defaultWidth = 0, key = "width") {
  const width2 = typeof value === "number" ? value : pluckDeep(value, key);
  return width2 ? `${width2}px` : `${defaultWidth}px`;
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.scss.js
var styles76 = {
  "ContextualSaveBar": "Polaris-Frame-ContextualSaveBar",
  "LogoContainer": "Polaris-Frame-ContextualSaveBar__LogoContainer",
  "ContextControl": "Polaris-Frame-ContextualSaveBar__ContextControl",
  "Contents": "Polaris-Frame-ContextualSaveBar__Contents",
  "fullWidth": "Polaris-Frame-ContextualSaveBar--fullWidth",
  "MessageContainer": "Polaris-Frame-ContextualSaveBar__MessageContainer",
  "ActionContainer": "Polaris-Frame-ContextualSaveBar__ActionContainer",
  "Action": "Polaris-Frame-ContextualSaveBar__Action"
};

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.js
var import_react187 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Modal/Modal.js
var import_react186 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Modal/Modal.scss.js
var styles77 = {
  "Body": "Polaris-Modal__Body",
  "IFrame": "Polaris-Modal__IFrame"
};

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.js
var import_react179 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.scss.js
var styles78 = {
  "Section": "Polaris-Modal-Section",
  "titleHidden": "Polaris-Modal-Section--titleHidden"
};

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.js
function Section5({
  children: children2,
  flush = false,
  subdued = false,
  titleHidden = false
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles78.Section, titleHidden && styles78.titleHidden);
  return import_react179.default.createElement("div", {
    className
  }, import_react179.default.createElement(Box, Object.assign({
    as: "section",
    padding: flush ? "0" : polarisSummerEditions2023 ? "400" : "500"
  }, titleHidden && {
    paddingInlineEnd: "0"
  }, subdued && {
    background: polarisSummerEditions2023 ? "bg-secondary-experimental" : "bg-subdued"
  }), children2));
}

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.js
var import_react182 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.scss.js
var styles79 = {
  "Container": "Polaris-Modal-Dialog__Container",
  "Dialog": "Polaris-Modal-Dialog",
  "Modal": "Polaris-Modal-Dialog__Modal",
  "limitHeight": "Polaris-Modal-Dialog--limitHeight",
  "sizeSmall": "Polaris-Modal-Dialog--sizeSmall",
  "sizeLarge": "Polaris-Modal-Dialog--sizeLarge",
  "fullScreen": "Polaris-Modal-Dialog--fullScreen",
  "animateFadeUp": "Polaris-Modal-Dialog--animateFadeUp",
  "entering": "Polaris-Modal-Dialog--entering",
  "exiting": "Polaris-Modal-Dialog--exiting",
  "exited": "Polaris-Modal-Dialog--exited",
  "entered": "Polaris-Modal-Dialog--entered"
};

// node_modules/@shopify/polaris/build/esm/components/TrapFocus/TrapFocus.js
var import_react181 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/focus-manager/hooks.js
var import_react180 = __toESM(require_react());
function useFocusManager({
  trapping
}) {
  const focusManager = (0, import_react180.useContext)(FocusManagerContext);
  const id = (0, import_react180.useId)();
  if (!focusManager) {
    throw new MissingAppProviderError("No FocusManager was provided.");
  }
  const {
    trapFocusList,
    add: addFocusItem,
    remove: removeFocusItem
  } = focusManager;
  const canSafelyFocus = trapFocusList[0] === id;
  const value = (0, import_react180.useMemo)(() => ({
    canSafelyFocus
  }), [canSafelyFocus]);
  (0, import_react180.useEffect)(() => {
    if (!trapping)
      return;
    addFocusItem(id);
    return () => {
      removeFocusItem(id);
    };
  }, [addFocusItem, id, removeFocusItem, trapping]);
  return value;
}

// node_modules/@shopify/polaris/build/esm/components/TrapFocus/TrapFocus.js
function TrapFocus({
  trapping = true,
  children: children2
}) {
  const {
    canSafelyFocus
  } = useFocusManager({
    trapping
  });
  const focusTrapWrapper = (0, import_react181.useRef)(null);
  const [disableFocus, setDisableFocus] = (0, import_react181.useState)(true);
  (0, import_react181.useEffect)(() => {
    const disable = canSafelyFocus && !(focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement)) ? !trapping : true;
    setDisableFocus(disable);
  }, [canSafelyFocus, trapping]);
  const handleFocusIn = (event) => {
    const containerContentsHaveFocus = focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement);
    if (trapping === false || !focusTrapWrapper.current || containerContentsHaveFocus || event.target instanceof Element && event.target.matches(`${portal.selector} *`)) {
      return;
    }
    if (canSafelyFocus && event.target instanceof HTMLElement && focusTrapWrapper.current !== event.target && !focusTrapWrapper.current.contains(event.target)) {
      focusFirstFocusableNode(focusTrapWrapper.current);
    }
  };
  const handleTab = (event) => {
    if (trapping === false || !focusTrapWrapper.current) {
      return;
    }
    const firstFocusableNode = findFirstKeyboardFocusableNode(focusTrapWrapper.current);
    const lastFocusableNode = findLastKeyboardFocusableNode(focusTrapWrapper.current);
    if (event.target === lastFocusableNode && !event.shiftKey) {
      event.preventDefault();
      focusFirstKeyboardFocusableNode(focusTrapWrapper.current);
    }
    if (event.target === firstFocusableNode && event.shiftKey) {
      event.preventDefault();
      focusLastKeyboardFocusableNode(focusTrapWrapper.current);
    }
  };
  return import_react181.default.createElement(Focus, {
    disabled: disableFocus,
    root: focusTrapWrapper.current
  }, import_react181.default.createElement("div", {
    ref: focusTrapWrapper
  }, import_react181.default.createElement(EventListener, {
    event: "focusin",
    handler: handleFocusIn
  }), import_react181.default.createElement(KeypressListener, {
    keyCode: Key.Tab,
    keyEvent: "keydown",
    handler: handleTab
  }), children2));
}

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.js
function Dialog({
  instant,
  labelledBy,
  children: children2,
  onClose,
  onExited,
  onEntered,
  large,
  small,
  limitHeight,
  fullScreen,
  setClosing,
  hasToasts,
  ...props
}) {
  const containerNode = (0, import_react182.useRef)(null);
  const frameContext = (0, import_react182.useContext)(FrameContext);
  let toastMessages;
  if (frameContext) {
    toastMessages = frameContext.toastMessages;
  }
  const classes = classNames(styles79.Modal, small && styles79.sizeSmall, large && styles79.sizeLarge, limitHeight && styles79.limitHeight, fullScreen && styles79.fullScreen);
  const TransitionChild = instant ? Transition_default : FadeUp;
  (0, import_react182.useEffect)(() => {
    containerNode.current && !containerNode.current.contains(document.activeElement) && focusFirstFocusableNode(containerNode.current);
  }, []);
  const handleKeyDown5 = () => {
    if (setClosing) {
      setClosing(true);
    }
  };
  const handleKeyUp = () => {
    if (setClosing) {
      setClosing(false);
    }
    onClose();
  };
  const ariaLiveAnnouncements = import_react182.default.createElement("div", {
    "aria-live": "assertive"
  }, toastMessages ? toastMessages.map((toastMessage) => import_react182.default.createElement(Text, {
    visuallyHidden: true,
    as: "p",
    key: toastMessage.id
  }, toastMessage.content)) : null);
  return import_react182.default.createElement(TransitionChild, Object.assign({}, props, {
    nodeRef: containerNode,
    mountOnEnter: true,
    unmountOnExit: true,
    timeout: parseInt(motion2["motion-duration-200"], 10),
    onEntered,
    onExited
  }), import_react182.default.createElement("div", {
    className: styles79.Container,
    "data-polaris-layer": true,
    "data-polaris-overlay": true,
    ref: containerNode
  }, import_react182.default.createElement(TrapFocus, null, import_react182.default.createElement("div", {
    role: "dialog",
    "aria-modal": true,
    "aria-label": labelledBy,
    "aria-labelledby": labelledBy,
    tabIndex: -1,
    className: styles79.Dialog
  }, import_react182.default.createElement("div", {
    className: classes
  }, import_react182.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    keyEvent: "keydown",
    handler: handleKeyDown5
  }), import_react182.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    handler: handleKeyUp
  }), children2), ariaLiveAnnouncements))));
}
var fadeUpClasses = {
  appear: classNames(styles79.animateFadeUp, styles79.entering),
  appearActive: classNames(styles79.animateFadeUp, styles79.entered),
  enter: classNames(styles79.animateFadeUp, styles79.entering),
  enterActive: classNames(styles79.animateFadeUp, styles79.entered),
  exit: classNames(styles79.animateFadeUp, styles79.exiting),
  exitActive: classNames(styles79.animateFadeUp, styles79.exited)
};
function FadeUp({
  children: children2,
  ...props
}) {
  return import_react182.default.createElement(CSSTransition_default, Object.assign({}, props, {
    classNames: fadeUpClasses
  }), children2);
}

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Header/Header.js
var import_react184 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Modal/components/CloseButton/CloseButton.js
var import_react183 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Modal/components/CloseButton/CloseButton.scss.js
var styles80 = {
  "CloseButton": "Polaris-Modal-CloseButton",
  "pressed": "Polaris-Modal-CloseButton--pressed",
  "titleHidden": "Polaris-Modal-CloseButton--titleHidden"
};

// node_modules/@shopify/polaris/build/esm/components/Modal/components/CloseButton/CloseButton.js
function CloseButton({
  pressed,
  titleHidden = false,
  onClick
}) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  return polarisSummerEditions2023 ? import_react183.default.createElement(Button, {
    primary: true,
    plain: true,
    pressed,
    icon: SvgCancelMajor,
    onClick,
    accessibilityLabel: i18n.translate("Polaris.Common.close")
  }) : import_react183.default.createElement("button", {
    onClick,
    className: classNames(styles80.CloseButton, titleHidden && styles80.titleHidden, pressed && styles80.pressed),
    "aria-label": i18n.translate("Polaris.Common.close")
  }, import_react183.default.createElement(Icon, {
    source: SvgMobileCancelMajor,
    color: "base"
  }));
}

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Header/Header.js
function Header3({
  id,
  children: children2,
  closing,
  titleHidden,
  onClose
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const headerPaddingInline = polarisSummerEditions2023 ? "400" : "500";
  const headerPaddingBlock = "400";
  if (titleHidden || !children2) {
    return polarisSummerEditions2023 ? import_react184.default.createElement(Box, {
      position: "absolute",
      insetInlineEnd: headerPaddingInline,
      insetBlockStart: headerPaddingBlock,
      zIndex: "1"
    }, import_react184.default.createElement(CloseButton, {
      titleHidden,
      onClick: onClose
    })) : import_react184.default.createElement(Box, {
      position: "absolute",
      insetInlineEnd: "0",
      zIndex: "1"
    }, import_react184.default.createElement(HorizontalStack, {
      gap: "400",
      align: "end",
      blockAlign: "center"
    }, import_react184.default.createElement(CloseButton, {
      titleHidden,
      onClick: onClose
    })));
  }
  return import_react184.default.createElement(Box, {
    paddingBlockStart: "400",
    paddingBlockEnd: "400",
    paddingInlineStart: headerPaddingInline,
    paddingInlineEnd: headerPaddingInline,
    borderBlockEndWidth: "1",
    borderColor: polarisSummerEditions2023 ? "border" : "border-subdued",
    background: polarisSummerEditions2023 ? "bg-secondary-experimental" : void 0
  }, import_react184.default.createElement(HorizontalGrid, {
    columns: {
      xs: "1fr auto"
    },
    gap: "400"
  }, import_react184.default.createElement(HorizontalStack, {
    gap: "400",
    blockAlign: "center"
  }, import_react184.default.createElement(Text, {
    id,
    as: "h2",
    variant: polarisSummerEditions2023 ? "headingMd" : "headingLg",
    breakWord: true
  }, children2)), import_react184.default.createElement(CloseButton, {
    pressed: closing,
    titleHidden,
    onClick: onClose
  })));
}

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Footer/Footer.js
var import_react185 = __toESM(require_react());
function Footer({
  primaryAction,
  secondaryActions,
  children: children2
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const primaryActionButton = primaryAction && buttonsFrom(primaryAction, {
    primary: true
  }) || null;
  const secondaryActionButtons = secondaryActions && buttonsFrom(secondaryActions) || null;
  const actions = primaryActionButton || secondaryActionButtons ? import_react185.default.createElement(HorizontalStack, {
    gap: "200"
  }, secondaryActionButtons, primaryActionButton) : null;
  return import_react185.default.createElement(HorizontalStack, {
    gap: "400",
    blockAlign: "center"
  }, import_react185.default.createElement(Box, {
    borderColor: polarisSummerEditions2023 ? "border" : "border-subdued",
    borderBlockStartWidth: "1",
    minHeight: polarisSummerEditions2023 ? void 0 : "var(--p-space-1600)",
    padding: "400",
    paddingInlineStart: polarisSummerEditions2023 ? void 0 : "500",
    paddingInlineEnd: polarisSummerEditions2023 ? void 0 : "500",
    width: "100%"
  }, import_react185.default.createElement(HorizontalStack, {
    gap: "400",
    blockAlign: "center",
    align: "space-between"
  }, import_react185.default.createElement(Box, null, children2), actions)));
}

// node_modules/@shopify/polaris/build/esm/components/Modal/Modal.js
var IFRAME_LOADING_HEIGHT = 200;
var DEFAULT_IFRAME_CONTENT_HEIGHT = 400;
var Modal = function Modal2({
  children: children2,
  title,
  titleHidden = false,
  src,
  iFrameName,
  open,
  instant,
  sectioned,
  loading,
  large,
  small,
  limitHeight,
  footer,
  primaryAction,
  secondaryActions,
  onScrolledToBottom,
  activator,
  onClose,
  onIFrameLoad,
  onTransitionEnd,
  noScroll,
  fullScreen
}) {
  const [iframeHeight, setIframeHeight] = (0, import_react186.useState)(IFRAME_LOADING_HEIGHT);
  const [closing, setClosing] = (0, import_react186.useState)(false);
  const headerId = (0, import_react186.useId)();
  const activatorRef = (0, import_react186.useRef)(null);
  const i18n = useI18n();
  const iframeTitle = i18n.translate("Polaris.Modal.iFrameTitle");
  let dialog;
  let backdrop;
  const handleEntered = (0, import_react186.useCallback)(() => {
    if (onTransitionEnd) {
      onTransitionEnd();
    }
  }, [onTransitionEnd]);
  const handleExited = (0, import_react186.useCallback)(() => {
    setIframeHeight(IFRAME_LOADING_HEIGHT);
    const activatorElement = activator && isRef2(activator) ? activator && activator.current : activatorRef.current;
    if (activatorElement) {
      requestAnimationFrame(() => focusFirstFocusableNode(activatorElement));
    }
  }, [activator]);
  const handleIFrameLoad = (0, import_react186.useCallback)((evt) => {
    const iframe = evt.target;
    if (iframe && iframe.contentWindow) {
      try {
        setIframeHeight(iframe.contentWindow.document.body.scrollHeight);
      } catch (_error) {
        setIframeHeight(DEFAULT_IFRAME_CONTENT_HEIGHT);
      }
    }
    if (onIFrameLoad != null) {
      onIFrameLoad(evt);
    }
  }, [onIFrameLoad]);
  if (open) {
    const footerMarkup = !footer && !primaryAction && !secondaryActions ? null : import_react186.default.createElement(Footer, {
      primaryAction,
      secondaryActions
    }, footer);
    const content = sectioned ? wrapWithComponent(children2, Section5, {
      titleHidden
    }) : children2;
    const body = loading ? import_react186.default.createElement(Box, {
      padding: "400"
    }, import_react186.default.createElement(HorizontalStack, {
      gap: "400",
      align: "center",
      blockAlign: "center"
    }, import_react186.default.createElement(Spinner, null))) : content;
    const scrollContainerMarkup = noScroll ? import_react186.default.createElement(Box, {
      width: "100%",
      overflowX: "hidden"
    }, body) : import_react186.default.createElement(Scrollable, {
      shadow: true,
      className: styles77.Body,
      onScrolledToBottom
    }, body);
    const bodyMarkup = src ? import_react186.default.createElement("iframe", {
      name: iFrameName,
      title: iframeTitle,
      src,
      className: styles77.IFrame,
      onLoad: handleIFrameLoad,
      style: {
        height: `${iframeHeight}px`
      }
    }) : scrollContainerMarkup;
    dialog = import_react186.default.createElement(Dialog, {
      instant,
      labelledBy: headerId,
      onClose,
      onEntered: handleEntered,
      onExited: handleExited,
      large,
      small,
      limitHeight,
      fullScreen,
      setClosing
    }, import_react186.default.createElement(Header3, {
      titleHidden,
      id: headerId,
      closing,
      onClose
    }, title), bodyMarkup, footerMarkup);
    backdrop = import_react186.default.createElement(Backdrop, {
      setClosing,
      onClick: onClose
    });
  }
  const animated = !instant;
  const activatorMarkup = activator && !isRef2(activator) ? (0, import_react186.cloneElement)(activator, {
    ref: activatorRef
  }) : null;
  return import_react186.default.createElement(WithinContentContext.Provider, {
    value: true
  }, activatorMarkup, import_react186.default.createElement(Portal, {
    idPrefix: "modal"
  }, import_react186.default.createElement(TransitionGroup_default, {
    appear: animated,
    enter: animated,
    exit: animated
  }, dialog), backdrop));
};
function isRef2(ref) {
  return Object.prototype.hasOwnProperty.call(ref, "current");
}
Modal.Section = Section5;

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.js
function DiscardConfirmationModal({
  open,
  onDiscard,
  onCancel
}) {
  const i18n = useI18n();
  return import_react187.default.createElement(Modal, {
    title: i18n.translate("Polaris.DiscardConfirmationModal.title"),
    open,
    onClose: onCancel,
    primaryAction: {
      content: i18n.translate("Polaris.DiscardConfirmationModal.primaryAction"),
      destructive: true,
      onAction: onDiscard
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.DiscardConfirmationModal.secondaryAction"),
      onAction: onCancel
    }],
    sectioned: true
  }, i18n.translate("Polaris.DiscardConfirmationModal.message"));
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.js
function ContextualSaveBar3({
  alignContentFlush,
  message,
  saveAction,
  discardAction,
  fullWidth,
  contextControl,
  secondaryMenu
}) {
  const i18n = useI18n();
  const {
    logo
  } = useFrame();
  const {
    value: discardConfirmationModalVisible,
    toggle: toggleDiscardConfirmationModal,
    setFalse: closeDiscardConfirmationModal
  } = useToggle(false);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const handleDiscardAction = (0, import_react188.useCallback)(() => {
    if (discardAction && discardAction.onAction) {
      discardAction.onAction();
    }
    closeDiscardConfirmationModal();
  }, [closeDiscardConfirmationModal, discardAction]);
  const discardActionContent = discardAction && discardAction.content ? discardAction.content : i18n.translate("Polaris.ContextualSaveBar.discard");
  let discardActionHandler;
  if (discardAction && discardAction.discardConfirmationModal) {
    discardActionHandler = toggleDiscardConfirmationModal;
  } else if (discardAction) {
    discardActionHandler = discardAction.onAction;
  }
  const discardConfirmationModalMarkup = discardAction && discardAction.onAction && discardAction.discardConfirmationModal && import_react188.default.createElement(DiscardConfirmationModal, {
    open: discardConfirmationModalVisible,
    onCancel: toggleDiscardConfirmationModal,
    onDiscard: handleDiscardAction
  });
  const discardActionMarkup = discardAction && import_react188.default.createElement(Button, {
    plain: polarisSummerEditions2023,
    primary: polarisSummerEditions2023,
    size: polarisSummerEditions2023 ? "large" : void 0,
    url: discardAction.url,
    onClick: discardActionHandler,
    loading: discardAction.loading,
    disabled: discardAction.disabled,
    accessibilityLabel: discardAction.content
  }, discardActionContent);
  const saveActionContent = saveAction && saveAction.content ? saveAction.content : i18n.translate("Polaris.ContextualSaveBar.save");
  const saveActionMarkup = saveAction && import_react188.default.createElement(Button, {
    primary: !polarisSummerEditions2023,
    primarySuccess: polarisSummerEditions2023,
    size: polarisSummerEditions2023 ? "large" : void 0,
    url: saveAction.url,
    onClick: saveAction.onAction,
    loading: saveAction.loading,
    disabled: saveAction.disabled,
    accessibilityLabel: saveAction.content
  }, saveActionContent);
  const width2 = getWidth(logo, 104);
  const imageMarkup = logo && import_react188.default.createElement(Image, {
    style: {
      width: width2
    },
    source: logo.contextualSaveBarSource || "",
    alt: ""
  });
  const logoMarkup = alignContentFlush || contextControl ? null : import_react188.default.createElement("div", {
    className: styles76.LogoContainer,
    style: {
      width: width2
    }
  }, imageMarkup);
  const contextControlMarkup = contextControl ? import_react188.default.createElement("div", {
    className: styles76.ContextControl
  }, contextControl) : null;
  const contentsClassName = classNames(styles76.Contents, fullWidth && styles76.fullWidth);
  return import_react188.default.createElement(import_react188.default.Fragment, null, import_react188.default.createElement("div", {
    className: styles76.ContextualSaveBar
  }, contextControlMarkup, logoMarkup, import_react188.default.createElement("div", {
    className: contentsClassName
  }, polarisSummerEditions2023 ? import_react188.default.createElement("div", {
    className: styles76.MessageContainer
  }, import_react188.default.createElement(Icon, {
    source: SvgCircleAlertMajor
  }), message && import_react188.default.createElement(Text, {
    as: "h2",
    variant: "headingMd",
    color: "text-inverse",
    truncate: true
  }, message)) : message && import_react188.default.createElement(Text, {
    as: "h2",
    variant: "headingMd",
    color: "text-inverse",
    truncate: true
  }, message), import_react188.default.createElement("div", {
    className: styles76.ActionContainer
  }, import_react188.default.createElement(LegacyStack, {
    spacing: "tight",
    wrap: false
  }, secondaryMenu, discardActionMarkup, saveActionMarkup)))), discardConfirmationModalMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.js
var import_react193 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-effect.js
var import_react190 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-compare-ref.js
var import_react189 = __toESM(require_react());
var import_react_fast_compare2 = __toESM(require_react_fast_compare());
function useDeepCompareRef(dependencies, comparator = import_react_fast_compare2.default) {
  const dependencyList = (0, import_react189.useRef)(dependencies);
  if (!comparator(dependencyList.current, dependencies)) {
    dependencyList.current = dependencies;
  }
  return dependencyList.current;
}

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-effect.js
function useDeepEffect(callback, dependencies, customCompare) {
  (0, import_react190.useEffect)(callback, useDeepCompareRef(dependencies, customCompare));
}

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-callback.js
var import_react191 = __toESM(require_react());
function useDeepCallback(callback, dependencies, customCompare) {
  return (0, import_react191.useCallback)(callback, useDeepCompareRef(dependencies, customCompare));
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.scss.js
var styles81 = {
  "ToastManager": "Polaris-Frame-ToastManager",
  "ToastWrapper": "Polaris-Frame-ToastManager__ToastWrapper",
  "ToastWrapper-enter": "Polaris-Frame-ToastManager__ToastWrapper--enter",
  "ToastWrapper-exit": "Polaris-Frame-ToastManager__ToastWrapper--exit",
  "ToastWrapper-enter-done": "Polaris-Frame-ToastManager--toastWrapperEnterDone"
};

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.js
var import_react192 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.scss.js
var styles82 = {
  "Toast": "Polaris-Frame-Toast",
  "Action": "Polaris-Frame-Toast__Action",
  "error": "Polaris-Frame-Toast--error",
  "CloseButton": "Polaris-Frame-Toast__CloseButton",
  "LeadingIcon": "Polaris-Frame-Toast__LeadingIcon"
};

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.js
var DEFAULT_TOAST_DURATION = 5e3;
var DEFAULT_TOAST_DURATION_WITH_ACTION = 1e4;
function Toast({
  content,
  onDismiss,
  duration,
  error,
  action
}) {
  (0, import_react192.useEffect)(() => {
    let timeoutDuration = duration || DEFAULT_TOAST_DURATION;
    if (action && !duration) {
      timeoutDuration = DEFAULT_TOAST_DURATION_WITH_ACTION;
    } else if (action && duration && duration < DEFAULT_TOAST_DURATION_WITH_ACTION) {
      console.log("Toast with action should persist for at least 10,000 milliseconds to give the merchant enough time to act on it.");
    }
    const timer = setTimeout(onDismiss, timeoutDuration);
    return () => {
      clearTimeout(timer);
    };
  }, [action, duration, onDismiss]);
  const dismissMarkup = import_react192.default.createElement("button", {
    type: "button",
    className: styles82.CloseButton,
    onClick: onDismiss
  }, import_react192.default.createElement(Icon, {
    source: SvgCancelSmallMinor
  }));
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const actionMarkup = action ? import_react192.default.createElement("div", {
    className: styles82.Action
  }, import_react192.default.createElement(Button, {
    plain: true,
    monochrome: true,
    removeUnderline: polarisSummerEditions2023,
    size: "slim",
    onClick: action.onAction
  }, action.content)) : null;
  const leadingIconMarkup = error ? import_react192.default.createElement("div", {
    className: styles82.LeadingIcon
  }, import_react192.default.createElement(Icon, {
    source: polarisSummerEditions2023 ? SvgAlertMinor : SvgDiamondAlertMinor,
    color: "base"
  })) : null;
  const className = classNames(styles82.Toast, error && styles82.error);
  return import_react192.default.createElement("div", {
    className,
    "aria-live": "assertive"
  }, import_react192.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    handler: onDismiss
  }), leadingIconMarkup, import_react192.default.createElement(HorizontalStack, {
    gap: "400",
    blockAlign: "center"
  }, import_react192.default.createElement(Text, {
    as: "span",
    fontWeight: "medium"
  }, content)), actionMarkup, dismissMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.js
var ToastManager = (0, import_react193.memo)(function ToastManager2({
  toastMessages
}) {
  const toastNodes = [];
  const updateToasts = useDeepCallback(() => {
    let targetInPos = 0;
    toastMessages.forEach((_, index) => {
      const currentToast = toastNodes[index];
      if (!currentToast.current)
        return;
      targetInPos += currentToast.current.clientHeight;
      currentToast.current.style.setProperty("--pc-toast-manager-translate-y-in", `-${targetInPos}px`);
      currentToast.current.style.setProperty("--pc-toast-manager-translate-y-out", `${-targetInPos + 150}px`);
    });
  }, [toastMessages, toastNodes]);
  useDeepEffect(() => {
    updateToasts();
  }, [toastMessages]);
  const toastsMarkup = toastMessages.map((toast, index) => {
    const toastNode = (0, import_react193.createRef)();
    toastNodes[index] = toastNode;
    return import_react193.default.createElement(CSSTransition_default, {
      nodeRef: toastNodes[index],
      key: toast.id,
      timeout: {
        enter: 0,
        exit: 400
      },
      classNames: toastClasses
    }, import_react193.default.createElement("div", {
      ref: toastNode
    }, import_react193.default.createElement(Toast, toast)));
  });
  return import_react193.default.createElement(Portal, {
    idPrefix: "toast"
  }, import_react193.default.createElement(EventListener, {
    event: "resize",
    handler: updateToasts
  }), import_react193.default.createElement("div", {
    className: styles81.ToastManager,
    "aria-live": "assertive"
  }, import_react193.default.createElement(TransitionGroup_default, {
    component: null
  }, toastsMarkup)));
});
var toastClasses = {
  enter: classNames(styles81.ToastWrapper, styles81["ToastWrapper-enter"]),
  enterDone: classNames(styles81.ToastWrapper, styles81["ToastWrapper-enter-done"]),
  exit: classNames(styles81.ToastWrapper, styles81["ToastWrapper-exit"])
};

// node_modules/@shopify/polaris/build/esm/components/Frame/Frame.js
var APP_FRAME_MAIN = "AppFrameMain";
var APP_FRAME_NAV = "AppFrameNav";
var APP_FRAME_TOP_BAR = "AppFrameTopBar";
var APP_FRAME_LOADING_BAR = "AppFrameLoadingBar";
var FrameInner = class extends import_react194.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      skipFocused: false,
      globalRibbonHeight: 0,
      loadingStack: 0,
      toastMessages: [],
      showContextualSaveBar: false
    };
    this.contextualSaveBar = null;
    this.globalRibbonContainer = null;
    this.navigationNode = (0, import_react194.createRef)();
    this.setGlobalRibbonHeight = () => {
      const {
        globalRibbonContainer
      } = this;
      if (globalRibbonContainer) {
        this.setState({
          globalRibbonHeight: globalRibbonContainer.offsetHeight
        }, this.setGlobalRibbonRootProperty);
      }
    };
    this.setOffset = () => {
      const {
        offset = "0px"
      } = this.props;
      setRootProperty("--pc-frame-offset", offset);
    };
    this.setGlobalRibbonRootProperty = () => {
      const {
        globalRibbonHeight
      } = this.state;
      setRootProperty("--pc-frame-global-ribbon-height", `${globalRibbonHeight}px`);
    };
    this.showToast = (toast) => {
      this.setState(({
        toastMessages
      }) => {
        const hasToastById = toastMessages.find(({
          id
        }) => id === toast.id) != null;
        return {
          toastMessages: hasToastById ? toastMessages : [...toastMessages, toast]
        };
      });
    };
    this.hideToast = ({
      id
    }) => {
      this.setState(({
        toastMessages
      }) => {
        return {
          toastMessages: toastMessages.filter(({
            id: toastId
          }) => id !== toastId)
        };
      });
    };
    this.setContextualSaveBar = (props) => {
      const {
        showContextualSaveBar
      } = this.state;
      this.contextualSaveBar = {
        ...props
      };
      if (showContextualSaveBar === true) {
        this.forceUpdate();
      } else {
        this.setState({
          showContextualSaveBar: true
        });
      }
    };
    this.removeContextualSaveBar = () => {
      this.contextualSaveBar = null;
      this.setState({
        showContextualSaveBar: false
      });
    };
    this.startLoading = () => {
      this.setState(({
        loadingStack
      }) => ({
        loadingStack: loadingStack + 1
      }));
    };
    this.stopLoading = () => {
      this.setState(({
        loadingStack
      }) => ({
        loadingStack: Math.max(0, loadingStack - 1)
      }));
    };
    this.handleResize = () => {
      if (this.props.globalRibbon) {
        this.setGlobalRibbonHeight();
      }
    };
    this.handleFocus = () => {
      this.setState({
        skipFocused: true
      });
    };
    this.handleBlur = () => {
      this.setState({
        skipFocused: false
      });
    };
    this.handleClick = (event) => {
      const {
        skipToContentTarget
      } = this.props;
      if (skipToContentTarget && skipToContentTarget.current) {
        skipToContentTarget.current.focus();
        event == null ? void 0 : event.preventDefault();
      }
    };
    this.handleNavigationDismiss = () => {
      const {
        onNavigationDismiss
      } = this.props;
      if (onNavigationDismiss != null) {
        onNavigationDismiss();
      }
    };
    this.setGlobalRibbonContainer = (node) => {
      this.globalRibbonContainer = node;
    };
    this.handleNavKeydown = (event) => {
      const {
        key
      } = event;
      const {
        mediaQuery: {
          isNavigationCollapsed
        },
        showMobileNavigation
      } = this.props;
      const mobileNavShowing = isNavigationCollapsed && showMobileNavigation;
      if (mobileNavShowing && key === "Escape") {
        this.handleNavigationDismiss();
      }
    };
  }
  componentDidMount() {
    this.handleResize();
    if (this.props.globalRibbon) {
      return;
    }
    this.setGlobalRibbonRootProperty();
    this.setOffset();
  }
  componentDidUpdate(prevProps) {
    if (this.props.globalRibbon !== prevProps.globalRibbon) {
      this.setGlobalRibbonHeight();
    }
    this.setOffset();
  }
  render() {
    const {
      skipFocused,
      loadingStack,
      toastMessages,
      showContextualSaveBar
    } = this.state;
    const {
      logo,
      children: children2,
      navigation,
      topBar,
      globalRibbon,
      showMobileNavigation = false,
      skipToContentTarget,
      i18n,
      sidebar,
      mediaQuery: {
        isNavigationCollapsed
      }
    } = this.props;
    const navClassName = classNames(styles73.Navigation, showMobileNavigation && styles73["Navigation-visible"]);
    const mobileNavHidden = isNavigationCollapsed && !showMobileNavigation;
    const mobileNavShowing = isNavigationCollapsed && showMobileNavigation;
    const tabIndex = mobileNavShowing ? 0 : -1;
    const mobileNavAttributes = {
      ...mobileNavShowing && {
        "aria-modal": true,
        role: "dialog"
      }
    };
    const navigationMarkup = navigation ? import_react194.default.createElement(TrapFocus, {
      trapping: mobileNavShowing
    }, import_react194.default.createElement(CSSTransition_default, {
      nodeRef: this.navigationNode,
      appear: isNavigationCollapsed,
      exit: isNavigationCollapsed,
      in: showMobileNavigation,
      timeout: parseInt(motion2["motion-duration-300"], 10),
      classNames: navTransitionClasses
    }, import_react194.default.createElement("div", Object.assign({
      key: "NavContent"
    }, mobileNavAttributes, {
      "aria-label": i18n.translate("Polaris.Frame.navigationLabel"),
      ref: this.navigationNode,
      className: navClassName,
      onKeyDown: this.handleNavKeydown,
      id: APP_FRAME_NAV,
      hidden: mobileNavHidden
    }), navigation, import_react194.default.createElement("button", {
      type: "button",
      className: styles73.NavigationDismiss,
      onClick: this.handleNavigationDismiss,
      "aria-hidden": mobileNavHidden || !isNavigationCollapsed && !showMobileNavigation,
      "aria-label": i18n.translate("Polaris.Frame.Navigation.closeMobileNavigationLabel"),
      tabIndex
    }, import_react194.default.createElement(Icon, {
      source: SvgMobileCancelMajor
    }))))) : null;
    const loadingMarkup = loadingStack > 0 ? import_react194.default.createElement("div", {
      className: styles73.LoadingBar,
      id: APP_FRAME_LOADING_BAR
    }, import_react194.default.createElement(Loading2, null)) : null;
    const topBarMarkup = topBar ? import_react194.default.createElement("div", Object.assign({
      className: styles73.TopBar
    }, layer.props, dataPolarisTopBar.props, {
      id: APP_FRAME_TOP_BAR
    }), topBar) : null;
    const globalRibbonMarkup = globalRibbon ? import_react194.default.createElement("div", {
      className: styles73.GlobalRibbonContainer,
      ref: this.setGlobalRibbonContainer
    }, globalRibbon) : null;
    const skipClassName = classNames(styles73.Skip, skipFocused && styles73.focused);
    const skipTarget = (skipToContentTarget == null ? void 0 : skipToContentTarget.current) ? skipToContentTarget.current.id : APP_FRAME_MAIN;
    const skipMarkup = import_react194.default.createElement("div", {
      className: skipClassName
    }, import_react194.default.createElement("a", {
      href: `#${skipTarget}`,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur,
      onClick: this.handleClick
    }, i18n.translate("Polaris.Frame.skipToContent")));
    const navigationAttributes = navigation ? {
      "data-has-navigation": true
    } : {};
    const frameClassName = classNames(styles73.Frame, navigation && styles73.hasNav, topBar && styles73.hasTopBar, sidebar && styles73.hasSidebar);
    const contextualSaveBarMarkup = import_react194.default.createElement(CSSAnimation, {
      in: showContextualSaveBar,
      className: styles73.ContextualSaveBar,
      type: "fade"
    }, import_react194.default.createElement(ContextualSaveBar3, this.contextualSaveBar));
    const navigationOverlayMarkup = showMobileNavigation && isNavigationCollapsed ? import_react194.default.createElement(Backdrop, {
      belowNavigation: true,
      onClick: this.handleNavigationDismiss,
      onTouchStart: this.handleNavigationDismiss
    }) : null;
    const context = {
      logo,
      showToast: this.showToast,
      hideToast: this.hideToast,
      toastMessages,
      startLoading: this.startLoading,
      stopLoading: this.stopLoading,
      setContextualSaveBar: this.setContextualSaveBar,
      removeContextualSaveBar: this.removeContextualSaveBar
    };
    return import_react194.default.createElement(FrameContext.Provider, {
      value: context
    }, import_react194.default.createElement("div", Object.assign({
      className: frameClassName
    }, layer.props, navigationAttributes), skipMarkup, topBarMarkup, navigationMarkup, contextualSaveBarMarkup, loadingMarkup, navigationOverlayMarkup, import_react194.default.createElement("main", {
      className: styles73.Main,
      id: APP_FRAME_MAIN,
      "data-has-global-ribbon": Boolean(globalRibbon)
    }, import_react194.default.createElement("div", {
      className: styles73.Content
    }, children2)), import_react194.default.createElement(ToastManager, {
      toastMessages
    }), globalRibbonMarkup, import_react194.default.createElement(EventListener, {
      event: "resize",
      handler: this.handleResize
    })));
  }
};
var navTransitionClasses = {
  enter: classNames(styles73["Navigation-enter"]),
  enterActive: classNames(styles73["Navigation-enterActive"]),
  enterDone: classNames(styles73["Navigation-enterActive"]),
  exit: classNames(styles73["Navigation-exit"]),
  exitActive: classNames(styles73["Navigation-exitActive"])
};
function Frame(props) {
  const i18n = useI18n();
  const mediaQuery = useMediaQuery();
  return import_react194.default.createElement(FrameInner, Object.assign({}, props, {
    i18n,
    mediaQuery
  }));
}

// node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.js
var import_react195 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.scss.js
var styles83 = {
  "FullscreenBar": "Polaris-FullscreenBar",
  "BackAction": "Polaris-FullscreenBar__BackAction"
};

// node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.js
function FullscreenBar({
  onAction,
  children: children2
}) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const backButtonMarkup = polarisSummerEditions2023 ? import_react195.default.createElement(Text, {
    as: "span",
    variant: "bodyLg"
  }, i18n.translate("Polaris.FullscreenBar.back")) : i18n.translate("Polaris.FullscreenBar.back");
  return import_react195.default.createElement("div", {
    className: styles83.FullscreenBar
  }, import_react195.default.createElement("button", {
    className: styles83.BackAction,
    onClick: onAction,
    "aria-label": i18n.translate("Polaris.FullscreenBar.accessibilityLabel")
  }, import_react195.default.createElement(Icon, {
    source: SvgExitMajor
  }), backButtonMarkup), children2);
}

// node_modules/@shopify/polaris/build/esm/components/Grid/Grid.js
var import_react197 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Grid/Grid.scss.js
var styles84 = {
  "Grid": "Polaris-Grid"
};

// node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.js
var import_react196 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.scss.js
var styles85 = {
  "Cell": "Polaris-Grid-Cell",
  "Cell-1-column-xs": "Polaris-Grid-Cell--cell_1ColumnXs",
  "Cell-2-column-xs": "Polaris-Grid-Cell--cell_2ColumnXs",
  "Cell-3-column-xs": "Polaris-Grid-Cell--cell_3ColumnXs",
  "Cell-4-column-xs": "Polaris-Grid-Cell--cell_4ColumnXs",
  "Cell-5-column-xs": "Polaris-Grid-Cell--cell_5ColumnXs",
  "Cell-6-column-xs": "Polaris-Grid-Cell--cell_6ColumnXs",
  "Cell-1-column-sm": "Polaris-Grid-Cell--cell_1ColumnSm",
  "Cell-2-column-sm": "Polaris-Grid-Cell--cell_2ColumnSm",
  "Cell-3-column-sm": "Polaris-Grid-Cell--cell_3ColumnSm",
  "Cell-4-column-sm": "Polaris-Grid-Cell--cell_4ColumnSm",
  "Cell-5-column-sm": "Polaris-Grid-Cell--cell_5ColumnSm",
  "Cell-6-column-sm": "Polaris-Grid-Cell--cell_6ColumnSm",
  "Cell-1-column-md": "Polaris-Grid-Cell--cell_1ColumnMd",
  "Cell-2-column-md": "Polaris-Grid-Cell--cell_2ColumnMd",
  "Cell-3-column-md": "Polaris-Grid-Cell--cell_3ColumnMd",
  "Cell-4-column-md": "Polaris-Grid-Cell--cell_4ColumnMd",
  "Cell-5-column-md": "Polaris-Grid-Cell--cell_5ColumnMd",
  "Cell-6-column-md": "Polaris-Grid-Cell--cell_6ColumnMd",
  "Cell-1-column-lg": "Polaris-Grid-Cell--cell_1ColumnLg",
  "Cell-2-column-lg": "Polaris-Grid-Cell--cell_2ColumnLg",
  "Cell-3-column-lg": "Polaris-Grid-Cell--cell_3ColumnLg",
  "Cell-4-column-lg": "Polaris-Grid-Cell--cell_4ColumnLg",
  "Cell-5-column-lg": "Polaris-Grid-Cell--cell_5ColumnLg",
  "Cell-6-column-lg": "Polaris-Grid-Cell--cell_6ColumnLg",
  "Cell-7-column-lg": "Polaris-Grid-Cell--cell_7ColumnLg",
  "Cell-8-column-lg": "Polaris-Grid-Cell--cell_8ColumnLg",
  "Cell-9-column-lg": "Polaris-Grid-Cell--cell_9ColumnLg",
  "Cell-10-column-lg": "Polaris-Grid-Cell--cell_10ColumnLg",
  "Cell-11-column-lg": "Polaris-Grid-Cell--cell_11ColumnLg",
  "Cell-12-column-lg": "Polaris-Grid-Cell--cell_12ColumnLg",
  "Cell-1-column-xl": "Polaris-Grid-Cell--cell_1ColumnXl",
  "Cell-2-column-xl": "Polaris-Grid-Cell--cell_2ColumnXl",
  "Cell-3-column-xl": "Polaris-Grid-Cell--cell_3ColumnXl",
  "Cell-4-column-xl": "Polaris-Grid-Cell--cell_4ColumnXl",
  "Cell-5-column-xl": "Polaris-Grid-Cell--cell_5ColumnXl",
  "Cell-6-column-xl": "Polaris-Grid-Cell--cell_6ColumnXl",
  "Cell-7-column-xl": "Polaris-Grid-Cell--cell_7ColumnXl",
  "Cell-8-column-xl": "Polaris-Grid-Cell--cell_8ColumnXl",
  "Cell-9-column-xl": "Polaris-Grid-Cell--cell_9ColumnXl",
  "Cell-10-column-xl": "Polaris-Grid-Cell--cell_10ColumnXl",
  "Cell-11-column-xl": "Polaris-Grid-Cell--cell_11ColumnXl",
  "Cell-12-column-xl": "Polaris-Grid-Cell--cell_12ColumnXl"
};

// node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.js
function Cell2({
  area: gridArea,
  column,
  columnSpan,
  row,
  children: children2
}) {
  const className = classNames(styles85.Cell, (columnSpan == null ? void 0 : columnSpan.xs) && styles85[`Cell-${columnSpan.xs}-column-xs`], (columnSpan == null ? void 0 : columnSpan.sm) && styles85[`Cell-${columnSpan.sm}-column-sm`], (columnSpan == null ? void 0 : columnSpan.md) && styles85[`Cell-${columnSpan.md}-column-md`], (columnSpan == null ? void 0 : columnSpan.lg) && styles85[`Cell-${columnSpan.lg}-column-lg`], (columnSpan == null ? void 0 : columnSpan.xl) && styles85[`Cell-${columnSpan.xl}-column-xl`]);
  const style = {
    gridArea,
    "--pc-column-xs": column == null ? void 0 : column.xs,
    "--pc-column-sm": column == null ? void 0 : column.sm,
    "--pc-column-md": column == null ? void 0 : column.md,
    "--pc-column-lg": column == null ? void 0 : column.lg,
    "--pc-column-xl": column == null ? void 0 : column.xl,
    "--pc-row-xs": row == null ? void 0 : row.xs,
    "--pc-row-sm": row == null ? void 0 : row.sm,
    "--pc-row-md": row == null ? void 0 : row.md,
    "--pc-row-lg": row == null ? void 0 : row.lg,
    "--pc-row-xl": row == null ? void 0 : row.xl
  };
  return import_react196.default.createElement("div", {
    className,
    style
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/Grid/Grid.js
var Grid = function Grid2({
  gap,
  areas,
  children: children2,
  columns
}) {
  const style = {
    "--pc-grid-gap-xs": gap == null ? void 0 : gap.xs,
    "--pc-grid-gap-sm": gap == null ? void 0 : gap.sm,
    "--pc-grid-gap-md": gap == null ? void 0 : gap.md,
    "--pc-grid-gap-lg": gap == null ? void 0 : gap.lg,
    "--pc-grid-gap-xl": gap == null ? void 0 : gap.xl,
    "--pc-grid-columns-xs": columns == null ? void 0 : columns.xs,
    "--pc-grid-columns-sm": columns == null ? void 0 : columns.sm,
    "--pc-grid-columns-md": columns == null ? void 0 : columns.md,
    "--pc-grid-columns-lg": columns == null ? void 0 : columns.lg,
    "--pc-grid-columns-xl": columns == null ? void 0 : columns.xl,
    "--pc-grid-areas-xs": formatAreas(areas == null ? void 0 : areas.xs),
    "--pc-grid-areas-sm": formatAreas(areas == null ? void 0 : areas.sm),
    "--pc-grid-areas-md": formatAreas(areas == null ? void 0 : areas.md),
    "--pc-grid-areas-lg": formatAreas(areas == null ? void 0 : areas.lg),
    "--pc-grid-areas-xl": formatAreas(areas == null ? void 0 : areas.xl)
  };
  return import_react197.default.createElement("div", {
    className: styles84.Grid,
    style
  }, children2);
};
function formatAreas(areas) {
  if (!areas)
    return;
  return `'${areas == null ? void 0 : areas.join(`' '`)}'`;
}
Grid.Cell = Cell2;

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.js
var import_react217 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-on-value-change.js
var import_react198 = __toESM(require_react());
function useOnValueChange(value, onChange) {
  const tracked = import_react198.default.useRef(value);
  (0, import_react198.useEffect)(() => {
    const oldValue = tracked.current;
    if (value !== tracked.current) {
      tracked.current = value;
      onChange(value, oldValue);
    }
  }, [value, onChange]);
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.scss.js
var styles86 = {
  "IndexFiltersWrapper": "Polaris-IndexFilters__IndexFiltersWrapper",
  "IndexFilters": "Polaris-IndexFilters",
  "IndexFiltersSticky": "Polaris-IndexFilters__IndexFiltersSticky",
  "IndexFiltersStickyFlush": "Polaris-IndexFilters__IndexFiltersStickyFlush",
  "TabsWrapper": "Polaris-IndexFilters__TabsWrapper",
  "SmallScreenTabsWrapper": "Polaris-IndexFilters__SmallScreenTabsWrapper",
  "TabsWrapperLoading": "Polaris-IndexFilters__TabsWrapperLoading",
  "TabsLoading": "Polaris-IndexFilters__TabsLoading",
  "ActionWrap": "Polaris-IndexFilters__ActionWrap",
  "Spinner": "Polaris-IndexFilters__Spinner",
  "ButtonWrap": "Polaris-IndexFilters__ButtonWrap"
};

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/hooks/useIsSticky/useIsSticky.js
var import_react199 = __toESM(require_react());
var DEBOUNCE_PERIOD = 250;
function useIsSticky(mode, disabled, isFlushWhenSticky) {
  const hasIOSupport = typeof window !== "undefined" && Boolean(window.IntersectionObserver);
  const options = {
    root: null,
    rootMargin: `${isFlushWhenSticky ? "0px" : "-56px"} 0px 0px 0px`,
    threshold: 0
  };
  const [indexFilteringHeight, setIndexFiltersHeight] = (0, import_react199.useState)(0);
  const [isSticky, setIsSticky] = (0, import_react199.useState)(false);
  const measurerRef = (0, import_react199.useRef)(null);
  const intersectionRef = (0, import_react199.useRef)(null);
  const handleIntersect = (entries) => {
    entries.forEach((entry) => {
      setIsSticky(!entry.isIntersecting);
    });
  };
  const observerRef = (0, import_react199.useRef)(hasIOSupport ? new IntersectionObserver(handleIntersect, options) : null);
  (0, import_react199.useEffect)(() => {
    function computeDimensions() {
      const node = measurerRef.current;
      if (!node) {
        return {
          height: 0
        };
      }
      const box = node.getBoundingClientRect();
      const height2 = box.height;
      setIndexFiltersHeight(height2);
    }
    computeDimensions();
    const debouncedComputeDimensions = debounce(computeDimensions, DEBOUNCE_PERIOD, {
      trailing: true
    });
    window.addEventListener("resize", debouncedComputeDimensions);
    return () => window.removeEventListener("resize", debouncedComputeDimensions);
  }, [measurerRef, mode]);
  (0, import_react199.useEffect)(() => {
    const observer = observerRef.current;
    if (!observer) {
      return;
    }
    const node = intersectionRef.current;
    if (node) {
      observer.observe(node);
    }
    return () => {
      observer == null ? void 0 : observer.disconnect();
    };
  }, [intersectionRef]);
  return {
    intersectionRef,
    measurerRef,
    isSticky: isSticky && !disabled,
    indexFilteringHeight
  };
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/UpdateButtons/UpdateButtons.js
var import_react201 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-is-touch-device.js
var import_react200 = __toESM(require_react());
function useIsTouchDevice() {
  const [isTouchDevice, setIsTouchDevice] = (0, import_react200.useState)(false);
  const handleTouchStart = (0, import_react200.useCallback)(() => setIsTouchDevice(true), []);
  useEventListener("touchstart", handleTouchStart);
  return isTouchDevice;
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/UpdateButtons/UpdateButtons.js
var MAX_VIEW_NAME_LENGTH = 40;
function UpdateButtons({
  primaryAction,
  cancelAction,
  viewNames,
  disabled
}) {
  const i18n = useI18n();
  const [savedViewName, setSavedViewName] = (0, import_react201.useState)("");
  const [savedViewModalOpen, setSavedViewModalOpen] = (0, import_react201.useState)(false);
  const container = (0, import_react201.useRef)(null);
  const isTouchDevice = useIsTouchDevice();
  const {
    polarisSummerEditions2023: se23
  } = useFeatures();
  (0, import_react201.useEffect)(() => {
    if (!container.current || isTouchDevice)
      return;
    if (savedViewModalOpen) {
      focusFirstFocusableNode(container.current);
    }
  }, [savedViewModalOpen, isTouchDevice]);
  async function handleClickSaveButton() {
    if ((primaryAction == null ? void 0 : primaryAction.type) === "save-as") {
      handleOpenModal();
    } else {
      await (primaryAction == null ? void 0 : primaryAction.onAction(""));
    }
  }
  function handleOpenModal() {
    setSavedViewModalOpen(true);
  }
  function handleCloseModal() {
    setSavedViewModalOpen(false);
  }
  function handleChange(value) {
    setSavedViewName(value);
  }
  async function handlePrimaryAction() {
    if (isPrimaryActionDisabled)
      return;
    await (primaryAction == null ? void 0 : primaryAction.onAction(savedViewName));
    handleCloseModal();
  }
  const buttonText = (0, import_react201.useMemo)(() => {
    switch (primaryAction == null ? void 0 : primaryAction.type) {
      case "save":
        return i18n.translate("Polaris.IndexFilters.UpdateButtons.save");
      case "save-as":
      default:
        return i18n.translate("Polaris.IndexFilters.UpdateButtons.saveAs");
    }
  }, [primaryAction == null ? void 0 : primaryAction.type, i18n]);
  const saveButton = import_react201.default.createElement(Button, {
    size: "micro",
    primary: !se23 ? true : void 0,
    plain: !se23 ? true : void 0,
    onClick: handleClickSaveButton,
    disabled: (primaryAction == null ? void 0 : primaryAction.disabled) || disabled
  }, buttonText);
  const hasSameNameError = viewNames.some((name) => name.trim().toLowerCase() === savedViewName.trim().toLowerCase());
  const isPrimaryActionDisabled = hasSameNameError || !savedViewName || (primaryAction == null ? void 0 : primaryAction.loading) || savedViewName.length > MAX_VIEW_NAME_LENGTH;
  const cancelButtonMarkup = import_react201.default.createElement(Button, {
    plain: true,
    primary: se23 ? true : void 0,
    size: "micro",
    onClick: cancelAction.onAction,
    disabled
  }, i18n.translate("Polaris.IndexFilters.UpdateButtons.cancel"));
  if (!primaryAction) {
    return cancelButtonMarkup;
  }
  return import_react201.default.createElement(HorizontalStack, {
    align: "start",
    blockAlign: "center",
    gap: se23 ? "100" : "200"
  }, cancelButtonMarkup, primaryAction.type === "save-as" ? import_react201.default.createElement(Modal, {
    activator: import_react201.default.createElement(HorizontalStack, null, saveButton),
    open: savedViewModalOpen,
    title: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.title"),
    onClose: handleCloseModal,
    primaryAction: {
      onAction: handlePrimaryAction,
      content: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.save"),
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      onAction: handleCloseModal,
      content: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.cancel")
    }]
  }, import_react201.default.createElement(Modal.Section, null, import_react201.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, import_react201.default.createElement(FormLayout, null, import_react201.default.createElement("div", {
    ref: container
  }, import_react201.default.createElement(TextField, {
    label: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.label"),
    value: savedViewName,
    onChange: handleChange,
    autoComplete: "off",
    maxLength: MAX_VIEW_NAME_LENGTH,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.sameName", {
      name: savedViewName
    }) : void 0
  })))))) : saveButton);
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/SortButton.js
var import_react204 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/FilterButton/FilterButton.js
var import_react202 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/FilterButton/FilterButton.scss.js
var styles87 = {
  "FilterButton": "Polaris-IndexFilters-FilterButton",
  "pressed": "Polaris-IndexFilters-FilterButton--pressed",
  "Disabled": "Polaris-IndexFilters-FilterButton__Disabled"
};

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/FilterButton/FilterButton.js
function FilterButton({
  onClick,
  label,
  icon,
  disabled,
  children: children2
}) {
  const {
    polarisSummerEditions2023: se23
  } = useFeatures();
  const classes = classNames(styles87.FilterButton, disabled && styles87.Disabled);
  const buttonMarkup = se23 ? import_react202.default.createElement(Button, {
    size: "slim",
    icon,
    onClick,
    disabled,
    accessibilityLabel: label
  }) : import_react202.default.createElement(UnstyledButton, {
    className: classes,
    onClick,
    disabled,
    accessibilityLabel: label
  }, children2);
  return buttonMarkup;
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.js
var import_react203 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.scss.js
var styles88 = {
  "DirectionButton": "Polaris-SortButton-DirectionButton",
  "DirectionButton-active": "Polaris-SortButton-DirectionButton__DirectionButton--active",
  "Label": "Polaris-SortButton-DirectionButton__Label"
};

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.js
function DirectionButton({
  onClick,
  active,
  children: children2,
  direction,
  value
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const classes = classNames(styles88.DirectionButton, active && styles88["DirectionButton-active"]);
  function handleClick() {
    onClick([value]);
  }
  return import_react203.default.createElement(UnstyledButton, {
    className: classes,
    onClick: handleClick
  }, import_react203.default.createElement(Icon, {
    source: direction === "asc" ? SvgArrowUpMinor : SvgArrowDownMinor,
    color: (
      // eslint-disable-next-line no-nested-ternary
      polarisSummerEditions2023 ? "base" : active ? "interactive" : "base"
    )
  }), import_react203.default.createElement("span", {
    className: styles88.Label
  }, children2));
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/SortButton.js
var SortButtonDirection;
(function(SortButtonDirection2) {
  SortButtonDirection2["Asc"] = "asc";
  SortButtonDirection2["Desc"] = "desc";
})(SortButtonDirection || (SortButtonDirection = {}));
function SortButton({
  choices,
  selected,
  onChange,
  disabled,
  onChangeKey,
  onChangeDirection
}) {
  var _a, _b, _c, _d;
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const [active, setActive] = (0, import_react204.useState)(false);
  const [selectedValueKey, selectedDirection] = selected[0].split(" ");
  function handleClick() {
    setActive((pastActive) => !pastActive);
  }
  function handleClose() {
    setActive(false);
  }
  function handleChangeChoiceList(sel) {
    if (onChangeKey) {
      const [key] = sel[0].split(" ");
      onChangeKey(key);
    } else {
      onChange(sel);
    }
  }
  function handleChangeDirection(sel) {
    if (onChangeDirection) {
      const [, direction] = sel[0].split(" ");
      onChangeDirection(direction);
    } else {
      onChange(sel);
    }
  }
  const choiceListChoices = (0, import_react204.useMemo)(() => {
    const choiceCategories = choices.reduce((acc, curr) => {
      const alreadyExists = acc.some((option) => option.label === curr.label);
      const [, currentValueDirection] = curr.value.split(" ");
      const isSameDirection = currentValueDirection === selectedDirection;
      if (!alreadyExists) {
        return [...acc, curr];
      }
      if (isSameDirection) {
        return acc.map((option) => {
          if (option.label === curr.label) {
            return curr;
          }
          return option;
        });
      }
      return acc;
    }, []);
    return choiceCategories;
  }, [choices, selectedDirection]);
  const selectedChoices = choices.filter((choice) => {
    const [currentKey] = choice.value.split(" ");
    return currentKey === selectedValueKey;
  });
  const iconMarkup = polarisSummerEditions2023 ? SvgSortMinor : void 0;
  const childMarkup = !polarisSummerEditions2023 ? import_react204.default.createElement(Icon, {
    source: SvgSortMinor,
    color: "base"
  }) : null;
  const sortButton = import_react204.default.createElement(Tooltip, {
    content: i18n.translate("Polaris.IndexFilters.SortButton.tooltip"),
    preferredPosition: "above",
    hoverDelay: 400
  }, import_react204.default.createElement(FilterButton, {
    icon: iconMarkup,
    onClick: handleClick,
    label: i18n.translate("Polaris.IndexFilters.SortButton.ariaLabel"),
    disabled
  }, childMarkup));
  return import_react204.default.createElement(Popover2, {
    active: active && !disabled,
    activator: sortButton,
    autofocusTarget: "first-node",
    onClose: handleClose,
    preferredAlignment: "right",
    fluidContent: true
  }, import_react204.default.createElement(Box, {
    minWidth: "148px",
    padding: polarisSummerEditions2023 ? void 0 : "400",
    paddingInlineStart: polarisSummerEditions2023 ? "300" : void 0,
    paddingInlineEnd: polarisSummerEditions2023 ? "300" : void 0,
    paddingBlockStart: polarisSummerEditions2023 ? "200" : void 0,
    paddingBlockEnd: polarisSummerEditions2023 ? "200" : void 0,
    borderBlockEndWidth: "1",
    borderColor: "border-subdued"
  }, import_react204.default.createElement(ChoiceList, {
    title: i18n.translate("Polaris.IndexFilters.SortButton.title"),
    choices: choiceListChoices,
    selected,
    onChange: handleChangeChoiceList
  })), import_react204.default.createElement(Box, {
    padding: polarisSummerEditions2023 ? void 0 : "400",
    paddingInlineStart: polarisSummerEditions2023 ? "150" : void 0,
    paddingInlineEnd: polarisSummerEditions2023 ? "150" : void 0,
    paddingBlockStart: polarisSummerEditions2023 ? "200" : void 0,
    paddingBlockEnd: polarisSummerEditions2023 ? "200" : void 0
  }, import_react204.default.createElement(DirectionButton, {
    direction: "asc",
    active: selectedDirection === SortButtonDirection.Asc,
    onClick: handleChangeDirection,
    value: (_a = selectedChoices == null ? void 0 : selectedChoices[0]) == null ? void 0 : _a.value
  }, (_b = selectedChoices == null ? void 0 : selectedChoices[0]) == null ? void 0 : _b.directionLabel), import_react204.default.createElement(DirectionButton, {
    direction: "desc",
    active: selectedDirection === SortButtonDirection.Desc,
    onClick: handleChangeDirection,
    value: (_c = selectedChoices == null ? void 0 : selectedChoices[1]) == null ? void 0 : _c.value
  }, (_d = selectedChoices == null ? void 0 : selectedChoices[1]) == null ? void 0 : _d.directionLabel)));
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.js
var import_react205 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.scss.js
var styles89 = {
  "Container": "Polaris-IndexFilters-Container"
};

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.js
var Container = ({
  children: children2
}) => {
  return import_react205.default.createElement("div", {
    className: styles89.Container
  }, children2);
};

// node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.js
var import_react215 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/use-previous.js
var import_react206 = __toESM(require_react());
function usePrevious(value) {
  const ref = (0, import_react206.useRef)();
  (0, import_react206.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref.current;
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/utilities.js
function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {
  const sumTabWidths = tabWidths.reduce((sum, width2) => sum + width2, 0);
  const arrayOfTabIndices = tabs.map((_, index) => {
    return index;
  });
  const visibleTabs = [];
  const hiddenTabs = [];
  if (containerWidth > sumTabWidths) {
    visibleTabs.push(...arrayOfTabIndices);
  } else {
    visibleTabs.push(selected);
    let tabListWidth = tabWidths[selected];
    arrayOfTabIndices.forEach((currentTabIndex) => {
      if (currentTabIndex !== selected) {
        const currentTabWidth = tabWidths[currentTabIndex];
        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {
          hiddenTabs.push(currentTabIndex);
          return;
        }
        visibleTabs.push(currentTabIndex);
        tabListWidth += currentTabWidth;
      }
    });
  }
  return {
    visibleTabs,
    hiddenTabs
  };
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.scss.js
var styles90 = {
  "Outer": "Polaris-Tabs__Outer",
  "Wrapper": "Polaris-Tabs__Wrapper",
  "WrapperWithNewButton": "Polaris-Tabs__WrapperWithNewButton",
  "ButtonWrapper": "Polaris-Tabs__ButtonWrapper",
  "Tabs": "Polaris-Tabs",
  "Tab": "Polaris-Tabs__Tab",
  "Tab-active": "Polaris-Tabs__Tab--active",
  "Tab-hasActions": "Polaris-Tabs__Tab--hasActions",
  "Tab-iconOnly": "Polaris-Tabs__Tab--iconOnly",
  "fillSpace": "Polaris-Tabs--fillSpace",
  "TabContainer": "Polaris-Tabs__TabContainer",
  "fitted": "Polaris-Tabs--fitted",
  "titleWithIcon": "Polaris-Tabs--titleWithIcon",
  "List": "Polaris-Tabs__List",
  "Item": "Polaris-Tabs__Item",
  "DisclosureTab": "Polaris-Tabs__DisclosureTab",
  "DisclosureTab-visible": "Polaris-Tabs__DisclosureTab--visible",
  "DisclosureActivator": "Polaris-Tabs__DisclosureActivator",
  "TabsMeasurer": "Polaris-Tabs__TabsMeasurer",
  "NewTab": "Polaris-Tabs__NewTab",
  "ActionListWrap": "Polaris-Tabs__ActionListWrap",
  "Panel": "Polaris-Tabs__Panel",
  "Panel-hidden": "Polaris-Tabs__Panel--hidden"
};

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js
var import_react209 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/components/DuplicateModal/DuplicateModal.js
var import_react207 = __toESM(require_react());
var MAX_VIEW_NAME_LENGTH2 = 40;
function DuplicateModal({
  open,
  isModalLoading,
  name,
  onClose,
  onClickPrimaryAction,
  onClickSecondaryAction,
  helpText,
  viewNames
}) {
  const i18n = useI18n();
  const [value, setValue] = (0, import_react207.useState)(name);
  const container = (0, import_react207.useRef)(null);
  const hasSameNameError = viewNames == null ? void 0 : viewNames.some((viewName) => viewName.trim().toLowerCase() === value.trim().toLowerCase());
  const isPrimaryActionDisabled = isModalLoading || hasSameNameError || !value || value.length > MAX_VIEW_NAME_LENGTH2;
  (0, import_react207.useEffect)(() => {
    if (!container.current)
      return;
    if (open) {
      focusFirstFocusableNode(container.current);
    }
  }, [open]);
  (0, import_react207.useEffect)(() => {
    if (open) {
      setValue(name.slice(0, MAX_VIEW_NAME_LENGTH2));
    }
  }, [name, open]);
  const handleChange = (0, import_react207.useCallback)((newValue) => {
    setValue(newValue);
  }, []);
  async function handlePrimaryAction() {
    if (isPrimaryActionDisabled) {
      return;
    }
    await onClickPrimaryAction(value);
    setValue("");
    onClose();
  }
  function handleSecondaryAction() {
    onClickSecondaryAction == null ? void 0 : onClickSecondaryAction();
    setValue(name);
    onClose();
  }
  return import_react207.default.createElement(Modal, {
    open,
    onClose,
    title: i18n.translate("Polaris.Tabs.DuplicateModal.title"),
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.DuplicateModal.create"),
      onAction: handlePrimaryAction,
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.DuplicateModal.cancel"),
      onAction: handleSecondaryAction
    }],
    instant: true
  }, import_react207.default.createElement(Modal.Section, null, import_react207.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, import_react207.default.createElement(FormLayout, null, import_react207.default.createElement("div", {
    ref: container
  }, import_react207.default.createElement(TextField, {
    label: i18n.translate("Polaris.Tabs.DuplicateModal.label"),
    value,
    onChange: handleChange,
    autoComplete: "off",
    helpText,
    maxLength: MAX_VIEW_NAME_LENGTH2,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.Tabs.DuplicateModal.errors.sameName", {
      name: value
    }) : void 0
  }))))));
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/components/RenameModal/RenameModal.js
var import_react208 = __toESM(require_react());
function RenameModal({
  open,
  isModalLoading,
  name,
  onClose,
  onClickPrimaryAction,
  onClickSecondaryAction,
  helpText,
  viewNames
}) {
  const i18n = useI18n();
  const [value, setValue] = (0, import_react208.useState)(name);
  const container = (0, import_react208.useRef)(null);
  const hasSameNameError = viewNames == null ? void 0 : viewNames.filter((viewName) => viewName !== name).some((viewName) => viewName.trim().toLowerCase() === value.trim().toLowerCase());
  const isPrimaryActionDisabled = isModalLoading || hasSameNameError || value === name || !value;
  (0, import_react208.useEffect)(() => {
    if (!container.current)
      return;
    if (open) {
      focusFirstFocusableNode(container.current);
    }
  }, [open]);
  (0, import_react208.useEffect)(() => {
    if (open) {
      setValue(name);
    }
  }, [name, open]);
  const handleChange = (0, import_react208.useCallback)((newValue) => {
    setValue(newValue);
  }, []);
  async function handlePrimaryAction() {
    if (isPrimaryActionDisabled) {
      return;
    }
    await onClickPrimaryAction(value);
    setValue("");
    onClose();
  }
  function handleSecondaryAction() {
    onClickSecondaryAction == null ? void 0 : onClickSecondaryAction();
    setValue(name);
    onClose();
  }
  return import_react208.default.createElement(Modal, {
    open,
    onClose,
    title: i18n.translate("Polaris.Tabs.RenameModal.title"),
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.RenameModal.create"),
      onAction: handlePrimaryAction,
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.RenameModal.cancel"),
      onAction: handleSecondaryAction
    }],
    instant: true
  }, import_react208.default.createElement(Modal.Section, null, import_react208.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, import_react208.default.createElement(FormLayout, null, import_react208.default.createElement("div", {
    ref: container
  }, import_react208.default.createElement(TextField, {
    label: i18n.translate("Polaris.Tabs.RenameModal.label"),
    value,
    onChange: handleChange,
    autoComplete: "off",
    helpText,
    maxLength: 40,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.Tabs.RenameModal.errors.sameName", {
      name: value
    }) : void 0
  }))))));
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js
var Tab = (0, import_react209.forwardRef)(({
  content,
  accessibilityLabel,
  badge,
  id,
  panelID,
  url,
  onAction,
  actions,
  disabled,
  isModalLoading,
  icon,
  siblingTabHasFocus,
  measuring,
  focused,
  selected,
  onToggleModal,
  onTogglePopover,
  viewNames,
  tabIndexOverride,
  onFocus
}, ref) => {
  const i18n = useI18n();
  const [popoverActive, setPopoverActive] = (0, import_react209.useState)(false);
  const [activeModalType, setActiveModalType] = (0, import_react209.useState)(null);
  const {
    mdDown
  } = useBreakpoints();
  const {
    polarisSummerEditions2023: se23
  } = useFeatures();
  const wasSelected = (0, import_react209.useRef)(selected);
  const panelFocused = (0, import_react209.useRef)(false);
  const node = (0, import_react209.useRef)(null);
  (0, import_react209.useEffect)(() => {
    onTogglePopover(popoverActive);
  }, [popoverActive, onTogglePopover]);
  (0, import_react209.useEffect)(() => {
    onToggleModal(Boolean(activeModalType));
  }, [activeModalType, onToggleModal]);
  (0, import_react209.useEffect)(() => {
    return () => {
      onToggleModal(false);
      onTogglePopover(false);
    };
  }, [onToggleModal, onTogglePopover]);
  (0, import_react209.useEffect)(() => {
    if (measuring) {
      return;
    }
    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;
    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {
      focusPanelID(panelID);
      panelFocused.current = true;
    }
    if (selected && !wasSelected.current && panelID != null) {
      focusPanelID(panelID);
    } else if (focused && node.current != null && activeModalType == null && !disabled) {
      focusFirstFocusableNode(node.current);
    }
    wasSelected.current = selected;
  }, [focused, id, content, measuring, panelID, selected, activeModalType, disabled]);
  let tabIndex;
  if (selected && !siblingTabHasFocus && !measuring) {
    tabIndex = 0;
  } else if (focused && !measuring) {
    tabIndex = 0;
  } else {
    tabIndex = -1;
  }
  if (tabIndexOverride != null) {
    tabIndex = tabIndexOverride;
  }
  const renameAction = actions == null ? void 0 : actions.find((action) => action.type === "rename");
  const duplicateAction = actions == null ? void 0 : actions.find((action) => action.type === "duplicate");
  const deleteAction = actions == null ? void 0 : actions.find((action) => action.type === "delete");
  const togglePopoverActive = (0, import_react209.useCallback)(() => {
    if (!(actions == null ? void 0 : actions.length)) {
      return;
    }
    setPopoverActive((popoverActive2) => !popoverActive2);
  }, [actions]);
  const handleClick = (0, import_react209.useCallback)(() => {
    if (disabled) {
      return;
    }
    if (selected) {
      togglePopoverActive();
    } else {
      onAction == null ? void 0 : onAction();
    }
  }, [selected, onAction, togglePopoverActive, disabled]);
  const handleModalOpen = (type) => {
    setActiveModalType(type);
  };
  const handleModalClose = () => {
    setActiveModalType(null);
  };
  const handleSaveRenameModal = (0, import_react209.useCallback)(async (value) => {
    var _a;
    await ((_a = renameAction == null ? void 0 : renameAction.onPrimaryAction) == null ? void 0 : _a.call(renameAction, value));
    setTimeout(() => {
      if (node.current) {
        focusFirstFocusableNode(node.current);
      }
    }, 250);
  }, [renameAction]);
  const handleConfirmDeleteView = (0, import_react209.useCallback)(async () => {
    var _a;
    await ((_a = deleteAction == null ? void 0 : deleteAction.onPrimaryAction) == null ? void 0 : _a.call(deleteAction, content));
    handleModalClose();
  }, [deleteAction, content]);
  const handleSaveDuplicateModal = (0, import_react209.useCallback)(async (duplicateName) => {
    var _a;
    await ((_a = duplicateAction == null ? void 0 : duplicateAction.onPrimaryAction) == null ? void 0 : _a.call(duplicateAction, duplicateName));
  }, [duplicateAction]);
  const actionContent = {
    rename: {
      icon: SvgInfoMinor,
      content: i18n.translate("Polaris.Tabs.Tab.rename")
    },
    duplicate: {
      icon: SvgDuplicateMinor,
      content: i18n.translate("Polaris.Tabs.Tab.duplicate")
    },
    edit: {
      icon: SvgEditMinor,
      content: i18n.translate("Polaris.Tabs.Tab.edit")
    },
    "edit-columns": {
      icon: SvgColumns3Minor,
      content: i18n.translate("Polaris.Tabs.Tab.editColumns")
    },
    delete: {
      icon: SvgDeleteMinor,
      content: i18n.translate("Polaris.Tabs.Tab.delete"),
      destructive: true
    }
  };
  const formattedActions = actions == null ? void 0 : actions.map(({
    type,
    onAction: onAction2,
    onPrimaryAction,
    ...additionalOptions
  }) => {
    const isModalActivator = !type.includes("edit");
    return {
      ...actionContent[type],
      ...additionalOptions,
      onAction: () => {
        onAction2 == null ? void 0 : onAction2(content);
        togglePopoverActive();
        if (isModalActivator) {
          handleModalOpen(type);
        }
      }
    };
  });
  const handleKeyDown5 = (0, import_react209.useCallback)((event) => {
    if (event.key === " ") {
      event.preventDefault();
      handleClick();
    }
  }, [handleClick]);
  const tabContainerClassNames = classNames(styles90.TabContainer, selected && styles90.Underline);
  const urlIfNotDisabledOrSelected = disabled || selected ? void 0 : url;
  const BaseComponent = urlIfNotDisabledOrSelected ? UnstyledLink : UnstyledButton;
  const tabClassName = classNames(styles90.Tab, icon && styles90["Tab-iconOnly"], popoverActive && styles90["Tab-popoverActive"], selected && styles90["Tab-active"], selected && (actions == null ? void 0 : actions.length) && styles90["Tab-hasActions"]);
  const badgeStatusSelected = !se23 ? "success" : void 0;
  const badgeMarkup = badge ? import_react209.default.createElement(Badge, {
    status: selected ? badgeStatusSelected : "new"
  }, badge) : null;
  const disclosureMarkup = selected && (actions == null ? void 0 : actions.length) ? import_react209.default.createElement("div", {
    className: classNames(styles90.IconWrap)
  }, import_react209.default.createElement(Icon, {
    source: se23 ? SvgChevronDownMinor : SvgCaretDownMinor
  })) : null;
  const se23LabelVariant = mdDown && se23 ? "bodyLg" : "bodySm";
  const labelVariant = mdDown ? "bodyMd" : "bodySm";
  const activator = import_react209.default.createElement(BaseComponent, {
    id,
    className: tabClassName,
    tabIndex,
    "aria-selected": selected,
    "aria-controls": panelID,
    "aria-label": accessibilityLabel,
    role: tabIndexOverride == null ? "tab" : void 0,
    disabled,
    url: urlIfNotDisabledOrSelected,
    onFocus,
    onMouseUp: handleMouseUpByBlurring,
    onClick: handleClick,
    onKeyDown: handleKeyDown5
  }, import_react209.default.createElement(HorizontalStack, {
    gap: "200",
    align: "center",
    blockAlign: "center",
    wrap: false
  }, import_react209.default.createElement(Text, {
    as: "span",
    variant: se23 ? se23LabelVariant : labelVariant,
    fontWeight: se23 ? "medium" : "semibold"
  }, icon ?? content), badgeMarkup), disclosureMarkup);
  const isPlainButton = !selected || !(actions == null ? void 0 : actions.length);
  const renameModal = renameAction ? import_react209.default.createElement(RenameModal, {
    name: content,
    open: activeModalType === "rename",
    onClose: handleModalClose,
    onClickPrimaryAction: handleSaveRenameModal,
    isModalLoading,
    viewNames
  }) : null;
  const duplicateModal = duplicateAction ? import_react209.default.createElement(DuplicateModal, {
    open: activeModalType === "duplicate",
    name: i18n.translate("Polaris.Tabs.Tab.copy", {
      name: content
    }),
    onClose: handleModalClose,
    onClickPrimaryAction: handleSaveDuplicateModal,
    isModalLoading,
    viewNames: viewNames || []
  }) : null;
  const deleteModal = deleteAction ? import_react209.default.createElement(Modal, {
    open: activeModalType === "delete",
    onClose: handleModalClose,
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.Tab.deleteModal.delete"),
      onAction: handleConfirmDeleteView,
      destructive: true,
      disabled: isModalLoading
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.Tab.deleteModal.cancel"),
      onAction: handleModalClose
    }],
    title: i18n.translate("Polaris.Tabs.Tab.deleteModal.title"),
    instant: true
  }, import_react209.default.createElement(Modal.Section, null, i18n.translate("Polaris.Tabs.Tab.deleteModal.description", {
    viewName: content
  }))) : null;
  const markup = isPlainButton || disabled ? activator : import_react209.default.createElement(import_react209.default.Fragment, null, import_react209.default.createElement(Popover2, {
    active: popoverActive,
    activator,
    autofocusTarget: "first-node",
    onClose: togglePopoverActive
  }, import_react209.default.createElement("div", {
    className: styles90.ActionListWrap
  }, import_react209.default.createElement(ActionList, {
    actionRole: "menuitem",
    items: formattedActions
  }))), renameModal, duplicateModal, deleteModal);
  if (icon) {
    return markup;
  }
  return import_react209.default.createElement("li", {
    className: tabContainerClassNames,
    ref: mergeRefs([node, ref]),
    role: "presentation"
  }, markup);
});
Tab.displayName = "Tab";
function focusPanelID(panelID) {
  const panel = document.getElementById(panelID);
  if (panel) {
    panel.focus({
      preventScroll: true
    });
  }
}
function mergeRefs(refs) {
  return (node) => {
    for (const ref of refs) {
      if (ref != null) {
        ref.current = node;
      }
    }
  };
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/TabMeasurer/TabMeasurer.js
var import_react210 = __toESM(require_react());
var TabMeasurer = (0, import_react210.memo)(function TabMeasurer2({
  selected,
  tabs,
  activator,
  tabToFocus,
  siblingTabHasFocus,
  handleMeasurement: handleMeasurementProp
}) {
  const containerNode = (0, import_react210.useRef)(null);
  const animationFrame = (0, import_react210.useRef)(null);
  const handleMeasurement = (0, import_react210.useCallback)(() => {
    if (animationFrame.current) {
      cancelAnimationFrame(animationFrame.current);
    }
    animationFrame.current = requestAnimationFrame(() => {
      if (!containerNode.current) {
        return;
      }
      const containerWidth = containerNode.current.offsetWidth - 20 - 28;
      const hiddenTabNodes = containerNode.current.children;
      const hiddenTabNodesArray = Array.from(hiddenTabNodes);
      const hiddenTabWidths = hiddenTabNodesArray.map((node) => {
        const buttonWidth = Math.ceil(node.getBoundingClientRect().width);
        return buttonWidth + 4;
      });
      const disclosureWidth = hiddenTabWidths.pop() || 0;
      handleMeasurementProp({
        containerWidth,
        disclosureWidth,
        hiddenTabWidths
      });
    });
  }, [handleMeasurementProp]);
  (0, import_react210.useEffect)(() => {
    handleMeasurement();
  }, [handleMeasurement, tabs]);
  useComponentDidMount(() => {
    if (true) {
      setTimeout(handleMeasurement, 0);
    }
  });
  const tabsMarkup = tabs.map((tab, index) => {
    return import_react210.default.createElement(Tab, {
      measuring: true,
      key: `$${tab.id}Hidden`,
      id: `${tab.id}Measurer`,
      siblingTabHasFocus,
      focused: index === tabToFocus,
      selected: index === selected,
      url: tab.url,
      content: tab.content,
      onTogglePopover: noop10,
      onToggleModal: noop10
    });
  });
  const classname = classNames(styles90.Tabs, styles90.TabsMeasurer);
  useEventListener("resize", handleMeasurement);
  return import_react210.default.createElement("div", {
    className: classname,
    ref: containerNode
  }, tabsMarkup, activator);
});
function noop10() {
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Panel/Panel.js
var import_react211 = __toESM(require_react());
function Panel({
  hidden,
  id,
  tabID,
  children: children2
}) {
  const className = classNames(styles90.Panel, hidden && styles90["Panel-hidden"]);
  return import_react211.default.createElement("div", {
    className,
    id,
    role: "tabpanel",
    "aria-labelledby": tabID,
    tabIndex: -1
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/List/List.js
var import_react213 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Item/Item.js
var import_react212 = __toESM(require_react());
var Item6 = (0, import_react212.memo)(function Item7({
  id,
  focused,
  children: children2,
  url,
  accessibilityLabel,
  onClick = noop11
}) {
  const focusedNode = (0, import_react212.useRef)(null);
  (0, import_react212.useEffect)(() => {
    if (focusedNode.current && focusedNode.current instanceof HTMLElement && focused) {
      focusedNode.current.focus();
    }
  }, [focusedNode, focused]);
  const classname = classNames(styles90.Item);
  const sharedProps = {
    id,
    ref: focusedNode,
    onClick,
    className: classname,
    "aria-selected": false,
    "aria-label": accessibilityLabel
  };
  const markup = url ? import_react212.default.createElement(UnstyledLink, Object.assign({}, sharedProps, {
    url
  }), children2) : import_react212.default.createElement("button", Object.assign({}, sharedProps, {
    ref: focusedNode,
    type: "button"
  }), children2);
  return import_react212.default.createElement("li", null, markup);
});
function noop11() {
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/List/List.js
function List({
  focusIndex,
  disclosureTabs,
  onClick = noop12,
  onKeyPress = noop12
}) {
  const tabs = disclosureTabs.map(({
    id,
    content,
    ...tabProps
  }, index) => {
    return import_react213.default.createElement(Item6, Object.assign({
      key: id
    }, tabProps, {
      id,
      focused: index === focusIndex,
      onClick: onClick.bind(null, id)
    }), content);
  });
  return import_react213.default.createElement("ul", {
    className: styles90.List,
    onKeyDown: handleKeyDown2,
    onKeyUp: onKeyPress
  }, tabs);
}
function noop12() {
}
function handleKeyDown2(event) {
  const {
    key
  } = event;
  if (key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/CreateViewModal/CreateViewModal.js
var import_react214 = __toESM(require_react());
var MAX_VIEW_NAME_LENGTH3 = 40;
function CreateViewModal({
  activator,
  open,
  onClose,
  onClickPrimaryAction,
  onClickSecondaryAction,
  viewNames
}) {
  const i18n = useI18n();
  const [value, setValue] = (0, import_react214.useState)("");
  const [loading, setLoading] = (0, import_react214.useState)(false);
  const container = (0, import_react214.useRef)(null);
  const isTouchDevice = useIsTouchDevice();
  const hasSameNameError = viewNames.some((viewName) => viewName.trim().toLowerCase() === value.trim().toLowerCase());
  const isPrimaryActionDisabled = !value || hasSameNameError || loading || value.length > MAX_VIEW_NAME_LENGTH3;
  (0, import_react214.useEffect)(() => {
    if (!container.current || isTouchDevice)
      return;
    if (open) {
      focusFirstFocusableNode(container.current);
      const timeout2 = setTimeout(() => {
        if (!container.current)
          return;
        focusFirstFocusableNode(container.current);
      }, 50);
      return () => clearTimeout(timeout2);
    }
  }, [open, isTouchDevice]);
  const handleChange = (0, import_react214.useCallback)((newValue) => {
    setValue(newValue);
  }, []);
  async function handlePrimaryAction() {
    if (hasSameNameError || isPrimaryActionDisabled) {
      return;
    }
    setLoading(true);
    await onClickPrimaryAction(value);
    setLoading(false);
    setValue("");
    onClose();
  }
  function handleSecondaryAction() {
    onClickSecondaryAction == null ? void 0 : onClickSecondaryAction();
    setValue("");
    onClose();
  }
  return import_react214.default.createElement(Modal, {
    activator,
    open,
    onClose,
    title: i18n.translate("Polaris.Tabs.CreateViewModal.title"),
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.CreateViewModal.create"),
      onAction: handlePrimaryAction,
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.CreateViewModal.cancel"),
      onAction: handleSecondaryAction
    }]
  }, import_react214.default.createElement(Modal.Section, null, import_react214.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, import_react214.default.createElement(FormLayout, null, import_react214.default.createElement("div", {
    ref: container
  }, import_react214.default.createElement(TextField, {
    label: i18n.translate("Polaris.Tabs.CreateViewModal.label"),
    value,
    onChange: handleChange,
    autoComplete: "off",
    maxLength: MAX_VIEW_NAME_LENGTH3,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.Tabs.CreateViewModal.errors.sameName", {
      name: value
    }) : void 0,
    disable1Password: true
  }))))));
}

// node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.js
var CREATE_NEW_VIEW_ID = "create-new-view";
var Tabs = ({
  tabs,
  children: children2,
  selected,
  newViewAccessibilityLabel,
  canCreateNewView,
  disabled,
  onCreateNewView,
  onSelect,
  fitted,
  disclosureText
}) => {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const i18n = useI18n();
  const {
    mdDown
  } = useBreakpoints();
  const scrollRef = (0, import_react215.useRef)(null);
  const wrapRef = (0, import_react215.useRef)(null);
  const selectedTabRef = (0, import_react215.useRef)(null);
  const [state, setState] = (0, import_react215.useReducer)((data, partialData) => {
    return {
      ...data,
      ...partialData
    };
  }, {
    disclosureWidth: 0,
    containerWidth: Infinity,
    tabWidths: [],
    visibleTabs: [],
    hiddenTabs: [],
    showDisclosure: false,
    tabToFocus: -1,
    isNewViewModalActive: false,
    modalSubmitted: false,
    isTabsFocused: false,
    isTabPopoverOpen: false,
    isTabModalOpen: false
  });
  const {
    tabToFocus,
    visibleTabs,
    hiddenTabs,
    showDisclosure,
    isNewViewModalActive,
    modalSubmitted,
    disclosureWidth,
    tabWidths,
    containerWidth,
    isTabsFocused,
    isTabModalOpen,
    isTabPopoverOpen
  } = state;
  const prevModalOpen = usePrevious(isTabModalOpen);
  const prevPopoverOpen = usePrevious(isTabPopoverOpen);
  (0, import_react215.useEffect)(() => {
    const hasModalClosed = prevModalOpen && !isTabModalOpen;
    const hasPopoverClosed = prevPopoverOpen && !isTabPopoverOpen;
    if (hasModalClosed) {
      setState({
        isTabsFocused: true,
        tabToFocus: selected
      });
    } else if (hasPopoverClosed && !isTabModalOpen) {
      setState({
        isTabsFocused: true,
        tabToFocus: selected
      });
    }
  }, [prevPopoverOpen, isTabPopoverOpen, prevModalOpen, isTabModalOpen, selected, tabToFocus]);
  const handleTogglePopover = (0, import_react215.useCallback)((isOpen) => setState({
    isTabPopoverOpen: isOpen
  }), []);
  const handleToggleModal = (0, import_react215.useCallback)((isOpen) => setState({
    isTabModalOpen: isOpen
  }), []);
  const handleCloseNewViewModal = () => {
    setState({
      isNewViewModalActive: false
    });
  };
  const handleSaveNewViewModal = async (value) => {
    if (!onCreateNewView) {
      return false;
    }
    const hasExecuted = await (onCreateNewView == null ? void 0 : onCreateNewView(value));
    if (hasExecuted) {
      setState({
        modalSubmitted: true
      });
    }
    return hasExecuted;
  };
  const handleClickNewTab = () => {
    setState({
      isNewViewModalActive: true
    });
  };
  const handleTabClick = (0, import_react215.useCallback)((id) => {
    const tab = tabs.find((aTab) => aTab.id === id);
    if (tab == null) {
      return null;
    }
    const selectedIndex = tabs.indexOf(tab);
    onSelect == null ? void 0 : onSelect(selectedIndex);
  }, [tabs, onSelect]);
  const renderTabMarkup = (0, import_react215.useCallback)((tab, index) => {
    const handleClick = () => {
      var _a;
      handleTabClick(tab.id);
      (_a = tab.onAction) == null ? void 0 : _a.call(tab);
    };
    const viewNames2 = tabs.map(({
      content
    }) => content);
    const tabPanelID = tab.panelID || `${tab.id}-panel`;
    return import_react215.default.createElement(Tab, Object.assign({}, tab, {
      key: `${index}-${tab.id}`,
      id: tab.id,
      panelID: children2 ? tabPanelID : void 0,
      disabled: disabled || tab.disabled,
      siblingTabHasFocus: tabToFocus > -1,
      focused: index === tabToFocus,
      selected: index === selected,
      onAction: handleClick,
      accessibilityLabel: tab.accessibilityLabel,
      url: tab.url,
      content: tab.content,
      onToggleModal: handleToggleModal,
      onTogglePopover: handleTogglePopover,
      viewNames: viewNames2,
      ref: index === selected ? selectedTabRef : null
    }));
  }, [disabled, handleTabClick, tabs, children2, selected, tabToFocus, handleToggleModal, handleTogglePopover]);
  const handleFocus = (0, import_react215.useCallback)((event) => {
    const target = event.target;
    const isItem = target.classList.contains(styles90.Item);
    const isInNaturalDOMOrder = target.closest(`[data-tabs-focus-catchment]`) || isItem;
    const isDisclosureActivator = target.classList.contains(styles90.DisclosureActivator);
    if (isDisclosureActivator || !isInNaturalDOMOrder) {
      return;
    }
    setState({
      isTabsFocused: true
    });
  }, []);
  const handleBlur = (0, import_react215.useCallback)((event) => {
    var _a, _b, _c;
    const target = event.target;
    const relatedTarget = event.relatedTarget;
    const isInNaturalDOMOrder = (_a = relatedTarget == null ? void 0 : relatedTarget.closest) == null ? void 0 : _a.call(relatedTarget, `.${styles90.Tabs}`);
    const targetIsATab = (_c = (_b = target == null ? void 0 : target.classList) == null ? void 0 : _b.contains) == null ? void 0 : _c.call(_b, styles90.Tab);
    const focusReceiverIsAnItem = relatedTarget == null ? void 0 : relatedTarget.classList.contains(styles90.Item);
    if (!relatedTarget && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {
      setState({
        tabToFocus: -1
      });
      return;
    }
    if (!isInNaturalDOMOrder && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {
      setState({
        tabToFocus: -1
      });
      return;
    }
    setState({
      isTabsFocused: false
    });
  }, [isTabModalOpen]);
  const handleKeyDown5 = (event) => {
    if (isTabPopoverOpen || isTabModalOpen || isNewViewModalActive) {
      return;
    }
    const {
      key
    } = event;
    if (key === "ArrowLeft" || key === "ArrowRight") {
      event.preventDefault();
      event.stopPropagation();
    }
  };
  (0, import_react215.useEffect)(() => {
    const {
      visibleTabs: visibleTabs2,
      hiddenTabs: hiddenTabs2
    } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);
    setState({
      visibleTabs: visibleTabs2,
      hiddenTabs: hiddenTabs2
    });
  }, [containerWidth, disclosureWidth, tabs, selected, tabWidths, setState]);
  const moveToSelectedTab = (0, import_react215.useCallback)(() => {
    var _a;
    const activeButton = (_a = selectedTabRef.current) == null ? void 0 : _a.querySelector(`.${styles90["Tab-active"]}`);
    if (activeButton) {
      moveToActiveTab(activeButton.offsetLeft);
    }
  }, []);
  (0, import_react215.useEffect)(() => {
    if (mdDown) {
      moveToSelectedTab();
    }
  }, [moveToSelectedTab, selected, mdDown]);
  (0, import_react215.useEffect)(() => {
    if (isTabsFocused && !showDisclosure) {
      const tabToFocus2 = selected;
      setState({
        tabToFocus: tabToFocus2
      });
    }
  }, [isTabsFocused, selected, setState, showDisclosure]);
  const handleKeyPress = (event) => {
    const {
      showDisclosure: showDisclosure2,
      visibleTabs: visibleTabs2,
      hiddenTabs: hiddenTabs2,
      tabToFocus: tabToFocus2,
      isNewViewModalActive: isNewViewModalActive2
    } = state;
    if (isTabModalOpen || isTabPopoverOpen || isNewViewModalActive2) {
      return;
    }
    const key = event.key;
    const tabsArrayInOrder = showDisclosure2 || mdDown ? visibleTabs2.concat(hiddenTabs2) : [...visibleTabs2];
    let newFocus = tabsArrayInOrder.indexOf(tabToFocus2);
    if (key === "ArrowRight") {
      newFocus += 1;
      if (newFocus === tabsArrayInOrder.length) {
        newFocus = 0;
      }
    }
    if (key === "ArrowLeft") {
      if (newFocus === -1 || newFocus === 0) {
        newFocus = tabsArrayInOrder.length - 1;
      } else {
        newFocus -= 1;
      }
    }
    const buttonToFocus = tabsArrayInOrder[newFocus];
    if (buttonToFocus != null) {
      setState({
        tabToFocus: buttonToFocus
      });
    }
  };
  const handleDisclosureActivatorClick = () => {
    setState({
      showDisclosure: !showDisclosure,
      tabToFocus: hiddenTabs[0]
    });
  };
  const handleClose = () => {
    setState({
      showDisclosure: false
    });
  };
  const handleMeasurement = (0, import_react215.useCallback)((measurements) => {
    const {
      hiddenTabWidths: tabWidths2,
      containerWidth: containerWidth2,
      disclosureWidth: disclosureWidth2
    } = measurements;
    const {
      visibleTabs: visibleTabs2,
      hiddenTabs: hiddenTabs2
    } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth2, tabWidths2, containerWidth2);
    setState({
      visibleTabs: visibleTabs2,
      hiddenTabs: hiddenTabs2,
      disclosureWidth: disclosureWidth2,
      containerWidth: containerWidth2,
      tabWidths: tabWidths2
    });
  }, [tabs, selected, setState]);
  const handleListTabClick = (id) => {
    handleTabClick(id);
    handleClose();
    setState({
      isTabsFocused: true
    });
  };
  const moveToActiveTab = (offsetLeft) => {
    setTimeout(() => {
      var _a, _b;
      if (scrollRef.current && typeof scrollRef.current.scroll === "function") {
        const scrollRefOffset = ((_a = wrapRef == null ? void 0 : wrapRef.current) == null ? void 0 : _a.offsetLeft) || 0;
        (_b = scrollRef == null ? void 0 : scrollRef.current) == null ? void 0 : _b.scroll({
          left: offsetLeft - scrollRefOffset
        });
      }
    }, 0);
  };
  const createViewA11yLabel = newViewAccessibilityLabel || i18n.translate("Polaris.Tabs.newViewAccessibilityLabel");
  const tabsToShow = mdDown ? [...visibleTabs, ...hiddenTabs] : visibleTabs;
  const tabsMarkup = tabsToShow.sort((tabA, tabB) => tabA - tabB).filter((tabIndex) => tabs[tabIndex]).map((tabIndex) => renderTabMarkup(tabs[tabIndex], tabIndex));
  const disclosureActivatorVisible = visibleTabs.length < tabs.length && !mdDown;
  const classname = classNames(styles90.Tabs, fitted && styles90.fitted, disclosureActivatorVisible && styles90.fillSpace);
  const wrapperClassNames = classNames(styles90.Wrapper, canCreateNewView && styles90.WrapperWithNewButton);
  const disclosureTabClassName = classNames(styles90.DisclosureTab, disclosureActivatorVisible && styles90["DisclosureTab-visible"]);
  const disclosureButtonClassName = classNames(styles90.DisclosureActivator);
  const disclosureButtonContent = import_react215.default.createElement(import_react215.default.Fragment, null, import_react215.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    fontWeight: "medium"
  }, disclosureText ?? i18n.translate("Polaris.Tabs.toggleTabsLabel")), import_react215.default.createElement("div", {
    className: classNames(styles90.IconWrap, disclosureActivatorVisible && showDisclosure && styles90["IconWrap-open"])
  }, import_react215.default.createElement(Icon, {
    source: polarisSummerEditions2023 ? SvgChevronDownMinor : SvgCaretDownMinor,
    color: "subdued"
  })));
  const disclosureButton = import_react215.default.createElement(UnstyledButton, {
    type: "button",
    className: disclosureButtonClassName,
    onClick: handleDisclosureActivatorClick,
    "aria-label": disclosureText ?? i18n.translate("Polaris.Tabs.toggleTabsLabel"),
    disabled
  }, disclosureButtonContent);
  const activator = disclosureButton;
  const disclosureTabs = hiddenTabs.map((tabIndex) => tabs[tabIndex]);
  const viewNames = tabs.map(({
    content
  }) => content);
  const tabMeasurer = import_react215.default.createElement(TabMeasurer, {
    tabToFocus,
    activator,
    selected,
    tabs,
    siblingTabHasFocus: tabToFocus > -1,
    handleMeasurement
  });
  const newTab = import_react215.default.createElement(Tab, {
    id: CREATE_NEW_VIEW_ID,
    content: createViewA11yLabel,
    actions: [],
    onAction: handleClickNewTab,
    onFocus: () => {
      if (modalSubmitted) {
        setState({
          tabToFocus: selected,
          modalSubmitted: false
        });
      }
    },
    icon: import_react215.default.createElement(Icon, {
      source: SvgPlusMinor,
      accessibilityLabel: createViewA11yLabel
    }),
    disabled,
    onTogglePopover: handleTogglePopover,
    onToggleModal: handleToggleModal,
    tabIndexOverride: 0
  });
  const panelMarkup = children2 ? tabs.map((_tab, index) => {
    return selected === index ? import_react215.default.createElement(Panel, {
      id: tabs[index].panelID || `${tabs[index].id}-panel`,
      tabID: tabs[index].id,
      key: tabs[index].id
    }, children2) : import_react215.default.createElement(Panel, {
      id: tabs[index].panelID || `${tabs[index].id}-panel`,
      tabID: tabs[index].id,
      key: tabs[index].id,
      hidden: true
    });
  }) : null;
  return import_react215.default.createElement("div", {
    className: styles90.Outer
  }, import_react215.default.createElement(Box, {
    padding: {
      md: "200"
    }
  }, tabMeasurer, import_react215.default.createElement("div", {
    className: wrapperClassNames,
    ref: scrollRef
  }, import_react215.default.createElement("div", {
    className: styles90.ButtonWrapper,
    ref: wrapRef
  }, import_react215.default.createElement("ul", {
    role: tabsMarkup.length > 0 ? "tablist" : void 0,
    className: classname,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onKeyDown: handleKeyDown5,
    onKeyUp: handleKeyPress,
    "data-tabs-focus-catchment": true
  }, tabsMarkup, mdDown || tabsToShow.length === 0 ? null : import_react215.default.createElement("li", {
    className: disclosureTabClassName,
    role: "presentation"
  }, import_react215.default.createElement(Popover2, {
    preferredPosition: "below",
    preferredAlignment: "left",
    activator,
    active: disclosureActivatorVisible && showDisclosure,
    onClose: handleClose,
    autofocusTarget: "first-node"
  }, import_react215.default.createElement(List, {
    focusIndex: hiddenTabs.indexOf(tabToFocus),
    disclosureTabs,
    onClick: handleListTabClick,
    onKeyPress: handleKeyPress
  })))), canCreateNewView && tabsToShow.length > 0 ? import_react215.default.createElement("div", {
    className: styles90.NewTab
  }, import_react215.default.createElement(CreateViewModal, {
    open: isNewViewModalActive,
    onClose: handleCloseNewViewModal,
    onClickPrimaryAction: handleSaveNewViewModal,
    viewNames,
    activator: disabled ? newTab : import_react215.default.createElement(Tooltip, {
      content: i18n.translate("Polaris.Tabs.newViewTooltip"),
      preferredPosition: "above",
      hoverDelay: 400
    }, newTab)
  })) : null))), panelMarkup);
};

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SearchFilterButton/SearchFilterButton.js
var import_react216 = __toESM(require_react());
function SearchFilterButton({
  onClick,
  label,
  disabled,
  tooltipContent,
  style,
  hideFilters,
  hideQueryField
}) {
  const {
    polarisSummerEditions2023: se23
  } = useFeatures();
  const iconMarkup = import_react216.default.createElement(HorizontalStack, {
    gap: "0"
  }, hideQueryField ? null : import_react216.default.createElement(Icon, {
    source: SvgSearchMinor,
    color: "base"
  }), hideFilters ? null : import_react216.default.createElement(Icon, {
    source: SvgFilterMinor,
    color: "base"
  }));
  const childMarkup = !se23 ? iconMarkup : null;
  const activator = import_react216.default.createElement("div", {
    style
  }, import_react216.default.createElement(FilterButton, {
    onClick,
    label,
    disabled,
    icon: se23 ? iconMarkup : void 0
  }, childMarkup));
  const content = import_react216.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    alignment: "center"
  }, tooltipContent);
  return import_react216.default.createElement(Tooltip, {
    content,
    preferredPosition: "above",
    hoverDelay: 400
  }, activator);
}

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.js
var DEFAULT_IGNORED_TAGS = ["INPUT", "SELECT", "TEXTAREA"];
var TRANSITION_DURATION2 = 150;
var defaultStyle2 = {
  transition: `opacity ${TRANSITION_DURATION2}ms var(--p-motion-ease)`,
  opacity: 0
};
var transitionStyles2 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  },
  exiting: {
    opacity: 0
  },
  exited: {
    opacity: 0
  },
  unmounted: {
    opacity: 0
  }
};
function IndexFilters({
  tabs,
  selected,
  onSelect,
  onSort,
  onSortKeyChange,
  onSortDirectionChange,
  onAddFilterClick,
  sortOptions,
  sortSelected,
  queryValue = "",
  queryPlaceholder,
  primaryAction,
  cancelAction,
  filters,
  appliedFilters,
  onClearAll,
  onQueryChange,
  onQueryFocus,
  onQueryClear,
  onEditStart,
  disabled,
  disableQueryField,
  hideFilters,
  loading,
  mode,
  setMode,
  disableStickyMode,
  isFlushWhenSticky = false,
  canCreateNewView = true,
  onCreateNewView,
  filteringAccessibilityLabel,
  filteringAccessibilityTooltip,
  hideQueryField,
  closeOnChildOverlayClick,
  disableKeyboardShortcuts
}) {
  const i18n = useI18n();
  const {
    mdDown
  } = useBreakpoints();
  const defaultRef = (0, import_react217.useRef)(null);
  const filteringRef = (0, import_react217.useRef)(null);
  const {
    value: filtersFocused,
    setFalse: setFiltersUnFocused,
    setTrue: setFiltersFocused
  } = useToggle(mode === IndexFiltersMode.Filtering);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const handleModeChange = (newMode) => {
    if (newMode === IndexFiltersMode.Filtering) {
      setFiltersFocused();
    } else {
      setFiltersUnFocused();
    }
  };
  useOnValueChange(mode, handleModeChange);
  useEventListener("keydown", (event) => {
    var _a;
    if (disableKeyboardShortcuts)
      return;
    const {
      key
    } = event;
    const tag = (_a = document == null ? void 0 : document.activeElement) == null ? void 0 : _a.tagName;
    if (mode !== IndexFiltersMode.Default && event.key === "Escape") {
      onPressEscape();
    }
    if (key === "f" && mode === IndexFiltersMode.Default) {
      if (tag && DEFAULT_IGNORED_TAGS.includes(tag)) {
        return;
      }
      onPressF();
      event.preventDefault();
    }
  });
  const {
    intersectionRef,
    measurerRef,
    indexFilteringHeight,
    isSticky
  } = useIsSticky(mode, Boolean(disableStickyMode), isFlushWhenSticky);
  const viewNames = tabs.map(({
    content
  }) => content);
  const handleChangeSortButton = (0, import_react217.useCallback)((value) => {
    onSort == null ? void 0 : onSort(value);
  }, [onSort]);
  const handleChangeSearch = (0, import_react217.useCallback)((value) => {
    onQueryChange(value);
  }, [onQueryChange]);
  const useExecutedCallback = (action, afterEffect) => (0, import_react217.useCallback)(async (name) => {
    const hasExecuted = await (action == null ? void 0 : action(name));
    if (hasExecuted) {
      setMode(IndexFiltersMode.Default);
      afterEffect == null ? void 0 : afterEffect();
    }
  }, [action, afterEffect]);
  const onExecutedPrimaryAction = useExecutedCallback(primaryAction == null ? void 0 : primaryAction.onAction);
  const onExecutedCancelAction = (0, import_react217.useCallback)(() => {
    var _a;
    (_a = cancelAction.onAction) == null ? void 0 : _a.call(cancelAction);
    setMode(IndexFiltersMode.Default);
  }, [cancelAction, setMode]);
  const enhancedPrimaryAction = (0, import_react217.useMemo)(() => {
    return primaryAction ? {
      ...primaryAction,
      onAction: onExecutedPrimaryAction
    } : void 0;
  }, [onExecutedPrimaryAction, primaryAction]);
  const enhancedCancelAction = (0, import_react217.useMemo)(() => {
    return {
      ...cancelAction,
      onAction: onExecutedCancelAction
    };
  }, [cancelAction, onExecutedCancelAction]);
  const beginEdit = (0, import_react217.useCallback)(() => {
    setMode(IndexFiltersMode.Filtering);
    onEditStart == null ? void 0 : onEditStart();
  }, [onEditStart, setMode]);
  const updateButtonsMarkup = (0, import_react217.useMemo)(() => import_react217.default.createElement(UpdateButtons, {
    primaryAction: enhancedPrimaryAction,
    cancelAction: enhancedCancelAction,
    viewNames,
    disabled
  }), [enhancedPrimaryAction, enhancedCancelAction, disabled, viewNames]);
  const sortMarkup = (0, import_react217.useMemo)(() => {
    if (!(sortOptions == null ? void 0 : sortOptions.length)) {
      return null;
    }
    return import_react217.default.createElement(SortButton, {
      choices: sortOptions,
      selected: sortSelected,
      onChange: handleChangeSortButton,
      onChangeKey: onSortKeyChange,
      onChangeDirection: onSortDirectionChange,
      disabled
    });
  }, [handleChangeSortButton, onSortDirectionChange, onSortKeyChange, sortOptions, sortSelected, disabled]);
  const isActionLoading = (primaryAction == null ? void 0 : primaryAction.loading) || (cancelAction == null ? void 0 : cancelAction.loading);
  function handleClickFilterButton() {
    beginEdit();
  }
  const searchFilterTooltipLabelId = disableKeyboardShortcuts ? "Polaris.IndexFilters.searchFilterTooltip" : "Polaris.IndexFilters.searchFilterTooltipWithShortcut";
  const searchFilterTooltip = filteringAccessibilityTooltip || i18n.translate(searchFilterTooltipLabelId);
  const searchFilterAriaLabel = filteringAccessibilityLabel || i18n.translate("Polaris.IndexFilters.searchFilterAccessibilityLabel");
  const isLoading = loading || isActionLoading;
  function onPressEscape() {
    cancelAction == null ? void 0 : cancelAction.onAction();
    setMode(IndexFiltersMode.Default);
  }
  function handleClearSearch() {
    onQueryClear == null ? void 0 : onQueryClear();
  }
  function handleQueryBlur() {
    setFiltersUnFocused();
  }
  function handleQueryFocus() {
    setFiltersFocused();
    onQueryFocus == null ? void 0 : onQueryFocus();
  }
  function onPressF() {
    if (mode !== IndexFiltersMode.Default) {
      return;
    }
    beginEdit();
  }
  return import_react217.default.createElement("div", {
    className: styles86.IndexFiltersWrapper,
    style: {
      height: indexFilteringHeight
    }
  }, import_react217.default.createElement("div", {
    ref: intersectionRef
  }), import_react217.default.createElement("div", {
    className: classNames(styles86.IndexFilters, isSticky && styles86.IndexFiltersSticky, isSticky && isFlushWhenSticky && styles86.IndexFiltersStickyFlush),
    ref: measurerRef
  }, import_react217.default.createElement(Transition_default, {
    nodeRef: defaultRef,
    in: mode !== IndexFiltersMode.Filtering,
    timeout: TRANSITION_DURATION2
  }, (state) => import_react217.default.createElement("div", {
    ref: defaultRef
  }, mode !== IndexFiltersMode.Filtering ? import_react217.default.createElement(Container, null, import_react217.default.createElement(HorizontalStack, {
    align: "start",
    blockAlign: "center",
    gap: {
      xs: "0",
      md: "200"
    }
  }, import_react217.default.createElement("div", {
    className: classNames(styles86.TabsWrapper, mdDown && styles86.SmallScreenTabsWrapper, isLoading && styles86.TabsWrapperLoading)
  }, import_react217.default.createElement("div", {
    className: styles86.TabsInner,
    style: {
      ...defaultStyle2,
      ...transitionStyles2[state]
    }
  }, import_react217.default.createElement(Tabs, {
    tabs,
    selected,
    onSelect,
    disabled: Boolean(mode !== IndexFiltersMode.Default || disabled),
    canCreateNewView,
    onCreateNewView
  })), isLoading && mdDown && import_react217.default.createElement("div", {
    className: styles86.TabsLoading
  }, import_react217.default.createElement(Spinner, {
    size: "small"
  }))), import_react217.default.createElement("div", {
    className: styles86.ActionWrap
  }, isLoading && !mdDown && import_react217.default.createElement(Spinner, {
    size: "small"
  }), mode === IndexFiltersMode.Default ? import_react217.default.createElement(import_react217.default.Fragment, null, hideFilters && hideQueryField ? null : import_react217.default.createElement(SearchFilterButton, {
    onClick: handleClickFilterButton,
    label: searchFilterAriaLabel,
    tooltipContent: searchFilterTooltip,
    disabled,
    hideFilters,
    hideQueryField,
    style: {
      ...defaultStyle2,
      ...transitionStyles2[state]
    }
  }), sortMarkup) : null, mode === IndexFiltersMode.EditingColumns ? updateButtonsMarkup : null))) : null)), import_react217.default.createElement(Transition_default, {
    nodeRef: filteringRef,
    in: mode === IndexFiltersMode.Filtering,
    timeout: TRANSITION_DURATION2
  }, (state) => import_react217.default.createElement("div", {
    ref: filteringRef
  }, mode === IndexFiltersMode.Filtering ? import_react217.default.createElement(Filters, {
    queryValue,
    queryPlaceholder,
    onQueryChange: handleChangeSearch,
    onQueryClear: handleClearSearch,
    onQueryFocus: handleQueryFocus,
    onQueryBlur: handleQueryBlur,
    onAddFilterClick,
    filters,
    appliedFilters,
    onClearAll,
    disableFilters: disabled,
    hideFilters,
    hideQueryField,
    disableQueryField: disabled || disableQueryField,
    loading: loading || isActionLoading,
    focused: filtersFocused,
    mountedState: mdDown ? void 0 : state,
    borderlessQueryField: true,
    closeOnChildOverlayClick
  }, import_react217.default.createElement("div", {
    className: styles86.ButtonWrap
  }, import_react217.default.createElement(HorizontalStack, {
    gap: polarisSummerEditions2023 ? "200" : "300",
    align: "start",
    blockAlign: "center"
  }, import_react217.default.createElement("div", {
    style: {
      ...defaultStyle2,
      ...transitionStyles2[state]
    }
  }, updateButtonsMarkup), sortMarkup))) : null))));
}

// node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js
var import_react229 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.scss.js
var styles91 = {
  "IndexTable": "Polaris-IndexTable",
  "IndexTableWrapper": "Polaris-IndexTable__IndexTableWrapper",
  "IndexTableWrapper-scrollBarHidden": "Polaris-IndexTable__IndexTableWrapper--scrollBarHidden",
  "IndexTableWrapperWithBulkActions": "Polaris-IndexTable__IndexTableWrapperWithBulkActions",
  "LoadingContainer-enter": "Polaris-IndexTable__LoadingContainer--enter",
  "LoadingContainer-enter-active": "Polaris-IndexTable--loadingContainerEnterActive",
  "LoadingContainer-exit": "Polaris-IndexTable__LoadingContainer--exit",
  "LoadingContainer-exit-active": "Polaris-IndexTable--loadingContainerExitActive",
  "LoadingPanel": "Polaris-IndexTable__LoadingPanel",
  "LoadingPanelRow": "Polaris-IndexTable__LoadingPanelRow",
  "LoadingPanelText": "Polaris-IndexTable__LoadingPanelText",
  "Table": "Polaris-IndexTable__Table",
  "Table-scrolling": "Polaris-IndexTable__Table--scrolling",
  "TableCell-first": "Polaris-IndexTable__TableCell--first",
  "TableCell": "Polaris-IndexTable__TableCell",
  "TableHeading-first": "Polaris-IndexTable__TableHeading--first",
  "TableHeading-second": "Polaris-IndexTable__TableHeading--second",
  "TableRow-subdued": "Polaris-IndexTable__TableRow--subdued",
  "Table-sticky": "Polaris-IndexTable__Table--sticky",
  "Table-unselectable": "Polaris-IndexTable__Table--unselectable",
  "TableRow": "Polaris-IndexTable__TableRow",
  "TableRow-selected": "Polaris-IndexTable__TableRow--selected",
  "TableRow-unclickable": "Polaris-IndexTable__TableRow--unclickable",
  "statusSuccess": "Polaris-IndexTable--statusSuccess",
  "statusCritical": "Polaris-IndexTable--statusCritical",
  "statusWarning": "Polaris-IndexTable--statusWarning",
  "statusSubdued": "Polaris-IndexTable--statusSubdued",
  "TableRow-subheader": "Polaris-IndexTable__TableRow--subheader",
  "TableRow-hovered": "Polaris-IndexTable__TableRow--hovered",
  "TableRow-disabled": "Polaris-IndexTable__TableRow--disabled",
  "ZebraStriping": "Polaris-IndexTable__ZebraStriping",
  "TableHeading": "Polaris-IndexTable__TableHeading",
  "TableHeading-flush": "Polaris-IndexTable__TableHeading--flush",
  "TableHeading-align-center": "Polaris-IndexTable--tableHeadingAlignCenter",
  "TableHeading-align-end": "Polaris-IndexTable--tableHeadingAlignEnd",
  "TableHeading-sortable": "Polaris-IndexTable__TableHeading--sortable",
  "TableHeadingSortButton": "Polaris-IndexTable__TableHeadingSortButton",
  "TableHeadingSortIcon": "Polaris-IndexTable__TableHeadingSortIcon",
  "TableHeadingSortButton-heading-align-end": "Polaris-IndexTable--tableHeadingSortButtonHeadingAlignEnd",
  "TableHeadingSortButton-heading-align-end-currently-sorted": "Polaris-IndexTable--tableHeadingSortButtonHeadingAlignEndCurrentlySorted",
  "TableHeadingSortIcon-heading-align-end": "Polaris-IndexTable--tableHeadingSortIconHeadingAlignEnd",
  "TableHeadingSortButton-heading-align-end-previously-sorted": "Polaris-IndexTable--tableHeadingSortButtonHeadingAlignEndPreviouslySorted",
  "right-aligned-sort-button-slide-out": "Polaris-IndexTable--rightAlignedSortButtonSlideOut",
  "reveal-right-aligned-sort-button-icon": "Polaris-IndexTable--revealRightAlignedSortButtonIcon",
  "TableHeadingUnderline": "Polaris-IndexTable__TableHeadingUnderline",
  "TableHeadingTooltipUnderlinePlaceholder": "Polaris-IndexTable__TableHeadingTooltipUnderlinePlaceholder",
  "TableHeadingSortIcon-visible": "Polaris-IndexTable__TableHeadingSortIcon--visible",
  "TableHeadingSortSvg": "Polaris-IndexTable__TableHeadingSortSvg",
  "SortableTableHeadingWithCustomMarkup": "Polaris-IndexTable__SortableTableHeadingWithCustomMarkup",
  "SortableTableHeaderWrapper": "Polaris-IndexTable__SortableTableHeaderWrapper",
  "ColumnHeaderCheckboxWrapper": "Polaris-IndexTable__ColumnHeaderCheckboxWrapper",
  "FirstStickyHeaderElement": "Polaris-IndexTable__FirstStickyHeaderElement",
  "TableHeading-unselectable": "Polaris-IndexTable__TableHeading--unselectable",
  "TableCell-flush": "Polaris-IndexTable__TableCell--flush",
  "Table-sticky-scrolling": "Polaris-IndexTable--tableStickyScrolling",
  "TableHeading-last": "Polaris-IndexTable__TableHeading--last",
  "Table-sticky-last": "Polaris-IndexTable--tableStickyLast",
  "Table-sortable": "Polaris-IndexTable__Table--sortable",
  "StickyTable": "Polaris-IndexTable__StickyTable",
  "StickyTableHeader": "Polaris-IndexTable__StickyTableHeader",
  "StickyTableHeader-isSticky": "Polaris-IndexTable__StickyTableHeader--isSticky",
  "StickyTableColumnHeader": "Polaris-IndexTable__StickyTableColumnHeader",
  "StickyTableHeadings": "Polaris-IndexTable__StickyTableHeadings",
  "StickyTableHeading-second": "Polaris-IndexTable__StickyTableHeading--second",
  "unselectable": "Polaris-IndexTable--unselectable",
  "StickyTableHeading-second-scrolling": "Polaris-IndexTable--stickyTableHeadingSecondScrolling",
  "ScrollLeft": "Polaris-IndexTable__ScrollLeft",
  "ScrollRight": "Polaris-IndexTable__ScrollRight",
  "ScrollRight-onboarding": "Polaris-IndexTable__ScrollRight--onboarding",
  "BulkActionsWrapper": "Polaris-IndexTable__BulkActionsWrapper",
  "BulkActionsWrapperSticky": "Polaris-IndexTable__BulkActionsWrapperSticky",
  "SelectAllActionsWrapper": "Polaris-IndexTable__SelectAllActionsWrapper",
  "StickyTableHeader-condensed": "Polaris-IndexTable__StickyTableHeader--condensed",
  "ScrollBarContainer": "Polaris-IndexTable__ScrollBarContainer",
  "scrollBarContainerCondensed": "Polaris-IndexTable--scrollBarContainerCondensed",
  "scrollBarContainerHidden": "Polaris-IndexTable--scrollBarContainerHidden",
  "ScrollBar": "Polaris-IndexTable__ScrollBar",
  "disableTextSelection": "Polaris-IndexTable--disableTextSelection",
  "selectMode": "Polaris-IndexTable--selectMode",
  "EmptySearchResultWrapper": "Polaris-IndexTable__EmptySearchResultWrapper",
  "condensedRow": "Polaris-IndexTable--condensedRow",
  "CondensedList": "Polaris-IndexTable__CondensedList",
  "HeaderWrapper": "Polaris-IndexTable__HeaderWrapper",
  "StickyTable-condensed": "Polaris-IndexTable__StickyTable--condensed",
  "ScrollBarContent": "Polaris-IndexTable__ScrollBarContent"
};

// node_modules/@shopify/polaris/build/esm/components/IndexProvider/IndexProvider.js
var import_react220 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/hooks.js
var import_react219 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/types.js
var SELECT_ALL_ITEMS = "All";
var SelectionType2;
(function(SelectionType3) {
  SelectionType3["All"] = "all";
  SelectionType3["Page"] = "page";
  SelectionType3["Multi"] = "multi";
  SelectionType3["Single"] = "single";
  SelectionType3["Range"] = "range";
})(SelectionType2 || (SelectionType2 = {}));

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/context.js
var import_react218 = __toESM(require_react());
var IndexContext = (0, import_react218.createContext)(void 0);
var IndexSelectionChangeContext = (0, import_react218.createContext)(void 0);
var IndexRowContext = (0, import_react218.createContext)(void 0);

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/hooks.js
function useIndexSelectionChange() {
  const onSelectionChange = (0, import_react219.useContext)(IndexSelectionChangeContext);
  if (!onSelectionChange) {
    throw new Error(`Missing IndexProvider context`);
  }
  return onSelectionChange;
}
function useIndexRow() {
  const indexRow = (0, import_react219.useContext)(IndexRowContext);
  if (!indexRow) {
    throw new Error(`Missing IndexProvider context`);
  }
  return indexRow;
}
function useIndexValue() {
  const index = (0, import_react219.useContext)(IndexContext);
  if (!index) {
    throw new Error(`Missing IndexProvider context`);
  }
  return index;
}
function useBulkSelectionData({
  selectedItemsCount,
  itemCount,
  hasMoreItems,
  resourceName: passedResourceName
}) {
  const i18n = useI18n();
  const selectable = Boolean(selectedItemsCount);
  const selectMode = selectedItemsCount === "All" || selectedItemsCount > 0;
  const defaultResourceName = {
    singular: i18n.translate("Polaris.IndexProvider.defaultItemSingular"),
    plural: i18n.translate("Polaris.IndexProvider.defaultItemPlural")
  };
  const resourceName = passedResourceName ? passedResourceName : defaultResourceName;
  const paginatedSelectAllText = getPaginatedSelectAllText();
  const bulkActionsLabel = getBulkActionsLabel();
  const bulkActionsAccessibilityLabel = getBulkActionsAccessibilityLabel();
  let bulkSelectState = "indeterminate";
  if (!selectedItemsCount || selectedItemsCount === 0) {
    bulkSelectState = void 0;
  } else if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount === itemCount) {
    bulkSelectState = true;
  }
  return {
    paginatedSelectAllText,
    bulkActionsLabel,
    bulkActionsAccessibilityLabel,
    resourceName,
    selectMode,
    bulkSelectState,
    selectable
  };
  function getPaginatedSelectAllText() {
    if (!selectable || !hasMoreItems) {
      return;
    }
    if (selectedItemsCount === SELECT_ALL_ITEMS) {
      return i18n.translate("Polaris.IndexProvider.allItemsSelected", {
        itemsLength: itemCount,
        resourceNamePlural: resourceName.plural.toLocaleLowerCase()
      });
    }
  }
  function getBulkActionsLabel() {
    const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;
    return i18n.translate("Polaris.IndexProvider.selected", {
      selectedItemsCount: selectedItemsCountLabel
    });
  }
  function getBulkActionsAccessibilityLabel() {
    const totalItemsCount = itemCount;
    const allSelected = selectedItemsCount === totalItemsCount;
    if (totalItemsCount === 1 && allSelected) {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxDeselectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (totalItemsCount === 1) {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxSelectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (allSelected) {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxDeselectAllMultiple", {
        itemsLength: itemCount,
        resourceNamePlural: resourceName.plural
      });
    } else {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxSelectAllMultiple", {
        itemsLength: itemCount,
        resourceNamePlural: resourceName.plural
      });
    }
  }
}
function useHandleBulkSelection({
  onSelectionChange = () => {
  }
}) {
  const lastSelected = (0, import_react219.useRef)(null);
  const handleSelectionChange = (0, import_react219.useCallback)((selectionType, toggleType, selection, sortOrder) => {
    const prevSelected = lastSelected.current;
    if (SelectionType2.Multi && typeof sortOrder === "number") {
      lastSelected.current = sortOrder;
    }
    if (selectionType === SelectionType2.Single || selectionType === SelectionType2.Multi && (typeof prevSelected !== "number" || typeof sortOrder !== "number")) {
      onSelectionChange(SelectionType2.Single, toggleType, selection);
    } else if (selectionType === SelectionType2.Multi) {
      const min = Math.min(prevSelected, sortOrder);
      const max = Math.max(prevSelected, sortOrder);
      onSelectionChange(selectionType, toggleType, [min, max]);
    } else if (selectionType === SelectionType2.Page || selectionType === SelectionType2.All) {
      onSelectionChange(selectionType, toggleType);
    } else if (selectionType === SelectionType2.Range) {
      onSelectionChange(SelectionType2.Range, toggleType, selection);
    }
  }, [onSelectionChange]);
  return handleSelectionChange;
}

// node_modules/@shopify/polaris/build/esm/components/IndexProvider/IndexProvider.js
function IndexProvider({
  children: children2,
  resourceName: passedResourceName,
  loading,
  onSelectionChange,
  selectedItemsCount = 0,
  itemCount,
  hasMoreItems,
  condensed,
  selectable: isSelectableIndex = true
}) {
  const {
    paginatedSelectAllText,
    bulkActionsLabel,
    bulkActionsAccessibilityLabel,
    resourceName,
    selectMode,
    bulkSelectState
  } = useBulkSelectionData({
    selectedItemsCount,
    itemCount,
    hasMoreItems,
    resourceName: passedResourceName
  });
  const handleSelectionChange = useHandleBulkSelection({
    onSelectionChange
  });
  const contextValue = (0, import_react220.useMemo)(() => ({
    itemCount,
    selectMode: selectMode && isSelectableIndex,
    selectable: isSelectableIndex,
    resourceName,
    loading,
    paginatedSelectAllText,
    hasMoreItems,
    bulkActionsLabel,
    bulkActionsAccessibilityLabel,
    bulkSelectState,
    selectedItemsCount,
    condensed
  }), [itemCount, selectMode, isSelectableIndex, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);
  const rowContextValue = (0, import_react220.useMemo)(() => ({
    selectable: isSelectableIndex,
    selectMode: selectMode && isSelectableIndex,
    condensed
  }), [condensed, selectMode, isSelectableIndex]);
  return import_react220.default.createElement(IndexContext.Provider, {
    value: contextValue
  }, import_react220.default.createElement(IndexRowContext.Provider, {
    value: rowContextValue
  }, import_react220.default.createElement(IndexSelectionChangeContext.Provider, {
    value: handleSelectionChange
  }, children2)));
}

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Cell/Cell.js
var import_react221 = __toESM(require_react());
var Cell3 = (0, import_react221.memo)(function Cell4({
  children: children2,
  className: customClassName,
  flush,
  colSpan,
  headers,
  scope,
  as = "td",
  id
}) {
  const className = classNames(customClassName, styles91.TableCell, flush && styles91["TableCell-flush"]);
  return import_react221.default.createElement(as, {
    id,
    colSpan,
    headers,
    scope,
    className
  }, children2);
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Row/Row.js
var import_react224 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.js
var import_react223 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.scss.js
var styles92 = {
  "TableCellContentContainer": "Polaris-IndexTable-Checkbox__TableCellContentContainer",
  "Wrapper": "Polaris-IndexTable-Checkbox__Wrapper"
};

// node_modules/@shopify/polaris/build/esm/utilities/index-table/context.js
var import_react222 = __toESM(require_react());
var RowContext = (0, import_react222.createContext)({});
var RowHoveredContext = (0, import_react222.createContext)(void 0);
var scrollDefaultContext = {
  scrollableContainer: null,
  canScrollLeft: false,
  canScrollRight: false
};
var ScrollContext = (0, import_react222.createContext)(scrollDefaultContext);

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.js
var Checkbox3 = (0, import_react223.memo)(function Checkbox4({
  accessibilityLabel
}) {
  const i18n = useI18n();
  const {
    resourceName
  } = useIndexValue();
  const {
    itemId,
    selected,
    disabled,
    onInteraction
  } = (0, import_react223.useContext)(RowContext);
  const wrapperClassName = classNames(styles92.Wrapper);
  const label = accessibilityLabel ? accessibilityLabel : i18n.translate("Polaris.IndexTable.selectItem", {
    resourceName: resourceName.singular
  });
  return import_react223.default.createElement(CheckboxWrapper, null, import_react223.default.createElement("div", {
    className: styles92.TableCellContentContainer
  }, import_react223.default.createElement("div", {
    className: wrapperClassName,
    onClick: onInteraction,
    onKeyUp: noop13
  }, import_react223.default.createElement(Checkbox, {
    id: `Select-${itemId}`,
    label,
    labelHidden: true,
    checked: selected,
    disabled
  }))));
});
function CheckboxWrapper({
  children: children2
}) {
  const {
    position
  } = (0, import_react223.useContext)(RowContext);
  const checkboxNode = (0, import_react223.useRef)(null);
  const handleResize = (0, import_react223.useCallback)(debounce(() => {
    if (position !== 0 || !checkboxNode.current)
      return;
    const {
      width: width2
    } = checkboxNode.current.getBoundingClientRect();
    setRootProperty("--pc-checkbox-offset", `${width2}px`);
  }), [position]);
  (0, import_react223.useEffect)(() => {
    handleResize();
  }, [handleResize]);
  (0, import_react223.useEffect)(() => {
    if (!checkboxNode.current)
      return;
    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, [handleResize]);
  const checkboxClassName = classNames(styles91.TableCell, styles91["TableCell-first"]);
  return import_react223.default.createElement("td", {
    className: checkboxClassName,
    ref: checkboxNode
  }, children2);
}
function noop13() {
}

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Row/Row.js
var Row = (0, import_react224.memo)(function Row2({
  children: children2,
  selected,
  id,
  position,
  subdued,
  status,
  tone,
  disabled,
  selectionRange,
  rowType = "data",
  accessibilityLabel,
  onNavigation,
  onClick
}) {
  const {
    selectable,
    selectMode,
    condensed
  } = useIndexRow();
  const onSelectionChange = useIndexSelectionChange();
  const {
    value: hovered,
    setTrue: setHoverIn,
    setFalse: setHoverOut
  } = useToggle(false);
  const handleInteraction = (0, import_react224.useCallback)((event) => {
    event.stopPropagation();
    let selectionType = SelectionType2.Single;
    if ("key" in event && event.key !== " " || !onSelectionChange)
      return;
    if (event.nativeEvent.shiftKey) {
      selectionType = SelectionType2.Multi;
    } else if (selectionRange) {
      selectionType = SelectionType2.Range;
    }
    const selection = selectionRange ?? id;
    onSelectionChange(selectionType, !selected, selection, position);
  }, [id, onSelectionChange, selected, selectionRange, position]);
  const contextValue = (0, import_react224.useMemo)(() => ({
    itemId: id,
    selected,
    position,
    onInteraction: handleInteraction,
    disabled
  }), [id, selected, disabled, position, handleInteraction]);
  const primaryLinkElement = (0, import_react224.useRef)(null);
  const isNavigating = (0, import_react224.useRef)(false);
  const tableRowRef = (0, import_react224.useRef)(null);
  const tableRowCallbackRef = (0, import_react224.useCallback)((node) => {
    tableRowRef.current = node;
    const el = node == null ? void 0 : node.querySelector("[data-primary-link]");
    if (el) {
      primaryLinkElement.current = el;
    }
  }, []);
  const rowClassName = classNames(styles91.TableRow, rowType === "subheader" && styles91["TableRow-subheader"], selectable && condensed && styles91.condensedRow, selected && styles91["TableRow-selected"], subdued && styles91["TableRow-subdued"], hovered && !condensed && styles91["TableRow-hovered"], disabled && styles91["TableRow-disabled"], status && styles91[variationName("status", status)], tone && styles91[variationName("status", tone)], !selectable && !primaryLinkElement.current && styles91["TableRow-unclickable"]);
  let handleRowClick;
  if (!disabled && selectable || primaryLinkElement.current) {
    handleRowClick = (event) => {
      if (rowType === "subheader")
        return;
      if (!tableRowRef.current || isNavigating.current) {
        return;
      }
      event.stopPropagation();
      event.preventDefault();
      if (onClick) {
        onClick();
        return;
      }
      if (primaryLinkElement.current && !selectMode) {
        isNavigating.current = true;
        const {
          ctrlKey,
          metaKey
        } = event.nativeEvent;
        if (onNavigation) {
          onNavigation(id);
        }
        if ((ctrlKey || metaKey) && primaryLinkElement.current instanceof HTMLAnchorElement) {
          isNavigating.current = false;
          window.open(primaryLinkElement.current.href, "_blank");
          return;
        }
        primaryLinkElement.current.dispatchEvent(new MouseEvent(event.type, event.nativeEvent));
      } else {
        isNavigating.current = false;
        handleInteraction(event);
      }
    };
  }
  const RowWrapper = condensed ? "li" : "tr";
  const checkboxMarkup = selectable ? import_react224.default.createElement(Checkbox3, {
    accessibilityLabel
  }) : null;
  return import_react224.default.createElement(RowContext.Provider, {
    value: contextValue
  }, import_react224.default.createElement(RowHoveredContext.Provider, {
    value: hovered
  }, import_react224.default.createElement(RowWrapper, {
    key: id,
    id,
    className: rowClassName,
    onMouseEnter: setHoverIn,
    onMouseLeave: setHoverOut,
    onClick: handleRowClick,
    ref: tableRowCallbackRef
  }, checkboxMarkup, children2)));
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/hooks/use-is-bulk-actions-sticky.js
var import_react225 = __toESM(require_react());
var DEBOUNCE_PERIOD2 = 250;
var PADDING_IN_SELECT_MODE = 92;
function useIsBulkActionsSticky(selectMode) {
  const hasIOSupport = typeof window !== "undefined" && Boolean(window.IntersectionObserver);
  const [isBulkActionsSticky, setIsSticky] = (0, import_react225.useState)(false);
  const [bulkActionsAbsoluteOffset, setBulkActionsAbsoluteOffset] = (0, import_react225.useState)(0);
  const [bulkActionsMaxWidth, setBulkActionsMaxWidth] = (0, import_react225.useState)(0);
  const [bulkActionsOffsetLeft, setBulkActionsOffsetLeft] = (0, import_react225.useState)(0);
  const bulkActionsIntersectionRef = (0, import_react225.useRef)(null);
  const tableMeasurerRef = (0, import_react225.useRef)(null);
  const handleIntersect = (entries) => {
    entries.forEach((entry) => {
      setIsSticky(!entry.isIntersecting);
    });
  };
  const options = {
    root: null,
    rootMargin: "-12px",
    threshold: 0
  };
  const observerRef = (0, import_react225.useRef)(hasIOSupport ? new IntersectionObserver(handleIntersect, options) : null);
  const computeTableDimensions = (0, import_react225.useCallback)(() => {
    const node = tableMeasurerRef.current;
    if (!node) {
      return {
        maxWidth: 0,
        offsetHeight: 0,
        offsetLeft: 0
      };
    }
    const box = node.getBoundingClientRect();
    const paddingHeight = selectMode ? PADDING_IN_SELECT_MODE : 0;
    const offsetHeight = box.height - paddingHeight;
    const maxWidth = box.width;
    const offsetLeft = box.left;
    setBulkActionsAbsoluteOffset(offsetHeight);
    setBulkActionsMaxWidth(maxWidth);
    setBulkActionsOffsetLeft(offsetLeft);
  }, [selectMode]);
  (0, import_react225.useEffect)(() => {
    computeTableDimensions();
    const debouncedComputeTableHeight = debounce(computeTableDimensions, DEBOUNCE_PERIOD2, {
      trailing: true
    });
    window.addEventListener("resize", debouncedComputeTableHeight);
    return () => window.removeEventListener("resize", debouncedComputeTableHeight);
  }, [computeTableDimensions]);
  (0, import_react225.useEffect)(() => {
    const observer = observerRef.current;
    if (!observer) {
      return;
    }
    const node = bulkActionsIntersectionRef.current;
    if (node) {
      observer.observe(node);
    }
    return () => {
      observer == null ? void 0 : observer.disconnect();
    };
  }, [bulkActionsIntersectionRef]);
  return {
    bulkActionsIntersectionRef,
    tableMeasurerRef,
    isBulkActionsSticky,
    bulkActionsAbsoluteOffset,
    bulkActionsMaxWidth,
    bulkActionsOffsetLeft,
    computeTableDimensions
  };
}

// node_modules/@shopify/polaris/build/esm/components/IndexTable/utilities/utilities.js
function getTableHeadingsBySelector(wrapperElement, selector) {
  return wrapperElement ? Array.from(wrapperElement.querySelectorAll(selector)) : [];
}

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.js
var import_react226 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.scss.js
var styles93 = {
  "ScrollContainer": "Polaris-IndexTable-ScrollContainer"
};

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.js
function ScrollContainer({
  children: children2,
  scrollableContainerRef,
  onScroll
}) {
  (0, import_react226.useEffect)(() => {
    if (!scrollableContainerRef.current)
      return;
    scrollableContainerRef.current.dispatchEvent(new Event("scroll"));
  }, [scrollableContainerRef]);
  const [containerScroll, setContainerScroll] = (0, import_react226.useState)(scrollDefaultContext);
  const handleScroll = (0, import_react226.useCallback)(debounce(() => {
    if (!scrollableContainerRef.current) {
      return;
    }
    const availableScrollAmount = scrollableContainerRef.current.scrollWidth - scrollableContainerRef.current.offsetWidth;
    const canScrollLeft = scrollableContainerRef.current.scrollLeft > 0;
    const canScrollRight = scrollableContainerRef.current.scrollLeft < availableScrollAmount;
    onScroll(canScrollLeft, canScrollRight);
    setContainerScroll({
      scrollableContainer: scrollableContainerRef.current,
      canScrollLeft,
      canScrollRight
    });
  }, 40, {
    trailing: true,
    leading: true,
    maxWait: 40
  }), [onScroll, scrollableContainerRef]);
  return import_react226.default.createElement(ScrollContext.Provider, {
    value: containerScroll
  }, import_react226.default.createElement("div", {
    className: styles93.ScrollContainer,
    ref: scrollableContainerRef,
    onScroll: handleScroll
  }, children2));
}

// node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.js
var import_react228 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.scss.js
var styles94 = {
  "SelectAllActions": "Polaris-SelectAllActions",
  "SelectAllActions-entering": "Polaris-SelectAllActions__SelectAllActions--entering",
  "SelectAllActions-exiting": "Polaris-SelectAllActions__SelectAllActions--exiting",
  "SelectAllActions-entered": "Polaris-SelectAllActions__SelectAllActions--entered",
  "SelectAllActions-exited": "Polaris-SelectAllActions__SelectAllActions--exited",
  "PaginatedSelectAll": "Polaris-SelectAllActions__PaginatedSelectAll",
  "AllAction": "Polaris-SelectAllActions__AllAction"
};

// node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js
var import_react227 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.scss.js
var styles95 = {
  "CheckableButton": "Polaris-CheckableButton",
  "Checkbox": "Polaris-CheckableButton__Checkbox",
  "Label": "Polaris-CheckableButton__Label"
};

// node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js
var CheckableButton = (0, import_react227.forwardRef)(function CheckableButton2({
  accessibilityLabel,
  label = "",
  onToggleAll,
  selected,
  disabled,
  ariaLive
}, ref) {
  const checkBoxRef = (0, import_react227.useRef)(null);
  function focus() {
    var _a;
    (_a = checkBoxRef == null ? void 0 : checkBoxRef.current) == null ? void 0 : _a.focus();
  }
  (0, import_react227.useImperativeHandle)(ref, () => {
    return {
      focus
    };
  });
  const className = classNames(styles95.CheckableButton);
  return import_react227.default.createElement("div", {
    className,
    onClick: onToggleAll
  }, import_react227.default.createElement("div", {
    className: styles95.Checkbox
  }, import_react227.default.createElement(Checkbox, {
    label: accessibilityLabel,
    labelHidden: true,
    checked: selected,
    disabled,
    onChange: onToggleAll,
    ref: checkBoxRef
  })), import_react227.default.createElement("span", {
    className: styles95.Label,
    "aria-live": ariaLive
  }, label));
});

// node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.js
var SelectAllActions = (0, import_react228.forwardRef)(function SelectAllActions2({
  accessibilityLabel,
  label,
  selected,
  selectMode,
  paginatedSelectAllText,
  paginatedSelectAllAction,
  disabled,
  onToggleAll
}, ref) {
  const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? import_react228.default.createElement(UnstyledButton, {
    className: styles94.AllAction,
    onClick: paginatedSelectAllAction.onAction,
    size: "slim",
    disabled
  }, paginatedSelectAllAction.content) : null;
  const hasTextAndAction = paginatedSelectAllText && paginatedSelectAllAction;
  const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup ? import_react228.default.createElement("div", {
    className: styles94.PaginatedSelectAll
  }, paginatedSelectAllActionMarkup) : null;
  const ariaLive = hasTextAndAction ? "polite" : void 0;
  const checkableButtonProps = {
    accessibilityLabel,
    label: hasTextAndAction ? paginatedSelectAllText : label,
    selected,
    onToggleAll,
    disabled,
    ariaLive,
    ref
  };
  const markup = import_react228.default.createElement(Transition_default, {
    timeout: 0,
    in: selectMode,
    key: "markup"
  }, (status) => {
    const wrapperClasses = classNames(styles94.SelectAllActions, styles94[`SelectAllActions-${status}`]);
    return import_react228.default.createElement("div", {
      className: wrapperClasses
    }, import_react228.default.createElement(CheckableButton, checkableButtonProps), paginatedSelectAllMarkup);
  });
  return markup;
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js
var SCROLL_BAR_PADDING = 4;
var SCROLL_BAR_DEBOUNCE_PERIOD = 300;
function IndexTableBase({
  headings,
  bulkActions = [],
  promotedBulkActions = [],
  children: children2,
  emptyState,
  sort,
  paginatedSelectAllActionText,
  lastColumnSticky = false,
  sortable,
  sortDirection,
  defaultSortDirection = "descending",
  sortColumnIndex,
  onSort,
  sortToggleLabels,
  hasZebraStriping,
  ...restProps
}) {
  const {
    loading,
    bulkSelectState,
    resourceName,
    bulkActionsAccessibilityLabel,
    selectMode,
    selectable = restProps.selectable,
    paginatedSelectAllText,
    itemCount,
    hasMoreItems,
    selectedItemsCount,
    condensed
  } = useIndexValue();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const handleSelectionChange = useIndexSelectionChange();
  const i18n = useI18n();
  const {
    value: hasMoreLeftColumns,
    toggle: toggleHasMoreLeftColumns
  } = useToggle(false);
  const tablePosition = (0, import_react229.useRef)({
    top: 0,
    left: 0
  });
  const tableHeadingRects = (0, import_react229.useRef)([]);
  const scrollableContainerElement = (0, import_react229.useRef)(null);
  const tableElement = (0, import_react229.useRef)(null);
  const condensedListElement = (0, import_react229.useRef)(null);
  const loadingElement = (0, import_react229.useRef)(null);
  const [tableInitialized, setTableInitialized] = (0, import_react229.useState)(false);
  const [stickyWrapper, setStickyWrapper] = (0, import_react229.useState)(null);
  const [hideScrollContainer, setHideScrollContainer] = (0, import_react229.useState)(false);
  const tableHeadings = (0, import_react229.useRef)([]);
  const stickyTableHeadings = (0, import_react229.useRef)([]);
  const stickyHeaderWrapperElement = (0, import_react229.useRef)(null);
  const firstStickyHeaderElement = (0, import_react229.useRef)(null);
  const stickyHeaderElement = (0, import_react229.useRef)(null);
  const scrollBarElement = (0, import_react229.useRef)(null);
  const scrollContainerElement = (0, import_react229.useRef)(null);
  const scrollingWithBar = (0, import_react229.useRef)(false);
  const scrollingContainer = (0, import_react229.useRef)(false);
  const lastSortedColumnIndex = (0, import_react229.useRef)(sortColumnIndex);
  const renderAfterSelectEvent = (0, import_react229.useRef)(false);
  const lastSelectedItemsCount = (0, import_react229.useRef)(0);
  const hasSelected = (0, import_react229.useRef)(false);
  if (selectedItemsCount !== lastSelectedItemsCount.current) {
    renderAfterSelectEvent.current = true;
    lastSelectedItemsCount.current = selectedItemsCount;
  }
  if (!hasSelected.current && selectedItemsCount !== 0) {
    hasSelected.current = true;
  }
  const {
    bulkActionsIntersectionRef,
    tableMeasurerRef,
    isBulkActionsSticky,
    bulkActionsAbsoluteOffset,
    bulkActionsMaxWidth,
    bulkActionsOffsetLeft,
    computeTableDimensions
  } = useIsBulkActionsSticky(selectMode);
  (0, import_react229.useEffect)(() => {
    computeTableDimensions();
  }, [computeTableDimensions, itemCount]);
  const tableBodyRef = (0, import_react229.useCallback)((node) => {
    if (node !== null && !tableInitialized) {
      setTableInitialized(true);
    }
  }, [tableInitialized]);
  const handleSelectAllItemsInStore = (0, import_react229.useCallback)(() => {
    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType2.Page : SelectionType2.All, true);
  }, [handleSelectionChange, selectedItemsCount]);
  const calculateFirstHeaderOffset = (0, import_react229.useCallback)(() => {
    if (!selectable) {
      return tableHeadingRects.current[0].offsetWidth;
    }
    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;
  }, [condensed, selectable]);
  const resizeTableHeadings = (0, import_react229.useMemo)(() => debounce(() => {
    if (!tableElement.current || !scrollableContainerElement.current) {
      return;
    }
    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();
    tablePosition.current = {
      top: boundingRect.top,
      left: boundingRect.left
    };
    tableHeadingRects.current = tableHeadings.current.map((heading) => ({
      offsetWidth: heading.offsetWidth || 0,
      offsetLeft: heading.offsetLeft || 0
    }));
    if (tableHeadings.current.length === 0) {
      return;
    }
    if (selectable && tableHeadings.current.length > 1)
      tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;
    if (selectable && (firstStickyHeaderElement == null ? void 0 : firstStickyHeaderElement.current) && !polarisSummerEditions2023) {
      const elementStyle = getComputedStyle(tableHeadings.current[0]);
      const boxWidth = tableHeadings.current[0].offsetWidth;
      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;
    }
    stickyTableHeadings.current.forEach((heading, index) => {
      var _a, _b;
      let minWidth = 0;
      if (index === 0 && (!isBreakpointsXS() || !selectable)) {
        minWidth = calculateFirstHeaderOffset();
      } else if (selectable && tableHeadingRects.current.length > index) {
        minWidth = ((_a = tableHeadingRects.current[index]) == null ? void 0 : _a.offsetWidth) || 0;
      } else if (!selectable && tableHeadingRects.current.length >= index) {
        minWidth = ((_b = tableHeadingRects.current[index - 1]) == null ? void 0 : _b.offsetWidth) || 0;
      }
      heading.style.minWidth = `${minWidth}px`;
    });
  }), [calculateFirstHeaderOffset, selectable, polarisSummerEditions2023]);
  const resizeTableScrollBar = (0, import_react229.useCallback)(() => {
    var _a, _b;
    if (scrollBarElement.current && tableElement.current && tableInitialized) {
      scrollBarElement.current.style.setProperty("--pc-index-table-scroll-bar-content-width", `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);
      setHideScrollContainer(((_a = scrollContainerElement.current) == null ? void 0 : _a.offsetWidth) === ((_b = tableElement.current) == null ? void 0 : _b.offsetWidth));
    }
  }, [tableInitialized]);
  const debounceResizeTableScrollbar = (0, import_react229.useCallback)(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {
    trailing: true
  }), [resizeTableScrollBar]);
  const [canScrollRight, setCanScrollRight] = (0, import_react229.useState)(true);
  const handleCanScrollRight = (0, import_react229.useCallback)(debounce(() => {
    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {
      return;
    }
    const tableRect = tableElement.current.getBoundingClientRect();
    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();
    setCanScrollRight(tableRect.width > scrollableRect.width);
  }), [lastColumnSticky]);
  (0, import_react229.useEffect)(() => {
    handleCanScrollRight();
  }, [handleCanScrollRight]);
  const [canFitStickyColumn, setCanFitStickyColumn] = (0, import_react229.useState)(true);
  const handleCanFitStickyColumn = (0, import_react229.useCallback)(() => {
    if (!scrollableContainerElement.current || !tableHeadings.current.length) {
      return;
    }
    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();
    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;
    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;
    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;
    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;
    const restOfContentMinWidth = 100;
    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);
  }, [lastColumnSticky, selectable]);
  (0, import_react229.useEffect)(() => {
    if (tableInitialized) {
      handleCanFitStickyColumn();
    }
  }, [handleCanFitStickyColumn, tableInitialized]);
  const handleResize = (0, import_react229.useCallback)(() => {
    var _a;
    (_a = scrollBarElement.current) == null ? void 0 : _a.style.setProperty("--pc-index-table-scroll-bar-content-width", `0px`);
    resizeTableHeadings();
    debounceResizeTableScrollbar();
    handleCanScrollRight();
    handleCanFitStickyColumn();
  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);
  const handleScrollContainerScroll = (0, import_react229.useCallback)((canScrollLeft, canScrollRight2) => {
    if (!scrollableContainerElement.current || !scrollBarElement.current) {
      return;
    }
    if (!scrollingWithBar.current) {
      scrollingContainer.current = true;
      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;
    }
    scrollingWithBar.current = false;
    if (stickyHeaderElement.current) {
      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;
    }
    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {
      toggleHasMoreLeftColumns();
    }
    setCanScrollRight(canScrollRight2);
  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);
  const handleScrollBarScroll = (0, import_react229.useCallback)(() => {
    if (!scrollableContainerElement.current || !scrollBarElement.current) {
      return;
    }
    if (!scrollingContainer.current) {
      scrollingWithBar.current = true;
      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;
    }
    scrollingContainer.current = false;
  }, []);
  useIsomorphicLayoutEffect(() => {
    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, "[data-index-table-heading]");
    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, "[data-index-table-sticky-heading]");
    resizeTableHeadings();
  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);
  (0, import_react229.useEffect)(() => {
    resizeTableScrollBar();
    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);
  }, [tableInitialized, resizeTableScrollBar, condensed]);
  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);
  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);
  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);
  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {
    minWidth: calculateFirstHeaderOffset()
  } : void 0;
  const stickyColumnHeader = import_react229.default.createElement("div", {
    className: classNames(styles91.TableHeading, polarisSummerEditions2023 && selectable && styles91["TableHeading-first"], polarisSummerEditions2023 && headings[0].flush && styles91["TableHeading-flush"]),
    key: getHeadingKey(headings[0]),
    style: stickyColumnHeaderStyle,
    "data-index-table-sticky-heading": true
  }, import_react229.default.createElement(LegacyStack, {
    spacing: "none",
    wrap: false,
    alignment: "center"
  }, selectable && import_react229.default.createElement("div", {
    className: styles91.FirstStickyHeaderElement,
    ref: firstStickyHeaderElement
  }, renderCheckboxContent()), selectable && import_react229.default.createElement("div", {
    className: styles91["StickyTableHeading-second-scrolling"]
  }, renderHeadingContent(headings[0], 0)), !selectable && import_react229.default.createElement("div", {
    className: classNames(styles91.FirstStickyHeaderElement),
    ref: firstStickyHeaderElement
  }, renderHeadingContent(headings[0], 0))));
  const stickyHeadingsMarkup = headings.map(renderStickyHeading);
  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;
  const handleTogglePage = (0, import_react229.useCallback)(() => {
    handleSelectionChange(SelectionType2.Page, Boolean(!bulkSelectState || bulkSelectState === "indeterminate"));
  }, [bulkSelectState, handleSelectionChange]);
  const paginatedSelectAllAction = getPaginatedSelectAllAction();
  const loadingTransitionClassNames = {
    enter: styles91["LoadingContainer-enter"],
    enterActive: styles91["LoadingContainer-enter-active"],
    exit: styles91["LoadingContainer-exit"],
    exitActive: styles91["LoadingContainer-exit-active"]
  };
  const loadingMarkup = import_react229.default.createElement(CSSTransition_default, {
    in: loading,
    classNames: loadingTransitionClassNames,
    timeout: parseInt(motion2["motion-duration-100"], 10),
    nodeRef: loadingElement,
    appear: true,
    unmountOnExit: true
  }, import_react229.default.createElement("div", {
    className: styles91.LoadingPanel,
    ref: loadingElement
  }, import_react229.default.createElement("div", {
    className: styles91.LoadingPanelRow
  }, import_react229.default.createElement(Spinner, {
    size: "small"
  }), import_react229.default.createElement("span", {
    className: styles91.LoadingPanelText
  }, i18n.translate("Polaris.IndexTable.resourceLoadingAccessibilityLabel", {
    resourceNamePlural: resourceName.plural.toLocaleLowerCase()
  })))));
  const stickyTableClassNames = classNames(styles91.StickyTable, condensed && styles91["StickyTable-condensed"]);
  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount;
  const bulkActionClassNames = classNames(styles91.BulkActionsWrapper, isBulkActionsSticky && styles91.BulkActionsWrapperSticky);
  const shouldShowActions = !condensed || selectedItemsCount;
  const promotedActions = shouldShowActions ? promotedBulkActions : [];
  const actions = shouldShowActions ? bulkActions : [];
  const bulkActionsMarkup = shouldShowBulkActions && !condensed ? import_react229.default.createElement("div", {
    className: bulkActionClassNames,
    style: {
      insetBlockStart: isBulkActionsSticky ? void 0 : bulkActionsAbsoluteOffset,
      width: bulkActionsMaxWidth,
      insetInlineStart: isBulkActionsSticky ? bulkActionsOffsetLeft : void 0
    }
  }, import_react229.default.createElement(BulkActions, {
    selectMode,
    promotedActions,
    actions,
    onSelectModeToggle: condensed ? handleSelectModeToggle : void 0,
    isSticky: isBulkActionsSticky,
    width: bulkActionsMaxWidth
  })) : null;
  const stickyHeaderMarkup = import_react229.default.createElement("div", {
    className: stickyTableClassNames,
    role: "presentation"
  }, import_react229.default.createElement(Sticky, {
    boundingElement: stickyWrapper
  }, (isSticky) => {
    const stickyHeaderClassNames = classNames(styles91.StickyTableHeader, isSticky && styles91["StickyTableHeader-isSticky"]);
    const selectAllActionsClassName = classNames(styles91.SelectAllActionsWrapper, condensed && styles91["StickyTableHeader-condensed"], isSticky && styles91["StickyTableHeader-isSticky"]);
    const selectAllActionsMarkup = shouldShowBulkActions && !condensed ? import_react229.default.createElement("div", {
      className: selectAllActionsClassName
    }, import_react229.default.createElement(SelectAllActions, {
      label: i18n.translate("Polaris.IndexTable.selected", {
        selectedItemsCount: selectedItemsCountLabel
      }),
      accessibilityLabel: bulkActionsAccessibilityLabel,
      selected: bulkSelectState,
      selectMode,
      onToggleAll: handleTogglePage,
      paginatedSelectAllText,
      paginatedSelectAllAction
    }), loadingMarkup) : null;
    const headerMarkup = condensed ? import_react229.default.createElement("div", {
      className: classNames(styles91.HeaderWrapper, (!selectable || condensed) && styles91.unselectable)
    }, loadingMarkup, sort) : import_react229.default.createElement("div", {
      className: stickyHeaderClassNames,
      ref: stickyHeaderWrapperElement
    }, loadingMarkup, import_react229.default.createElement("div", {
      className: styles91.StickyTableColumnHeader
    }, stickyColumnHeader), import_react229.default.createElement("div", {
      className: styles91.StickyTableHeadings,
      ref: stickyHeaderElement
    }, stickyHeadingsMarkup));
    const stickyContent = selectAllActionsMarkup ?? headerMarkup;
    return stickyContent;
  }), bulkActionsMarkup);
  const scrollBarWrapperClassNames = classNames(styles91.ScrollBarContainer, condensed && styles91.scrollBarContainerCondensed, hideScrollContainer && styles91.scrollBarContainerHidden);
  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles91.ScrollBarContent);
  const scrollBarMarkup = itemCount > 0 ? import_react229.default.createElement(AfterInitialMount, {
    onMount: resizeTableScrollBar
  }, import_react229.default.createElement("div", {
    className: scrollBarWrapperClassNames,
    ref: scrollContainerElement
  }, import_react229.default.createElement("div", {
    onScroll: handleScrollBarScroll,
    className: styles91.ScrollBar,
    ref: scrollBarElement
  }, import_react229.default.createElement("div", {
    className: scrollBarClassNames
  })))) : null;
  const isSortable = sortable == null ? void 0 : sortable.some((value) => value);
  const tableClassNames = classNames(styles91.Table, hasMoreLeftColumns && styles91["Table-scrolling"], selectMode && styles91.disableTextSelection, selectMode && shouldShowBulkActions && styles91.selectMode, !selectable && styles91["Table-unselectable"], canFitStickyColumn && styles91["Table-sticky"], isSortable && styles91["Table-sortable"], canFitStickyColumn && lastColumnSticky && styles91["Table-sticky-last"], canFitStickyColumn && lastColumnSticky && canScrollRight && styles91["Table-sticky-scrolling"], hasZebraStriping && styles91.ZebraStriping);
  const emptyStateMarkup = emptyState ? emptyState : import_react229.default.createElement(EmptySearchResult, {
    title: i18n.translate("Polaris.IndexTable.emptySearchTitle", {
      resourceNamePlural: resourceName.plural
    }),
    description: i18n.translate("Polaris.IndexTable.emptySearchDescription"),
    withIllustration: true
  });
  const sharedMarkup = import_react229.default.createElement(import_react229.default.Fragment, null, import_react229.default.createElement(EventListener, {
    event: "resize",
    handler: handleResize
  }), import_react229.default.createElement(AfterInitialMount, null, stickyHeaderMarkup));
  const condensedClassNames = classNames(styles91.CondensedList, hasZebraStriping && styles91.ZebraStriping);
  const bodyMarkup = condensed ? import_react229.default.createElement(import_react229.default.Fragment, null, sharedMarkup, import_react229.default.createElement("ul", {
    "data-selectmode": Boolean(selectMode),
    className: condensedClassNames,
    ref: condensedListElement
  }, children2)) : import_react229.default.createElement(import_react229.default.Fragment, null, sharedMarkup, import_react229.default.createElement(ScrollContainer, {
    scrollableContainerRef: scrollableContainerElement,
    onScroll: handleScrollContainerScroll
  }, import_react229.default.createElement("table", {
    ref: tableElement,
    className: tableClassNames
  }, import_react229.default.createElement("thead", null, import_react229.default.createElement("tr", {
    className: styles91.HeadingRow
  }, headingsMarkup)), import_react229.default.createElement("tbody", {
    ref: tableBodyRef
  }, children2))));
  const tableContentMarkup = itemCount > 0 ? bodyMarkup : import_react229.default.createElement("div", {
    className: styles91.EmptySearchResultWrapper
  }, emptyStateMarkup);
  const tableWrapperClassNames = classNames(styles91.IndexTableWrapper, hideScrollContainer && styles91["IndexTableWrapper-scrollBarHidden"], Boolean(bulkActionsMarkup) && selectMode && styles91.IndexTableWrapperWithBulkActions);
  return import_react229.default.createElement(import_react229.default.Fragment, null, import_react229.default.createElement("div", {
    className: styles91.IndexTable
  }, import_react229.default.createElement("div", {
    className: tableWrapperClassNames,
    ref: tableMeasurerRef
  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), import_react229.default.createElement("div", {
    ref: bulkActionsIntersectionRef
  })), scrollBarMarkup);
  function renderHeading(heading, index) {
    const isSecond = index === 0;
    const isLast = index === headings.length - 1;
    const hasSortable = sortable == null ? void 0 : sortable.some((value) => value === true);
    const headingAlignment = heading.alignment || "start";
    const headingContentClassName = classNames(styles91.TableHeading, headingAlignment === "center" && styles91["TableHeading-align-center"], headingAlignment === "end" && styles91["TableHeading-align-end"], hasSortable && styles91["TableHeading-sortable"], isSecond && styles91["TableHeading-second"], isLast && !heading.hidden && styles91["TableHeading-last"], !selectable && styles91["TableHeading-unselectable"], heading.flush && styles91["TableHeading-flush"]);
    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {
      left: tableHeadingRects.current[0].offsetWidth
    } : void 0;
    const headingContent = import_react229.default.createElement("th", {
      id: heading.id,
      className: headingContentClassName,
      key: getHeadingKey(heading),
      "data-index-table-heading": true,
      style: stickyPositioningStyle
    }, renderHeadingContent(heading, index));
    if (index !== 0 || !selectable) {
      return headingContent;
    }
    const checkboxClassName = classNames(styles91.TableHeading, hasSortable && styles91["TableHeading-sortable"], index === 0 && styles91["TableHeading-first"]);
    const checkboxContent = import_react229.default.createElement("th", {
      className: checkboxClassName,
      key: `${heading}-${index}`,
      "data-index-table-heading": true
    }, renderCheckboxContent());
    return [checkboxContent, headingContent];
  }
  function renderCheckboxContent() {
    return import_react229.default.createElement("div", {
      className: styles91.ColumnHeaderCheckboxWrapper
    }, import_react229.default.createElement(Checkbox, {
      label: i18n.translate("Polaris.IndexTable.selectAllLabel", {
        resourceNamePlural: resourceName.plural
      }),
      labelHidden: true,
      onChange: handleSelectPage,
      checked: bulkSelectState
    }));
  }
  function handleSortHeadingClick(index, direction) {
    renderAfterSelectEvent.current = false;
    hasSelected.current = false;
    lastSortedColumnIndex.current = sortColumnIndex;
    onSort == null ? void 0 : onSort(index, direction);
  }
  function renderHeadingContent(heading, index) {
    let headingContent;
    const defaultTooltipProps = {
      width: heading.tooltipWidth ?? "default",
      activatorWrapper: "div",
      dismissOnMouseOut: true,
      persistOnClick: heading.tooltipPersistsOnClick
    };
    const defaultHeaderTooltipProps = {
      ...defaultTooltipProps,
      padding: "4",
      borderRadius: "2",
      content: heading.tooltipContent,
      preferredPosition: "above"
    };
    if (heading.new) {
      headingContent = import_react229.default.createElement(LegacyStack, {
        wrap: false,
        alignment: "center"
      }, import_react229.default.createElement("span", null, heading.title), import_react229.default.createElement(Badge, {
        status: "new"
      }, i18n.translate("Polaris.IndexTable.onboardingBadgeText")));
    } else if (heading.hidden) {
      headingContent = import_react229.default.createElement(Text, {
        as: "span",
        visuallyHidden: true
      }, heading.title);
    } else {
      headingContent = heading.title;
    }
    if (sortable == null ? void 0 : sortable[index]) {
      const isCurrentlySorted = index === sortColumnIndex;
      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;
      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;
      const isAscending = sortDirection === "ascending";
      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;
      let SourceComponent = newDirection === "ascending" ? SvgSortAscendingMajor : SvgSortDescendingMajor;
      if (isCurrentlySorted) {
        newDirection = isAscending ? "descending" : "ascending";
        SourceComponent = sortDirection === "ascending" ? SvgSortAscendingMajor : SvgSortDescendingMajor;
      }
      const iconMarkup = import_react229.default.createElement("span", {
        className: classNames(styles91.TableHeadingSortIcon, (heading == null ? void 0 : heading.alignment) === "end" && styles91["TableHeadingSortIcon-heading-align-end"], isCurrentlySorted && styles91["TableHeadingSortIcon-visible"])
      }, import_react229.default.createElement(SourceComponent, {
        focusable: "false",
        "aria-hidden": "true",
        className: styles91.TableHeadingSortSvg
      }));
      const defaultSortButtonProps = {
        onClick: () => handleSortHeadingClick(index, newDirection),
        className: classNames(styles91.TableHeadingSortButton, !isCurrentlySorted && (heading == null ? void 0 : heading.alignment) === "end" && styles91["TableHeadingSortButton-heading-align-end"], isCurrentlySorted && (heading == null ? void 0 : heading.alignment) === "end" && styles91["TableHeadingSortButton-heading-align-end-currently-sorted"], isPreviouslySorted && !isRenderAfterSelectEvent && (heading == null ? void 0 : heading.alignment) === "end" && styles91["TableHeadingSortButton-heading-align-end-previously-sorted"]),
        tabIndex: selectMode ? -1 : 0
      };
      const sortMarkup = import_react229.default.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, import_react229.default.createElement("span", {
        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles91.TableHeadingTooltipUnderlinePlaceholder)
      }, headingContent));
      if (!sortToggleLabels || selectMode) {
        return import_react229.default.createElement("div", {
          className: styles91.SortableTableHeadingWithCustomMarkup
        }, sortMarkup);
      }
      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;
      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];
      if (!heading.tooltipContent) {
        return (
          // Regular header with sort icon and sort direction tooltip
          import_react229.default.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {
            content: sortTooltipContent,
            preferredPosition: "above"
          }), sortMarkup)
        );
      }
      if (heading.tooltipContent) {
        return (
          // Header text and sort icon have separate tooltips
          import_react229.default.createElement("div", {
            className: styles91.SortableTableHeadingWithCustomMarkup
          }, import_react229.default.createElement(UnstyledButton, defaultSortButtonProps, import_react229.default.createElement(Tooltip, defaultHeaderTooltipProps, import_react229.default.createElement("span", {
            className: styles91.TableHeadingUnderline
          }, headingContent)), import_react229.default.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {
            content: sortTooltipContent,
            preferredPosition: "above"
          }), iconMarkup)))
        );
      }
    }
    if (heading.tooltipContent) {
      return (
        // Non-sortable header with tooltip
        import_react229.default.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {
          activatorWrapper: "span"
        }), import_react229.default.createElement("span", {
          className: classNames(styles91.TableHeadingUnderline, styles91.SortableTableHeaderWrapper)
        }, headingContent))
      );
    }
    return headingContent;
  }
  function handleSelectPage(checked) {
    handleSelectionChange(SelectionType2.Page, checked);
  }
  function renderStickyHeading(heading, index) {
    const position = index + 1;
    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {
      minWidth: tableHeadingRects.current[position].offsetWidth
    } : void 0;
    const headingAlignment = heading.alignment || "start";
    const headingContent = renderHeadingContent(heading, index);
    const stickyHeadingClassName = classNames(styles91.TableHeading, polarisSummerEditions2023 && heading.flush && styles91["TableHeading-flush"], headingAlignment === "center" && styles91["TableHeading-align-center"], headingAlignment === "end" && styles91["TableHeading-align-end"], index === 0 && styles91["StickyTableHeading-second"], index === 0 && !selectable && styles91.unselectable);
    return import_react229.default.createElement("div", {
      className: stickyHeadingClassName,
      key: getHeadingKey(heading),
      style: headingStyle,
      "data-index-table-sticky-heading": true
    }, headingContent);
  }
  function getPaginatedSelectAllAction() {
    if (!selectable || !hasBulkActions || !hasMoreItems) {
      return;
    }
    const customActionText = paginatedSelectAllActionText ?? i18n.translate("Polaris.IndexTable.selectAllItems", {
      itemsLength: itemCount,
      resourceNamePlural: resourceName.plural.toLocaleLowerCase()
    });
    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate("Polaris.IndexTable.undo") : customActionText;
    return {
      content: actionText,
      onAction: handleSelectAllItemsInStore
    };
  }
  function handleSelectModeToggle() {
    handleSelectionChange(SelectionType2.All, false);
  }
}
var isBreakpointsXS = () => {
  return typeof window === "undefined" ? false : window.innerWidth < parseFloat(toPx(tokens.breakpoints["breakpoints-sm"]) ?? "");
};
function getHeadingKey(heading) {
  if (heading.id) {
    return heading.id;
  } else if (typeof heading.title === "string") {
    return heading.title;
  }
  return "";
}
function IndexTable({
  children: children2,
  selectable = true,
  itemCount,
  selectedItemsCount = 0,
  resourceName: passedResourceName,
  loading,
  hasMoreItems,
  condensed,
  onSelectionChange,
  ...indexTableBaseProps
}) {
  return import_react229.default.createElement(IndexProvider, {
    selectable: selectable && !condensed,
    itemCount,
    selectedItemsCount,
    resourceName: passedResourceName,
    loading,
    hasMoreItems,
    condensed,
    onSelectionChange
  }, import_react229.default.createElement(IndexTableBase, indexTableBaseProps, children2));
}
IndexTable.Cell = Cell3;
IndexTable.Row = Row;

// node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.js
var import_react230 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.scss.js
var styles96 = {
  "Code": "Polaris-InlineCode__Code"
};

// node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.js
var InlineCode = ({
  children: children2
}) => import_react230.default.createElement("code", {
  className: styles96.Code
}, children2);

// node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.js
var import_react231 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.scss.js
var styles97 = {
  "KeyboardKey": "Polaris-KeyboardKey",
  "small": "Polaris-KeyboardKey--small"
};

// node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.js
function KeyboardKey({
  children: children2 = "",
  size: size2
}) {
  const key = !size2 && children2.length > 1 ? children2.toLowerCase() : children2.toUpperCase();
  const className = classNames(styles97.KeyboardKey, size2 && styles97[size2]);
  return import_react231.default.createElement("kbd", {
    className
  }, key);
}

// node_modules/@shopify/polaris/build/esm/components/Layout/Layout.js
var import_react234 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Layout/Layout.scss.js
var styles98 = {
  "Layout": "Polaris-Layout",
  "Section": "Polaris-Layout__Section",
  "Section-secondary": "Polaris-Layout__Section--secondary",
  "Section-fullWidth": "Polaris-Layout__Section--fullWidth",
  "Section-oneHalf": "Polaris-Layout__Section--oneHalf",
  "Section-oneThird": "Polaris-Layout__Section--oneThird",
  "AnnotatedSection": "Polaris-Layout__AnnotatedSection",
  "AnnotationWrapper": "Polaris-Layout__AnnotationWrapper",
  "AnnotationContent": "Polaris-Layout__AnnotationContent",
  "Annotation": "Polaris-Layout__Annotation"
};

// node_modules/@shopify/polaris/build/esm/components/Layout/components/AnnotatedSection/AnnotatedSection.js
var import_react232 = __toESM(require_react());
function AnnotatedSection({
  children: children2,
  title,
  description,
  id
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const descriptionMarkup = (
    // eslint-disable-next-line no-nested-ternary
    typeof description === "string" ? polarisSummerEditions2023 ? import_react232.default.createElement(Text, {
      as: "p",
      variant: "bodyMd"
    }, description) : import_react232.default.createElement("p", null, description) : description
  );
  return import_react232.default.createElement("div", {
    className: styles98.AnnotatedSection
  }, import_react232.default.createElement("div", {
    className: styles98.AnnotationWrapper
  }, import_react232.default.createElement("div", {
    className: styles98.Annotation
  }, import_react232.default.createElement(TextContainer, {
    spacing: polarisSummerEditions2023 ? "tight" : void 0
  }, import_react232.default.createElement(Text, {
    id,
    variant: "headingMd",
    as: "h2"
  }, title), descriptionMarkup && import_react232.default.createElement(Box, {
    color: "text-subdued"
  }, descriptionMarkup))), import_react232.default.createElement("div", {
    className: styles98.AnnotationContent
  }, children2)));
}

// node_modules/@shopify/polaris/build/esm/components/Layout/components/Section/Section.js
var import_react233 = __toESM(require_react());
function Section6({
  children: children2,
  secondary,
  fullWidth,
  oneHalf,
  oneThird
}) {
  const className = classNames(styles98.Section, secondary && styles98["Section-secondary"], fullWidth && styles98["Section-fullWidth"], oneHalf && styles98["Section-oneHalf"], oneThird && styles98["Section-oneThird"]);
  return import_react233.default.createElement("div", {
    className
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/Layout/Layout.js
var Layout = function Layout2({
  sectioned,
  children: children2
}) {
  const content = sectioned ? import_react234.default.createElement(Section6, null, children2) : children2;
  return import_react234.default.createElement("div", {
    className: styles98.Layout
  }, content);
};
Layout.AnnotatedSection = AnnotatedSection;
Layout.Section = Section6;

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.js
var import_react241 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.scss.js
var styles99 = {
  "LegacyFilters": "Polaris-LegacyFilters",
  "LegacyFiltersContainer": "Polaris-LegacyFilters__LegacyFiltersContainer",
  "LegacyFiltersContainerHeader": "Polaris-LegacyFilters__LegacyFiltersContainerHeader",
  "LegacyFiltersDesktopContainerContent": "Polaris-LegacyFilters__LegacyFiltersDesktopContainerContent",
  "LegacyFiltersMobileContainerContent": "Polaris-LegacyFilters__LegacyFiltersMobileContainerContent",
  "LegacyFiltersContainerFooter": "Polaris-LegacyFilters__LegacyFiltersContainerFooter",
  "LegacyFiltersMobileContainerFooter": "Polaris-LegacyFilters__LegacyFiltersMobileContainerFooter",
  "EmptyFooterState": "Polaris-LegacyFilters__EmptyFooterState",
  "FilterTriggerContainer": "Polaris-LegacyFilters__FilterTriggerContainer",
  "FilterTrigger": "Polaris-LegacyFilters__FilterTrigger",
  "FilterTriggerTitle": "Polaris-LegacyFilters__FilterTriggerTitle",
  "AppliedFilterBadgeContainer": "Polaris-LegacyFilters__AppliedFilterBadgeContainer",
  "open": "Polaris-LegacyFilters--open",
  "FilterTriggerLabelContainer": "Polaris-LegacyFilters__FilterTriggerLabelContainer",
  "first": "Polaris-LegacyFilters--first",
  "last": "Polaris-LegacyFilters--last",
  "FilterNodeContainer": "Polaris-LegacyFilters__FilterNodeContainer",
  "SearchIcon": "Polaris-LegacyFilters__SearchIcon",
  "Backdrop": "Polaris-LegacyFilters__Backdrop",
  "HelpText": "Polaris-LegacyFilters__HelpText",
  "TagsContainer": "Polaris-LegacyFilters__TagsContainer"
};

// node_modules/@shopify/polaris/build/esm/utilities/resource-list/context.js
var import_react235 = __toESM(require_react());
var ResourceListContext = (0, import_react235.createContext)({});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.js
var import_react237 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.scss.js
var styles100 = {
  "ConnectedFilterControl": "Polaris-LegacyFilters-ConnectedFilterControl",
  "CenterContainer": "Polaris-LegacyFilters-ConnectedFilterControl__CenterContainer",
  "right": "Polaris-LegacyFilters-ConnectedFilterControl--right",
  "Item": "Polaris-LegacyFilters-ConnectedFilterControl__Item",
  "Item-focused": "Polaris-LegacyFilters-ConnectedFilterControl__Item--focused",
  "ProxyButtonContainer": "Polaris-LegacyFilters-ConnectedFilterControl__ProxyButtonContainer",
  "RightContainer": "Polaris-LegacyFilters-ConnectedFilterControl__RightContainer",
  "MoreFiltersButtonContainer": "Polaris-LegacyFilters-ConnectedFilterControl__MoreFiltersButtonContainer",
  "queryFieldHidden": "Polaris-LegacyFilters-ConnectedFilterControl--queryFieldHidden",
  "RightContainerWithoutMoreFilters": "Polaris-LegacyFilters-ConnectedFilterControl__RightContainerWithoutMoreFilters",
  "onlyButtonVisible": "Polaris-LegacyFilters-ConnectedFilterControl--onlyButtonVisible",
  "Wrapper": "Polaris-LegacyFilters-ConnectedFilterControl__Wrapper",
  "AuxiliaryContainer": "Polaris-LegacyFilters-ConnectedFilterControl__AuxiliaryContainer"
};

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/components/Item/Item.js
var import_react236 = __toESM(require_react());
function Item8({
  children: children2
}) {
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const className = classNames(styles100.Item, focused && styles100["Item-focused"]);
  return import_react236.default.createElement("div", {
    onBlur: forceFalseFocused,
    onFocus: forceTrueFocused,
    className
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.js
var FILTER_FIELD_MIN_WIDTH = 150;
var ConnectedFilterControl = class extends import_react237.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      availableWidth: 0,
      proxyButtonsWidth: {}
    };
    this.container = (0, import_react237.createRef)();
    this.proxyButtonContainer = (0, import_react237.createRef)();
    this.moreFiltersButtonContainer = (0, import_react237.createRef)();
    this.handleResize = debounce(() => {
      this.measureProxyButtons();
      this.measureAvailableWidth();
    }, 40, {
      leading: true,
      trailing: true,
      maxWait: 40
    });
  }
  componentDidMount() {
    this.handleResize();
  }
  render() {
    const {
      children: children2,
      rightPopoverableActions,
      rightAction,
      auxiliary,
      forceShowMorefiltersButton = true,
      queryFieldHidden
    } = this.props;
    const actionsToRender = rightPopoverableActions != null ? this.getActionsToRender(rightPopoverableActions) : [];
    const className = classNames(styles100.ConnectedFilterControl, rightPopoverableActions && styles100.right);
    const shouldRenderMoreFiltersButton = forceShowMorefiltersButton || rightPopoverableActions && rightPopoverableActions.length !== actionsToRender.length;
    const RightContainerClassName = classNames(styles100.RightContainer, !shouldRenderMoreFiltersButton && styles100.RightContainerWithoutMoreFilters, queryFieldHidden && styles100.queryFieldHidden);
    const rightMarkup = actionsToRender.length > 0 ? import_react237.default.createElement("div", {
      className: RightContainerClassName
    }, this.popoverFrom(actionsToRender)) : null;
    const moreFiltersButtonContainerClassname = classNames(styles100.MoreFiltersButtonContainer, actionsToRender.length === 0 && styles100.onlyButtonVisible);
    const rightActionMarkup = rightAction ? import_react237.default.createElement("div", {
      ref: this.moreFiltersButtonContainer,
      className: moreFiltersButtonContainerClassname
    }, shouldRenderMoreFiltersButton && import_react237.default.createElement(Item8, null, rightAction)) : null;
    const proxyButtonMarkup = rightPopoverableActions ? import_react237.default.createElement("div", {
      className: styles100.ProxyButtonContainer,
      ref: this.proxyButtonContainer,
      "aria-hidden": true
    }, rightPopoverableActions.map((action) => import_react237.default.createElement("div", {
      key: action.key,
      "data-key": action.key
    }, this.activatorButtonFrom(action, {
      proxy: true
    })))) : null;
    const auxMarkup = auxiliary ? import_react237.default.createElement("div", {
      className: styles100.AuxiliaryContainer
    }, auxiliary) : null;
    return import_react237.default.createElement(import_react237.default.Fragment, null, proxyButtonMarkup, import_react237.default.createElement("div", {
      className: styles100.Wrapper
    }, import_react237.default.createElement("div", {
      className,
      ref: this.container
    }, children2 ? import_react237.default.createElement("div", {
      className: styles100.CenterContainer
    }, import_react237.default.createElement(Item8, null, children2)) : null, rightMarkup, rightActionMarkup, import_react237.default.createElement(EventListener, {
      event: "resize",
      handler: this.handleResize
    })), auxMarkup));
  }
  measureProxyButtons() {
    if (this.proxyButtonContainer.current) {
      const proxyButtonsWidth = {};
      const tolerance = 78;
      if (this.proxyButtonContainer.current) {
        Array.from(this.proxyButtonContainer.current.children).forEach((element) => {
          const buttonWidth = element.getBoundingClientRect().width + tolerance;
          const buttonKey = element instanceof HTMLElement && element.dataset.key;
          if (buttonKey) {
            proxyButtonsWidth[buttonKey] = buttonWidth;
          }
        });
      }
      this.setState({
        proxyButtonsWidth
      });
    }
  }
  measureAvailableWidth() {
    if (this.container.current && this.moreFiltersButtonContainer.current) {
      const containerWidth = this.container.current.getBoundingClientRect().width;
      const moreFiltersButtonWidth = this.moreFiltersButtonContainer.current.getBoundingClientRect().width;
      const filtersActionWidth = 0;
      const filterFieldMinWidth = this.props.queryFieldHidden ? 0 : FILTER_FIELD_MIN_WIDTH;
      const availableWidth = containerWidth - filterFieldMinWidth - moreFiltersButtonWidth - filtersActionWidth;
      this.setState({
        availableWidth
      });
    }
  }
  getActionsToRender(actions) {
    let remainingWidth = this.state.availableWidth;
    const actionsToReturn = [];
    for (let i = 0; remainingWidth > 0 && i < actions.length; i++) {
      const action = actions[i];
      const actionWidth = this.state.proxyButtonsWidth[action.key];
      if (actionWidth <= remainingWidth) {
        actionsToReturn.push(action);
        remainingWidth -= actionWidth;
      } else {
        break;
      }
    }
    return actionsToReturn;
  }
  activatorButtonFrom(action, options) {
    const id = (options == null ? void 0 : options.proxy) ? void 0 : `Activator-${action.key}`;
    return import_react237.default.createElement(UseFeatures, null, ({
      polarisSummerEditions2023
    }) => import_react237.default.createElement(Button, {
      onClick: action.onAction,
      disclosure: true,
      disabled: this.props.disabled || action.disabled,
      id,
      size: polarisSummerEditions2023 ? "large" : void 0
    }, action.content));
  }
  popoverFrom(actions) {
    return actions.map((action) => {
      return import_react237.default.createElement(Item8, {
        key: action.key
      }, import_react237.default.createElement(Popover2, {
        active: action.popoverOpen,
        activator: this.activatorButtonFrom(action),
        onClose: action.onAction,
        preferredAlignment: "left",
        sectioned: true
      }, action.popoverContent));
    });
  }
};

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/TagsWrapper/TagsWrapper.js
var import_react238 = __toESM(require_react());
function TagsWrapper({
  children: children2,
  hidden
}) {
  if (hidden) {
    return import_react238.default.createElement(Text, {
      as: "span",
      visuallyHidden: true
    }, children2);
  }
  return import_react238.default.createElement(import_react238.default.Fragment, null, children2);
}

// node_modules/@shopify/polaris/build/esm/components/Tag/Tag.js
var import_react239 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Tag/Tag.scss.js
var styles101 = {
  "Tag": "Polaris-Tag",
  "disabled": "Polaris-Tag--disabled",
  "clickable": "Polaris-Tag--clickable",
  "removable": "Polaris-Tag--removable",
  "linkable": "Polaris-Tag--linkable",
  "TagText": "Polaris-Tag__TagText",
  "Button": "Polaris-Tag__Button",
  "segmented": "Polaris-Tag--segmented",
  "Link": "Polaris-Tag__Link",
  "LinkText": "Polaris-Tag__LinkText"
};

// node_modules/@shopify/polaris/build/esm/components/Tag/Tag.js
function Tag({
  children: children2,
  disabled = false,
  onClick,
  onRemove,
  accessibilityLabel,
  url
}) {
  const i18n = useI18n();
  const segmented = onRemove && url;
  const className = classNames(styles101.Tag, disabled && styles101.disabled, onClick && styles101.clickable, onRemove && styles101.removable, url && !disabled && styles101.linkable, segmented && styles101.segmented);
  if (onClick) {
    return import_react239.default.createElement("button", {
      type: "button",
      disabled,
      className,
      onClick
    }, children2);
  }
  let tagTitle = accessibilityLabel;
  if (!tagTitle) {
    tagTitle = typeof children2 === "string" ? children2 : void 0;
  }
  const ariaLabel = i18n.translate("Polaris.Tag.ariaLabel", {
    children: tagTitle || ""
  });
  const removeButton = onRemove ? import_react239.default.createElement("button", {
    type: "button",
    "aria-label": ariaLabel,
    className: classNames(styles101.Button, segmented && styles101.segmented),
    onClick: onRemove,
    onMouseUp: handleMouseUpByBlurring,
    disabled
  }, import_react239.default.createElement(Icon, {
    source: SvgCancelSmallMinor
  })) : null;
  const tagContent = url && !disabled ? import_react239.default.createElement("a", {
    className: classNames(styles101.Link, segmented && styles101.segmented),
    href: url
  }, import_react239.default.createElement("span", {
    title: tagTitle,
    className: styles101.LinkText
  }, children2)) : import_react239.default.createElement("span", {
    title: tagTitle,
    className: styles101.TagText
  }, children2);
  return import_react239.default.createElement("span", {
    className,
    "aria-disabled": disabled
  }, tagContent, removeButton);
}

// node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.js
var import_react240 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.scss.js
var styles102 = {
  "Sheet": "Polaris-Sheet",
  "Container": "Polaris-Sheet__Container",
  "Bottom": "Polaris-Sheet__Bottom",
  "enterBottom": "Polaris-Sheet--enterBottom",
  "enterBottomActive": "Polaris-Sheet--enterBottomActive",
  "exitBottom": "Polaris-Sheet--exitBottom",
  "exitBottomActive": "Polaris-Sheet--exitBottomActive",
  "Right": "Polaris-Sheet__Right",
  "enterRight": "Polaris-Sheet--enterRight",
  "enterRightActive": "Polaris-Sheet--enterRightActive",
  "exitRight": "Polaris-Sheet--exitRight",
  "exitRightActive": "Polaris-Sheet--exitRightActive"
};

// node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.js
var BOTTOM_CLASS_NAMES = {
  enter: classNames(styles102.Bottom, styles102.enterBottom),
  enterActive: classNames(styles102.Bottom, styles102.enterBottomActive),
  exit: classNames(styles102.Bottom, styles102.exitBottom),
  exitActive: classNames(styles102.Bottom, styles102.exitBottomActive)
};
var RIGHT_CLASS_NAMES = {
  enter: classNames(styles102.Right, styles102.enterRight),
  enterActive: classNames(styles102.Right, styles102.enterRightActive),
  exit: classNames(styles102.Right, styles102.exitRight),
  exitActive: classNames(styles102.Right, styles102.exitRightActive)
};
function Sheet({
  children: children2,
  open,
  onClose,
  onEntered,
  onExit,
  accessibilityLabel,
  activator
}) {
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const container = (0, import_react240.useRef)(null);
  const activatorRef = (0, import_react240.useRef)(null);
  const handleClose = (0, import_react240.useCallback)(() => {
    onClose();
    const activatorElement = activator && isRef3(activator) ? activator && activator.current : activatorRef.current;
    if (activatorElement) {
      requestAnimationFrame(() => focusFirstFocusableNode(activatorElement));
    }
  }, [activator, onClose]);
  (0, import_react240.useEffect)(() => {
    if (true) {
      console.warn("Deprecation: <Sheet /> is deprecated. This component might be removed in a future major version of Polaris. Use <Modal /> instead or avoid modal patterns all together.");
    }
  }, []);
  const activatorMarkup = activator && !isRef3(activator) ? import_react240.default.createElement("div", {
    ref: activatorRef
  }, activator) : null;
  return import_react240.default.createElement(import_react240.default.Fragment, null, activatorMarkup, import_react240.default.createElement(Portal, {
    idPrefix: "sheet"
  }, import_react240.default.createElement(CSSTransition_default, {
    nodeRef: container,
    classNames: isNavigationCollapsed ? BOTTOM_CLASS_NAMES : RIGHT_CLASS_NAMES,
    timeout: parseInt(motion2["motion-duration-300"], 10),
    in: open,
    mountOnEnter: true,
    unmountOnExit: true,
    onEntered,
    onExit
  }, import_react240.default.createElement("div", Object.assign({
    className: styles102.Container
  }, layer.props, overlay.props, {
    ref: container
  }), import_react240.default.createElement(TrapFocus, {
    trapping: open
  }, import_react240.default.createElement("div", {
    role: "dialog",
    "aria-modal": true,
    tabIndex: -1,
    className: styles102.Sheet,
    "aria-label": accessibilityLabel
  }, children2)))), import_react240.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    handler: handleClose
  }), open && import_react240.default.createElement(Backdrop, {
    transparent: true,
    onClick: handleClose
  })));
}
function isRef3(ref) {
  return Object.prototype.hasOwnProperty.call(ref, "current");
}

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.js
var Suffix;
(function(Suffix2) {
  Suffix2["Filter"] = "Filter";
  Suffix2["Shortcut"] = "Shortcut";
})(Suffix || (Suffix = {}));
var LegacyFiltersInner = class extends import_react241.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      open: false,
      readyForFocus: false
    };
    this.moreFiltersButtonContainer = (0, import_react241.createRef)();
    this.moreFiltersDoneButtonContainer = (0, import_react241.createRef)();
    this.focusNode = (0, import_react241.createRef)();
    this.closeFilters = () => {
      this.setState({
        open: false
      }, () => {
        if (this.moreFiltersButtonContainer.current) {
          focusFirstFocusableNode(this.moreFiltersButtonContainer.current, false);
        }
      });
    };
    this.toggleFilters = () => {
      if (this.state.open === true) {
        this.closeFilters();
      } else {
        this.openFilters();
      }
    };
    this.setReadyForFocus = (newState) => () => {
      this.setState({
        readyForFocus: newState
      });
    };
    this.handleClearAll = () => {
      this.props.onClearAll();
      this.moreFiltersDoneButtonContainer.current && focusFirstFocusableNode(this.moreFiltersDoneButtonContainer.current, false);
    };
  }
  render() {
    const {
      filters,
      queryValue,
      onQueryBlur,
      onQueryChange,
      onQueryFocus,
      focused,
      onClearAll,
      appliedFilters,
      onQueryClear,
      queryPlaceholder,
      children: children2,
      disabled = false,
      helpText,
      hideTags,
      hideQueryField,
      disableQueryField = false,
      i18n,
      mediaQuery: {
        isNavigationCollapsed
      }
    } = this.props;
    const {
      resourceName
    } = this.context;
    const {
      open,
      readyForFocus
    } = this.state;
    const backdropMarkup = open ? import_react241.default.createElement(import_react241.default.Fragment, null, import_react241.default.createElement(ScrollLock, null), import_react241.default.createElement("div", {
      className: styles99.Backdrop,
      onClick: this.closeFilters
    })) : null;
    const filtersContentMarkup = filters.map((filter, index) => {
      const filterIsOpen = this.state[`${filter.key}${Suffix.Filter}`] === true;
      const icon = filterIsOpen ? SvgChevronUpMinor : SvgChevronDownMinor;
      const className = classNames(styles99.FilterTriggerContainer, filterIsOpen && styles99.open, index === 0 && styles99.first, filters.length !== 1 && index === filters.length - 1 && styles99.last);
      const appliedFilterContent = this.getAppliedFilterContent(filter.key);
      const appliedFilterBadgeMarkup = appliedFilterContent ? import_react241.default.createElement("div", {
        className: styles99.AppliedFilterBadgeContainer
      }, import_react241.default.createElement(Badge, {
        status: "new"
      }, appliedFilterContent)) : null;
      const collapsibleID = `${filter.key}Collapsible`;
      const buttonClassName = classNames(styles99.FilterTrigger);
      return import_react241.default.createElement("div", {
        key: filter.key,
        className
      }, import_react241.default.createElement("button", {
        onClick: () => this.toggleFilter(filter.key),
        className: buttonClassName,
        id: `${filter.key}ToggleButton`,
        type: "button",
        "aria-controls": collapsibleID,
        "aria-expanded": filterIsOpen
      }, import_react241.default.createElement("div", {
        className: styles99.FilterTriggerLabelContainer
      }, import_react241.default.createElement("h3", {
        className: styles99.FilterTriggerTitle
      }, import_react241.default.createElement(Text, {
        as: "span",
        color: this.props.disabled || filter.disabled ? "subdued" : void 0
      }, filter.label)), import_react241.default.createElement("span", {
        className: styles99.FilterTriggerIcon
      }, import_react241.default.createElement(Icon, {
        source: icon,
        color: "base"
      }))), appliedFilterBadgeMarkup), import_react241.default.createElement(Collapsible, {
        id: collapsibleID,
        open: filterIsOpen,
        onAnimationEnd: this.setReadyForFocus(true)
      }, import_react241.default.createElement("div", {
        className: styles99.FilterNodeContainer
      }, import_react241.default.createElement(Focus, {
        disabled: !filterIsOpen || !readyForFocus || !open,
        root: this.focusNode
      }, this.generateFilterMarkup(filter)))));
    });
    const appliedFiltersCount = appliedFilters ? appliedFilters.length : 0;
    const moreFiltersLabel = hideTags && appliedFiltersCount > 0 ? i18n.translate("Polaris.Filters.moreFiltersWithCount", {
      count: appliedFiltersCount
    }) : i18n.translate("Polaris.Filters.moreFilters");
    const rightActionMarkup = filters.length ? import_react241.default.createElement(UseFeatures, null, ({
      polarisSummerEditions2023
    }) => import_react241.default.createElement("div", {
      ref: this.moreFiltersButtonContainer
    }, import_react241.default.createElement(Button, {
      onClick: this.toggleFilters,
      disabled,
      size: polarisSummerEditions2023 ? "large" : "medium"
    }, moreFiltersLabel))) : null;
    const filterResourceName = resourceName || {
      singular: i18n.translate("Polaris.ResourceList.defaultItemSingular"),
      plural: i18n.translate("Polaris.ResourceList.defaultItemPlural")
    };
    const transformedFilters = this.transformFilters(filters);
    const filtersControlMarkup = import_react241.default.createElement(ConnectedFilterControl, {
      rightPopoverableActions: transformedFilters,
      rightAction: rightActionMarkup,
      auxiliary: children2,
      disabled,
      forceShowMorefiltersButton: filters.length > transformedFilters.length,
      queryFieldHidden: hideQueryField
    }, hideQueryField ? null : import_react241.default.createElement(TextField, {
      placeholder: queryPlaceholder || i18n.translate("Polaris.Filters.filter", {
        resourceName: filterResourceName.plural
      }),
      onChange: onQueryChange,
      onBlur: onQueryBlur,
      onFocus: onQueryFocus,
      value: queryValue,
      focused,
      label: queryPlaceholder || i18n.translate("Polaris.Filters.filter", {
        resourceName: filterResourceName.plural
      }),
      labelHidden: true,
      prefix: import_react241.default.createElement("span", {
        className: styles99.SearchIcon
      }, import_react241.default.createElement(Icon, {
        source: SvgSearchMinor
      })),
      clearButton: true,
      onClearButtonClick: onQueryClear,
      disabled: disabled || disableQueryField,
      autoComplete: "off"
    }));
    const filtersContainerHeaderClassname = classNames(styles99.LegacyFiltersContainerHeader);
    const filtersDesktopHeaderMarkup = import_react241.default.createElement("div", {
      className: filtersContainerHeaderClassname
    }, import_react241.default.createElement(Text, {
      variant: "headingLg",
      as: "h3"
    }, moreFiltersLabel), import_react241.default.createElement(Button, {
      icon: SvgCancelSmallMinor,
      plain: true,
      accessibilityLabel: i18n.translate("Polaris.Filters.cancel"),
      onClick: this.closeFilters
    }));
    const filtersMobileHeaderMarkup = import_react241.default.createElement("div", {
      className: filtersContainerHeaderClassname
    }, import_react241.default.createElement(Button, {
      icon: SvgCancelSmallMinor,
      plain: true,
      accessibilityLabel: i18n.translate("Polaris.Filters.cancel"),
      onClick: this.closeFilters
    }), import_react241.default.createElement(Text, {
      variant: "headingLg",
      as: "h3"
    }, moreFiltersLabel), import_react241.default.createElement(Button, {
      onClick: this.closeFilters,
      primary: true
    }, i18n.translate("Polaris.Filters.done")));
    const filtersDesktopFooterClassname = classNames(styles99.LegacyFiltersContainerFooter);
    const filtersDesktopFooterMarkup = import_react241.default.createElement("div", {
      className: filtersDesktopFooterClassname
    }, import_react241.default.createElement(Button, {
      onClick: this.handleClearAll,
      disabled: !this.hasAppliedFilters()
    }, i18n.translate("Polaris.Filters.clearAllFilters")), import_react241.default.createElement("div", {
      ref: this.moreFiltersDoneButtonContainer
    }, import_react241.default.createElement(Button, {
      onClick: this.closeFilters,
      primary: true
    }, i18n.translate("Polaris.Filters.done"))));
    const filtersMobileFooterMarkup = import_react241.default.createElement("div", {
      className: styles99.LegacyFiltersMobileContainerFooter
    }, this.hasAppliedFilters() ? import_react241.default.createElement(Button, {
      onClick: onClearAll,
      fullWidth: true
    }, i18n.translate("Polaris.Filters.clearAllFilters")) : import_react241.default.createElement("div", {
      className: styles99.EmptyFooterState
    }, import_react241.default.createElement(Text, {
      color: "subdued",
      as: "span"
    }, import_react241.default.createElement("p", null, i18n.translate("Polaris.Filters.noFiltersApplied")))));
    const shouldHideTagsContainer = !appliedFilters || appliedFilters.length < 1;
    const tagsMarkup = !hideTags ? import_react241.default.createElement(TagsWrapper, {
      hidden: shouldHideTagsContainer
    }, import_react241.default.createElement("div", {
      className: styles99.TagsContainer,
      "aria-live": "polite"
    }, (appliedFilters || []).map((filter) => {
      return import_react241.default.createElement(Tag, {
        key: filter.key,
        onRemove: () => {
          filter.onRemove(filter.key);
        },
        disabled
      }, filter.label);
    }))) : null;
    const filtersMobileContainerContentClassName = classNames(styles99.LegacyFiltersMobileContainerContent);
    const filtersDesktopContainerContentClassName = classNames(styles99.LegacyFiltersDesktopContainerContent);
    const filtersContainerMarkup = isNavigationCollapsed ? import_react241.default.createElement(Sheet, {
      accessibilityLabel: moreFiltersLabel,
      open,
      onClose: this.closeFilters,
      onEntered: this.setReadyForFocus(true),
      onExit: this.setReadyForFocus(false)
    }, filtersMobileHeaderMarkup, import_react241.default.createElement(Scrollable, {
      className: filtersMobileContainerContentClassName,
      shadow: true
    }, filtersContentMarkup, filtersMobileFooterMarkup)) : import_react241.default.createElement(Sheet, {
      accessibilityLabel: moreFiltersLabel,
      open,
      onClose: this.closeFilters,
      onEntered: this.setReadyForFocus(true),
      onExit: this.setReadyForFocus(false)
    }, import_react241.default.createElement("div", {
      className: styles99.LegacyFiltersContainer
    }, filtersDesktopHeaderMarkup, import_react241.default.createElement(Scrollable, {
      className: filtersDesktopContainerContentClassName,
      shadow: true
    }, filtersContentMarkup), filtersDesktopFooterMarkup));
    const helpTextMarkup = helpText ? import_react241.default.createElement("div", {
      id: "FiltersHelpText",
      className: styles99.HelpText
    }, import_react241.default.createElement(Text, {
      color: "subdued",
      as: "span"
    }, helpText)) : null;
    return import_react241.default.createElement(WithinFilterContext.Provider, {
      value: true
    }, import_react241.default.createElement("div", {
      className: styles99.LegacyFilters
    }, filtersControlMarkup, filtersContainerMarkup, tagsMarkup, helpTextMarkup, backdropMarkup, import_react241.default.createElement(KeypressListener, {
      keyCode: Key.Escape,
      handler: this.closeFilters
    })));
  }
  hasAppliedFilters() {
    const {
      appliedFilters,
      queryValue
    } = this.props;
    const filtersApplied = Boolean(appliedFilters && appliedFilters.length > 0);
    const queryApplied = Boolean(queryValue && queryValue !== "");
    return filtersApplied || queryApplied;
  }
  getAppliedFilterContent(key) {
    const {
      appliedFilters
    } = this.props;
    if (!appliedFilters) {
      return void 0;
    }
    const filter = appliedFilters.find((filter2) => filter2.key === key);
    return filter == null ? void 0 : filter.label;
  }
  getAppliedFilterRemoveHandler(key) {
    const {
      appliedFilters
    } = this.props;
    if (!appliedFilters) {
      return void 0;
    }
    const filter = appliedFilters.find((filter2) => filter2.key === key);
    return filter == null ? void 0 : filter.onRemove;
  }
  openFilters() {
    this.setState({
      open: true
    });
  }
  toggleFilter(key) {
    if (this.state[`${key}${Suffix.Filter}`] === true) {
      this.setState({
        readyForFocus: false,
        [`${key}${Suffix.Filter}`]: false
      });
    } else {
      this.setState({
        readyForFocus: false,
        [`${key}${Suffix.Filter}`]: true
      });
    }
  }
  openFilterShortcut(key) {
    this.setState({
      [`${key}${Suffix.Shortcut}`]: true
    });
  }
  closeFilterShortcut(key) {
    this.setState({
      [`${key}${Suffix.Shortcut}`]: false
    });
  }
  toggleFilterShortcut(key) {
    if (this.state[`${key}${Suffix.Shortcut}`] === true) {
      this.closeFilterShortcut(key);
    } else {
      this.openFilterShortcut(key);
    }
  }
  transformFilters(filters) {
    const transformedActions = [];
    getShortcutFilters(filters).forEach((filter) => {
      const {
        key,
        label,
        disabled
      } = filter;
      transformedActions.push({
        popoverContent: this.generateFilterMarkup(filter),
        popoverOpen: Boolean(this.state[`${key}${Suffix.Shortcut}`]),
        key,
        content: label,
        disabled,
        onAction: () => this.toggleFilterShortcut(key)
      });
    });
    return transformedActions;
  }
  generateFilterMarkup(filter) {
    const i18n = this.props.i18n;
    const removeCallback = this.getAppliedFilterRemoveHandler(filter.key);
    const removeHandler = removeCallback == null ? void 0 : () => {
      removeCallback(filter.key);
    };
    const clearButtonMarkup = !filter.hideClearButton && import_react241.default.createElement(Button, {
      plain: true,
      disabled: removeHandler == null,
      onClick: removeHandler,
      accessibilityLabel: i18n.translate("Polaris.Filters.clearLabel", {
        filterName: filter.label
      })
    }, i18n.translate("Polaris.Filters.clear"));
    return import_react241.default.createElement("div", {
      ref: this.focusNode
    }, import_react241.default.createElement(LegacyStack, {
      vertical: true,
      spacing: "tight"
    }, filter.filter, clearButtonMarkup));
  }
};
LegacyFiltersInner.contextType = ResourceListContext;
function getShortcutFilters(filters) {
  return filters.filter((filter) => filter.shortcut === true);
}
function LegacyFilters(props) {
  const i18n = useI18n();
  const mediaQuery = useMediaQuery();
  return import_react241.default.createElement(LegacyFiltersInner, Object.assign({}, props, {
    i18n,
    mediaQuery
  }));
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.js
var import_react247 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/utilities.js
function getVisibleAndHiddenTabIndices2(tabs, selected, disclosureWidth, tabWidths, containerWidth) {
  const sumTabWidths = tabWidths.reduce((sum, width2) => sum + width2, 0);
  const arrayOfTabIndices = tabs.map((_, index) => {
    return index;
  });
  const visibleTabs = [];
  const hiddenTabs = [];
  if (containerWidth > sumTabWidths) {
    visibleTabs.push(...arrayOfTabIndices);
  } else {
    visibleTabs.push(selected);
    let tabListWidth = tabWidths[selected];
    arrayOfTabIndices.forEach((currentTabIndex) => {
      if (currentTabIndex !== selected) {
        const currentTabWidth = tabWidths[currentTabIndex];
        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {
          hiddenTabs.push(currentTabIndex);
          return;
        }
        visibleTabs.push(currentTabIndex);
        tabListWidth += currentTabWidth;
      }
    });
  }
  return {
    visibleTabs,
    hiddenTabs
  };
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.scss.js
var styles103 = {
  "LegacyTabs": "Polaris-LegacyTabs",
  "fitted": "Polaris-LegacyTabs--fitted",
  "TabContainer": "Polaris-LegacyTabs__TabContainer",
  "Title": "Polaris-LegacyTabs__Title",
  "fillSpace": "Polaris-LegacyTabs--fillSpace",
  "Tab": "Polaris-LegacyTabs__Tab",
  "Tab-selected": "Polaris-LegacyTabs__Tab--selected",
  "titleWithIcon": "Polaris-LegacyTabs--titleWithIcon",
  "Panel": "Polaris-LegacyTabs__Panel",
  "Panel-hidden": "Polaris-LegacyTabs__Panel--hidden",
  "Item": "Polaris-LegacyTabs__Item",
  "DisclosureTab": "Polaris-LegacyTabs__DisclosureTab",
  "DisclosureTab-visible": "Polaris-LegacyTabs__DisclosureTab--visible",
  "DisclosureActivator": "Polaris-LegacyTabs__DisclosureActivator",
  "TabMeasurer": "Polaris-LegacyTabs__TabMeasurer"
};

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Panel/Panel.js
var import_react242 = __toESM(require_react());
function Panel2({
  hidden,
  id,
  tabID,
  children: children2
}) {
  const className = classNames(styles103.Panel, hidden && styles103["Panel-hidden"]);
  return import_react242.default.createElement("div", {
    className,
    id,
    role: "tabpanel",
    "aria-labelledby": tabID,
    tabIndex: -1
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/TabMeasurer/TabMeasurer.js
var import_react244 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Tab/Tab.js
var import_react243 = __toESM(require_react());
function Tab2({
  id,
  focused,
  siblingTabHasFocus,
  children: children2,
  onClick,
  selected,
  url,
  panelID,
  measuring,
  accessibilityLabel
}) {
  const wasSelected = (0, import_react243.useRef)(selected);
  const panelFocused = (0, import_react243.useRef)(false);
  const node = (0, import_react243.useRef)(null);
  (0, import_react243.useEffect)(() => {
    if (measuring) {
      return;
    }
    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;
    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {
      focusPanelID2(panelID);
      panelFocused.current = true;
    }
    if (selected && !wasSelected.current && panelID != null) {
      focusPanelID2(panelID);
    } else if (focused && node.current != null) {
      focusFirstFocusableNode(node.current);
    }
    wasSelected.current = selected;
  }, [focused, id, measuring, panelID, selected]);
  const handleClick = onClick && onClick.bind(null, id);
  const className = classNames(styles103.Tab, selected && styles103["Tab-selected"]);
  let tabIndex;
  if (selected && !siblingTabHasFocus && !measuring) {
    tabIndex = 0;
  } else if (focused && !measuring) {
    tabIndex = 0;
  } else {
    tabIndex = -1;
  }
  const tabContainerClassNames = classNames(styles103.TabContainer, selected && styles103.Underline);
  const markup = url ? import_react243.default.createElement(UnstyledLink, {
    id,
    url,
    role: "tab",
    tabIndex,
    onClick: handleClick,
    className,
    "aria-selected": selected,
    "aria-controls": panelID,
    "aria-label": accessibilityLabel,
    onMouseUp: handleMouseUpByBlurring
  }, import_react243.default.createElement("span", {
    className: styles103.Title
  }, children2)) : import_react243.default.createElement("button", {
    id,
    role: "tab",
    type: "button",
    tabIndex,
    className,
    onClick: handleClick,
    "aria-selected": selected,
    "aria-controls": panelID,
    "aria-label": accessibilityLabel,
    onMouseUp: handleMouseUpByBlurring
  }, import_react243.default.createElement("span", {
    className: styles103.Title
  }, children2));
  return import_react243.default.createElement("li", {
    className: tabContainerClassNames,
    ref: node,
    role: "presentation"
  }, markup);
}
function focusPanelID2(panelID) {
  const panel = document.getElementById(panelID);
  if (panel) {
    panel.focus({
      preventScroll: true
    });
  }
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/TabMeasurer/TabMeasurer.js
var TabMeasurer3 = (0, import_react244.memo)(function TabMeasurer4({
  selected,
  tabs,
  activator,
  tabToFocus,
  siblingTabHasFocus,
  handleMeasurement: handleMeasurementProp
}) {
  const containerNode = (0, import_react244.useRef)(null);
  const animationFrame = (0, import_react244.useRef)(null);
  const handleMeasurement = (0, import_react244.useCallback)(() => {
    if (animationFrame.current) {
      cancelAnimationFrame(animationFrame.current);
    }
    animationFrame.current = requestAnimationFrame(() => {
      if (!containerNode.current) {
        return;
      }
      const containerWidth = containerNode.current.offsetWidth;
      const hiddenTabNodes = containerNode.current.children;
      const hiddenTabNodesArray = Array.from(hiddenTabNodes);
      const hiddenTabWidths = hiddenTabNodesArray.map((node) => {
        return Math.ceil(node.getBoundingClientRect().width);
      });
      const disclosureWidth = hiddenTabWidths.pop() || 0;
      handleMeasurementProp({
        containerWidth,
        disclosureWidth,
        hiddenTabWidths
      });
    });
  }, [handleMeasurementProp]);
  (0, import_react244.useEffect)(() => {
    handleMeasurement();
  }, [handleMeasurement, tabs]);
  useComponentDidMount(() => {
    if (true) {
      setTimeout(handleMeasurement, 0);
    }
  });
  const tabsMarkup = tabs.map((tab, index) => {
    return import_react244.default.createElement(Tab2, {
      measuring: true,
      key: `${index}${tab.id}Hidden`,
      id: `${tab.id}Measurer`,
      siblingTabHasFocus,
      focused: index === tabToFocus,
      selected: index === selected,
      onClick: noop14,
      url: tab.url
    }, tab.content);
  });
  const classname = classNames(styles103.LegacyTabs, styles103.TabMeasurer);
  return import_react244.default.createElement("div", {
    className: classname,
    ref: containerNode
  }, import_react244.default.createElement(EventListener, {
    event: "resize",
    handler: handleMeasurement
  }), tabsMarkup, activator);
});
function noop14() {
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/List/List.js
var import_react246 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Item/Item.js
var import_react245 = __toESM(require_react());
var Item9 = class extends import_react245.PureComponent {
  constructor(...args) {
    super(...args);
    this.focusedNode = null;
    this.setFocusedNode = (node) => {
      this.focusedNode = node;
    };
  }
  componentDidMount() {
    const {
      focusedNode
    } = this;
    const {
      focused
    } = this.props;
    if (focusedNode && focusedNode instanceof HTMLElement && focused) {
      focusedNode.focus();
    }
  }
  componentDidUpdate() {
    const {
      focusedNode
    } = this;
    const {
      focused
    } = this.props;
    if (focusedNode && focusedNode instanceof HTMLElement && focused) {
      focusedNode.focus();
    }
  }
  render() {
    const {
      id,
      panelID,
      children: children2,
      url,
      accessibilityLabel,
      onClick = noop15
    } = this.props;
    const classname = classNames(styles103.Item);
    const sharedProps = {
      id,
      ref: this.setFocusedNode,
      onClick,
      className: classname,
      "aria-controls": panelID,
      "aria-selected": false,
      "aria-label": accessibilityLabel
    };
    const markup = url ? import_react245.default.createElement(UnstyledLink, Object.assign({}, sharedProps, {
      url
    }), children2) : import_react245.default.createElement("button", Object.assign({}, sharedProps, {
      type: "button"
    }), children2);
    return import_react245.default.createElement("li", null, markup);
  }
};
Item9.contextType = FeaturesContext;
function noop15() {
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/List/List.js
function List2({
  focusIndex,
  disclosureTabs,
  onClick = noop16,
  onKeyPress = noop16
}) {
  const tabs = disclosureTabs.map(({
    id,
    content,
    ...tabProps
  }, index) => {
    return import_react246.default.createElement(Item9, Object.assign({
      key: id
    }, tabProps, {
      id,
      focused: index === focusIndex,
      onClick: onClick.bind(null, id)
    }), content);
  });
  return import_react246.default.createElement("div", {
    onKeyDown: handleKeyDown3,
    onKeyUp: onKeyPress
  }, import_react246.default.createElement(Box, {
    as: "ul",
    padding: "200"
  }, tabs));
}
function noop16() {
}
function handleKeyDown3(event) {
  const {
    key
  } = event;
  if (key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.js
var TabsInner = class extends import_react247.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      disclosureWidth: 0,
      containerWidth: Infinity,
      tabWidths: [],
      visibleTabs: [],
      hiddenTabs: [],
      showDisclosure: false,
      tabToFocus: -1
    };
    this.handleKeyPress = (event) => {
      const {
        tabToFocus,
        visibleTabs,
        hiddenTabs,
        showDisclosure
      } = this.state;
      const key = event.key;
      const tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];
      let newFocus = tabsArrayInOrder.indexOf(tabToFocus);
      if (key === "ArrowRight") {
        newFocus += 1;
        if (newFocus === tabsArrayInOrder.length) {
          newFocus = 0;
        }
      }
      if (key === "ArrowLeft") {
        if (newFocus === -1 || newFocus === 0) {
          newFocus = tabsArrayInOrder.length - 1;
        } else {
          newFocus -= 1;
        }
      }
      this.setState({
        tabToFocus: tabsArrayInOrder[newFocus]
      });
    };
    this.renderTabMarkup = (tab, index) => {
      const {
        selected,
        children: children2
      } = this.props;
      const {
        tabToFocus
      } = this.state;
      const tabPanelID = tab.panelID || `${tab.id}-panel`;
      return import_react247.default.createElement(Tab2, {
        key: `${index}-${tab.id}`,
        id: tab.id,
        siblingTabHasFocus: tabToFocus > -1,
        focused: index === tabToFocus,
        selected: index === selected,
        onClick: this.handleTabClick,
        panelID: children2 ? tabPanelID : void 0,
        accessibilityLabel: tab.accessibilityLabel,
        url: tab.url
      }, tab.content);
    };
    this.handleFocus = (event) => {
      const {
        selected,
        tabs
      } = this.props;
      const target = event.target;
      if (target.classList.contains(styles103.Tab) || target.classList.contains(styles103.Item)) {
        let tabToFocus = -1;
        tabs.every((tab, index) => {
          if (tab.id === target.id) {
            tabToFocus = index;
            return false;
          }
          return true;
        });
        this.setState({
          tabToFocus
        });
        return;
      }
      if (target.classList.contains(styles103.DisclosureActivator)) {
        return;
      }
      if (!event.relatedTarget) {
        this.setState({
          tabToFocus: selected
        });
        return;
      }
      const relatedTarget = event.relatedTarget;
      if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(styles103.Tab) && !relatedTarget.classList.contains(styles103.Item) && !relatedTarget.classList.contains(styles103.DisclosureActivator)) {
        this.setState({
          tabToFocus: selected
        });
      }
    };
    this.handleBlur = (event) => {
      if (event.relatedTarget == null) {
        this.setState({
          tabToFocus: -1
        });
        return;
      }
      const target = event.relatedTarget;
      if (target instanceof HTMLElement && !target.classList.contains(styles103.Tab) && !target.classList.contains(styles103.Item)) {
        this.setState({
          tabToFocus: -1
        });
      }
    };
    this.handleDisclosureActivatorClick = () => {
      this.setState(({
        showDisclosure
      }) => ({
        showDisclosure: !showDisclosure
      }));
    };
    this.handleClose = () => {
      this.setState({
        showDisclosure: false
      });
    };
    this.handleMeasurement = (measurements) => {
      const {
        tabs,
        selected
      } = this.props;
      const {
        tabToFocus
      } = this.state;
      const {
        hiddenTabWidths: tabWidths,
        containerWidth,
        disclosureWidth
      } = measurements;
      const {
        visibleTabs,
        hiddenTabs
      } = getVisibleAndHiddenTabIndices2(tabs, selected, disclosureWidth, tabWidths, containerWidth);
      this.setState({
        tabToFocus: tabToFocus === -1 ? -1 : selected,
        visibleTabs,
        hiddenTabs,
        disclosureWidth,
        containerWidth,
        tabWidths
      });
    };
    this.handleTabClick = (id) => {
      const {
        tabs,
        onSelect = noop17
      } = this.props;
      const tab = tabs.find((aTab) => aTab.id === id);
      if (tab == null) {
        return;
      }
      const selectedIndex = tabs.indexOf(tab);
      onSelect(selectedIndex);
    };
  }
  static getDerivedStateFromProps(nextProps, prevState) {
    const {
      disclosureWidth,
      tabWidths,
      containerWidth
    } = prevState;
    const {
      visibleTabs,
      hiddenTabs
    } = getVisibleAndHiddenTabIndices2(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);
    return {
      visibleTabs,
      hiddenTabs,
      selected: nextProps.selected
    };
  }
  render() {
    const {
      tabs,
      selected,
      fitted,
      children: children2,
      i18n,
      disclosureText
    } = this.props;
    const {
      tabToFocus,
      visibleTabs,
      hiddenTabs,
      showDisclosure
    } = this.state;
    const disclosureTabs = hiddenTabs.map((tabIndex) => tabs[tabIndex]);
    const panelMarkup = children2 ? tabs.map((_tab, index) => {
      return selected === index ? import_react247.default.createElement(Panel2, {
        id: tabs[index].panelID || `${tabs[index].id}-panel`,
        tabID: tabs[index].id,
        key: tabs[index].id
      }, children2) : import_react247.default.createElement(Panel2, {
        id: tabs[index].panelID || `${tabs[index].id}-panel`,
        tabID: tabs[index].id,
        key: tabs[index].id,
        hidden: true
      });
    }) : null;
    const tabsMarkup = visibleTabs.sort((tabA, tabB) => tabA - tabB).map((tabIndex) => this.renderTabMarkup(tabs[tabIndex], tabIndex));
    const disclosureActivatorVisible = visibleTabs.length < tabs.length;
    const hasCustomDisclosure = Boolean(disclosureText);
    const classname = classNames(styles103.LegacyTabs, fitted && styles103.fitted, disclosureActivatorVisible && styles103.fillSpace);
    const disclosureTabClassName = classNames(styles103.DisclosureTab, disclosureActivatorVisible && styles103["DisclosureTab-visible"]);
    const disclosureButtonClassName = classNames(styles103.DisclosureActivator, hasCustomDisclosure && styles103.Tab);
    const disclosureButtonContentWrapperClassName = classNames(styles103.Title, hasCustomDisclosure && styles103.titleWithIcon);
    const disclosureButtonContent = hasCustomDisclosure ? import_react247.default.createElement(import_react247.default.Fragment, null, disclosureText, import_react247.default.createElement(UseFeatures, null, ({
      polarisSummerEditions2023
    }) => import_react247.default.createElement(Icon, {
      source: polarisSummerEditions2023 ? SvgChevronDownMinor : SvgCaretDownMinor,
      color: "subdued"
    }))) : import_react247.default.createElement(Icon, {
      source: SvgHorizontalDotsMinor,
      color: "subdued"
    });
    const disclosureButton = import_react247.default.createElement("button", {
      type: "button",
      className: disclosureButtonClassName,
      onClick: this.handleDisclosureActivatorClick,
      "aria-label": i18n.translate("Polaris.Tabs.toggleTabsLabel")
    }, import_react247.default.createElement("span", {
      className: disclosureButtonContentWrapperClassName
    }, disclosureButtonContent));
    const activator = disclosureText ? import_react247.default.createElement("div", {
      className: styles103.TabContainer
    }, disclosureButton) : disclosureButton;
    return import_react247.default.createElement("div", null, import_react247.default.createElement(Box, {
      borderBlockEndWidth: "1",
      borderColor: "border-subdued",
      paddingInlineStart: "200",
      paddingInlineEnd: "200"
    }, import_react247.default.createElement(TabMeasurer3, {
      tabToFocus,
      activator,
      selected,
      tabs,
      siblingTabHasFocus: tabToFocus > -1,
      handleMeasurement: this.handleMeasurement
    }), import_react247.default.createElement("ul", {
      role: "tablist",
      className: classname,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur,
      onKeyDown: handleKeyDown4,
      onKeyUp: this.handleKeyPress
    }, tabsMarkup, import_react247.default.createElement("li", {
      className: disclosureTabClassName,
      role: "presentation"
    }, import_react247.default.createElement(Popover2, {
      preferredPosition: "below",
      activator,
      active: disclosureActivatorVisible && showDisclosure,
      onClose: this.handleClose,
      autofocusTarget: "first-node"
    }, import_react247.default.createElement(List2, {
      focusIndex: hiddenTabs.indexOf(tabToFocus),
      disclosureTabs,
      onClick: this.handleTabClick,
      onKeyPress: this.handleKeyPress
    }))))), panelMarkup);
  }
};
function noop17() {
}
function handleKeyDown4(event) {
  const {
    key
  } = event;
  if (key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}
function LegacyTabs(props) {
  const i18n = useI18n();
  return import_react247.default.createElement(TabsInner, Object.assign({}, props, {
    i18n
  }));
}

// node_modules/@shopify/polaris/build/esm/components/Link/Link.js
var import_react248 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Link/Link.scss.js
var styles104 = {
  "Link": "Polaris-Link",
  "monochrome": "Polaris-Link--monochrome",
  "removeUnderline": "Polaris-Link--removeUnderline"
};

// node_modules/@shopify/polaris/build/esm/components/Link/Link.js
function Link({
  url,
  children: children2,
  onClick,
  external,
  target,
  id,
  monochrome,
  removeUnderline,
  accessibilityLabel,
  dataPrimaryLink
}) {
  return import_react248.default.createElement(BannerContext.Consumer, null, (BannerContext2) => {
    const shouldBeMonochrome = monochrome || BannerContext2;
    const className = classNames(styles104.Link, shouldBeMonochrome && styles104.monochrome, removeUnderline && styles104.removeUnderline);
    return url ? import_react248.default.createElement(UnstyledLink, {
      onClick,
      className,
      url,
      external,
      target,
      id,
      "aria-label": accessibilityLabel,
      "data-primary-link": dataPrimaryLink
    }, children2) : import_react248.default.createElement("button", {
      type: "button",
      onClick,
      className,
      id,
      "aria-label": accessibilityLabel,
      "data-primary-link": dataPrimaryLink
    }, children2);
  });
}

// node_modules/@shopify/polaris/build/esm/components/List/List.js
var import_react250 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/List/List.scss.js
var styles105 = {
  "List": "Polaris-List",
  "typeNumber": "Polaris-List--typeNumber",
  "Item": "Polaris-List__Item",
  "spacingLoose": "Polaris-List--spacingLoose"
};

// node_modules/@shopify/polaris/build/esm/components/List/components/Item/Item.js
var import_react249 = __toESM(require_react());
function Item10({
  children: children2
}) {
  return import_react249.default.createElement("li", {
    className: styles105.Item
  }, children2);
}

// node_modules/@shopify/polaris/build/esm/components/List/List.js
var List3 = function List4({
  children: children2,
  spacing = "loose",
  type = "bullet"
}) {
  const className = classNames(styles105.List, spacing && styles105[variationName("spacing", spacing)], type && styles105[variationName("type", type)]);
  const ListElement = type === "bullet" ? "ul" : "ol";
  return import_react250.default.createElement(ListElement, {
    className
  }, children2);
};
List3.Item = Item10;

// node_modules/@shopify/polaris/build/esm/components/Loading/Loading.js
var import_react251 = __toESM(require_react());
var Loading3 = (0, import_react251.memo)(function Loading4() {
  const {
    startLoading,
    stopLoading
  } = useFrame();
  (0, import_react251.useEffect)(() => {
    startLoading();
    return () => {
      stopLoading();
    };
  }, [startLoading, stopLoading]);
  return null;
});

// node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.js
var import_react252 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.scss.js
var styles106 = {
  "MediaCard": "Polaris-MediaCard",
  "portrait": "Polaris-MediaCard--portrait",
  "MediaContainer": "Polaris-MediaCard__MediaContainer",
  "sizeSmall": "Polaris-MediaCard--sizeSmall",
  "InfoContainer": "Polaris-MediaCard__InfoContainer",
  "Heading": "Polaris-MediaCard__Heading",
  "PrimaryAction": "Polaris-MediaCard__PrimaryAction",
  "SecondaryAction": "Polaris-MediaCard__SecondaryAction",
  "ActionContainer": "Polaris-MediaCard__ActionContainer",
  "Description": "Polaris-MediaCard__Description"
};

// node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.js
function MediaCard({
  title,
  children: children2,
  primaryAction,
  secondaryAction,
  description,
  popoverActions = [],
  portrait = false,
  size: size2 = "medium",
  onDismiss
}) {
  const i18n = useI18n();
  const {
    value: popoverActive,
    toggle: togglePopoverActive
  } = useToggle(false);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  let headerMarkup = null;
  if (title) {
    const headerContent = typeof title === "string" ? import_react252.default.createElement(Text, {
      variant: polarisSummerEditions2023 ? "headingSm" : "headingMd",
      as: "h2"
    }, title) : title;
    headerMarkup = import_react252.default.createElement("div", {
      className: styles106.Heading
    }, headerContent);
  }
  const dismissButtonMarkup = onDismiss ? import_react252.default.createElement(Button, {
    icon: SvgCancelMinor,
    onClick: onDismiss,
    size: "slim",
    plain: true,
    accessibilityLabel: i18n.translate("Polaris.MediaCard.dismissButton"),
    primary: polarisSummerEditions2023
  }) : null;
  const popoverActivator = import_react252.default.createElement(HorizontalStack, {
    blockAlign: "center"
  }, import_react252.default.createElement(Button, {
    icon: SvgHorizontalDotsMinor,
    onClick: togglePopoverActive,
    size: "slim",
    plain: true,
    accessibilityLabel: i18n.translate("Polaris.MediaCard.popoverButton"),
    primary: polarisSummerEditions2023
  }));
  const popoverActionsMarkup = popoverActions.length > 0 ? import_react252.default.createElement(Popover2, {
    active: popoverActive,
    activator: popoverActivator,
    onClose: togglePopoverActive,
    preferredAlignment: "left",
    preferredPosition: "below"
  }, import_react252.default.createElement(ActionList, {
    items: popoverActions,
    onActionAnyItem: togglePopoverActive
  })) : null;
  const primaryActionMarkup = primaryAction ? import_react252.default.createElement("div", {
    className: styles106.PrimaryAction
  }, buttonFrom(primaryAction)) : null;
  const secondaryActionMarkup = secondaryAction ? import_react252.default.createElement("div", {
    className: styles106.SecondaryAction
  }, polarisSummerEditions2023 ? buttonFrom(secondaryAction) : buttonFrom(secondaryAction, {
    plain: true
  })) : null;
  const actionClassName = classNames(styles106.ActionContainer, portrait && styles106.portrait);
  const actionMarkup = primaryActionMarkup || secondaryActionMarkup ? import_react252.default.createElement("div", {
    className: actionClassName
  }, import_react252.default.createElement(ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup)) : null;
  const mediaCardClassName = classNames(styles106.MediaCard, portrait && styles106.portrait);
  const mediaContainerClassName = classNames(styles106.MediaContainer, portrait && styles106.portrait, size2 === "small" && styles106.sizeSmall);
  const infoContainerClassName = classNames(styles106.InfoContainer, portrait && styles106.portrait, size2 === "small" && styles106.sizeSmall);
  const popoverOrDismissMarkup = popoverActionsMarkup || dismissButtonMarkup ? import_react252.default.createElement(Box, {
    position: "absolute",
    insetBlockStart: polarisSummerEditions2023 ? void 0 : "400",
    insetInlineEnd: "500",
    zIndex: "var(--p-z-index-2)"
  }, import_react252.default.createElement(HorizontalStack, {
    gap: "100",
    wrap: !polarisSummerEditions2023
  }, popoverActionsMarkup, dismissButtonMarkup)) : null;
  return import_react252.default.createElement(LegacyCard, null, import_react252.default.createElement("div", {
    className: mediaCardClassName
  }, import_react252.default.createElement("div", {
    className: mediaContainerClassName
  }, children2), import_react252.default.createElement("div", {
    className: infoContainerClassName
  }, polarisSummerEditions2023 ? import_react252.default.createElement(Box, {
    padding: "500"
  }, import_react252.default.createElement(VerticalStack, {
    gap: "200"
  }, import_react252.default.createElement(HorizontalStack, {
    wrap: false,
    align: "space-between",
    gap: "200"
  }, headerMarkup, popoverOrDismissMarkup), import_react252.default.createElement("p", {
    className: styles106.Description
  }, description), actionMarkup)) : import_react252.default.createElement(LegacyCard.Section, null, popoverOrDismissMarkup, import_react252.default.createElement(LegacyStack, {
    vertical: true,
    spacing: "tight"
  }, headerMarkup, import_react252.default.createElement("p", {
    className: styles106.Description
  }, description), actionMarkup)))));
}

// node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.js
var import_react257 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Navigation/context.js
var import_react253 = __toESM(require_react());
var NavigationContext = (0, import_react253.createContext)({
  location: ""
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.scss.js
var styles107 = {
  "Navigation": "Polaris-Navigation",
  "UserMenu": "Polaris-Navigation__UserMenu",
  "ContextControl": "Polaris-Navigation__ContextControl",
  "PrimaryNavigation": "Polaris-Navigation__PrimaryNavigation",
  "LogoContainer": "Polaris-Navigation__LogoContainer",
  "hasLogoSuffix": "Polaris-Navigation--hasLogoSuffix",
  "Logo": "Polaris-Navigation__Logo",
  "LogoLink": "Polaris-Navigation__LogoLink",
  "Item": "Polaris-Navigation__Item",
  "Icon-resized": "Polaris-Navigation__Icon--resized",
  "Badge": "Polaris-Navigation__Badge",
  "ItemInnerWrapper": "Polaris-Navigation__ItemInnerWrapper",
  "ItemWrapper": "Polaris-Navigation__ItemWrapper",
  "ItemInnerDisabled": "Polaris-Navigation__ItemInnerDisabled",
  "ItemInnerWrapper-display-actions-on-hover": "Polaris-Navigation--itemInnerWrapperDisplayActionsOnHover",
  "SecondaryActions": "Polaris-Navigation__SecondaryActions",
  "ItemInnerWrapper-selected": "Polaris-Navigation__ItemInnerWrapper--selected",
  "Text": "Polaris-Navigation__Text",
  "ItemInnerWrapper-open": "Polaris-Navigation__ItemInnerWrapper--open",
  "Item-selected": "Polaris-Navigation__Item--selected",
  "Item-child-active": "Polaris-Navigation--itemChildActive",
  "Item-disabled": "Polaris-Navigation__Item--disabled",
  "Icon": "Polaris-Navigation__Icon",
  "ListItem-hasAction": "Polaris-Navigation__ListItem--hasAction",
  "subNavigationActive": "Polaris-Navigation--subNavigationActive",
  "ListItem": "Polaris-Navigation__ListItem",
  "RollupSection": "Polaris-Navigation__RollupSection",
  "SecondaryNavigation": "Polaris-Navigation__SecondaryNavigation",
  "Text-truncated": "Polaris-Navigation__Text--truncated",
  "ItemWithFloatingActions": "Polaris-Navigation__ItemWithFloatingActions",
  "SecondaryAction": "Polaris-Navigation__SecondaryAction",
  "List": "Polaris-Navigation__List",
  "Item-line": "Polaris-Navigation__Item--line",
  "Item-hover-line": "Polaris-Navigation--itemHoverLine",
  "Item-line-pointer": "Polaris-Navigation--itemLinePointer",
  "Item-hover-pointer": "Polaris-Navigation--itemHoverPointer",
  "SecondaryNavigation-noIcon": "Polaris-Navigation__SecondaryNavigation--noIcon",
  "Section": "Polaris-Navigation__Section",
  "Section-fill": "Polaris-Navigation__Section--fill",
  "Section-withSeparator": "Polaris-Navigation__Section--withSeparator",
  "SectionHeading": "Polaris-Navigation__SectionHeading",
  "Action": "Polaris-Navigation__Action",
  "RollupToggle": "Polaris-Navigation__RollupToggle",
  "Indicator": "Polaris-Navigation__Indicator",
  "SecondaryNavigationOpen": "Polaris-Navigation__SecondaryNavigationOpen",
  "snappy-grow": "Polaris-Navigation__snappy--grow"
};

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Section/Section.js
var import_react256 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/Item.js
var import_react255 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Navigation/types.js
var MatchState;
(function(MatchState2) {
  MatchState2[MatchState2["MatchForced"] = 0] = "MatchForced";
  MatchState2[MatchState2["MatchUrl"] = 1] = "MatchUrl";
  MatchState2[MatchState2["MatchPaths"] = 2] = "MatchPaths";
  MatchState2[MatchState2["Excluded"] = 3] = "Excluded";
  MatchState2[MatchState2["NoMatch"] = 4] = "NoMatch";
})(MatchState || (MatchState = {}));

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/components/SecondaryNavigation/SecondaryNavigation.js
var import_react254 = __toESM(require_react());
var import_react_fast_compare3 = __toESM(require_react_fast_compare());
function SecondaryNavigation({
  ItemComponent,
  icon,
  longestMatch,
  subNavigationItems,
  showExpanded,
  truncateText,
  secondaryNavigationId
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const uid = (0, import_react254.useId)();
  const {
    onNavigationDismiss
  } = (0, import_react254.useContext)(NavigationContext);
  const [hoveredItem, setHoveredItem] = (0, import_react254.useState)();
  const matchedItemPosition = subNavigationItems.findIndex((item) => (0, import_react_fast_compare3.default)(item, longestMatch));
  const hoveredItemPosition = subNavigationItems.findIndex((item) => (0, import_react_fast_compare3.default)(item, hoveredItem));
  return import_react254.default.createElement("div", {
    className: classNames(styles107.SecondaryNavigation, showExpanded && styles107.SecondaryNavigationOpen, !icon && styles107["SecondaryNavigation-noIcon"])
  }, import_react254.default.createElement(Collapsible, {
    id: secondaryNavigationId || uid,
    open: showExpanded,
    transition: false
  }, import_react254.default.createElement("ul", {
    className: styles107.List
  }, subNavigationItems.map((item, index) => {
    const {
      label,
      ...rest
    } = item;
    const onClick = () => {
      onNavigationDismiss == null ? void 0 : onNavigationDismiss();
      if (item.onClick && item.onClick !== onNavigationDismiss) {
        item.onClick();
      }
    };
    const shouldShowVerticalLine = polarisSummerEditions2023 ? index < matchedItemPosition : false;
    return import_react254.default.createElement(ItemComponent, Object.assign({
      key: label
    }, rest, {
      label,
      showVerticalLine: shouldShowVerticalLine,
      showVerticalHoverPointer: polarisSummerEditions2023 && index === hoveredItemPosition,
      onMouseEnter: item.disabled ? void 0 : () => setHoveredItem(item),
      onMouseLeave: item.disabled ? void 0 : () => setHoveredItem(void 0),
      matches: (0, import_react_fast_compare3.default)(item, longestMatch),
      onClick,
      truncateText
    }));
  }))));
}

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/Item.js
var MAX_SECONDARY_ACTIONS = 2;
var TOOLTIP_HOVER_DELAY = 1e3;
function Item11({
  url,
  icon: baseIcon,
  matchedItemIcon,
  label,
  subNavigationItems = [],
  secondaryAction,
  secondaryActions,
  displayActionsOnHover,
  disabled,
  onClick,
  accessibilityLabel,
  selected: selectedOverride,
  badge,
  new: isNew,
  matches: matches2,
  exactMatch,
  matchPaths,
  excludePaths,
  external,
  onToggleExpandedState,
  expanded,
  shouldResizeIcon,
  truncateText,
  showVerticalLine,
  showVerticalHoverPointer,
  onMouseEnter,
  onMouseLeave
}) {
  const i18n = useI18n();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const secondaryNavigationId = (0, import_react255.useId)();
  const {
    location,
    onNavigationDismiss
  } = (0, import_react255.useContext)(NavigationContext);
  const navTextRef = (0, import_react255.useRef)(null);
  const [isTruncated, setIsTruncated] = (0, import_react255.useState)(false);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  (0, import_react255.useEffect)(() => {
    if (!isNavigationCollapsed && expanded) {
      onToggleExpandedState == null ? void 0 : onToggleExpandedState();
    }
  }, [expanded, isNavigationCollapsed, onToggleExpandedState]);
  useIsomorphicLayoutEffect(() => {
    const navTextNode = navTextRef.current;
    if (truncateText && navTextNode) {
      setIsTruncated(navTextNode.scrollHeight > navTextNode.clientHeight);
    }
  }, [truncateText]);
  const tabIndex = disabled ? -1 : 0;
  const hasNewChild = subNavigationItems.filter((subNavigationItem) => subNavigationItem.new).length > 0;
  const indicatorMarkup = hasNewChild ? import_react255.default.createElement("span", {
    className: styles107.Indicator
  }, import_react255.default.createElement(Indicator, {
    pulse: true
  })) : null;
  const matchState = matchStateForItem({
    url,
    matches: matches2,
    exactMatch,
    matchPaths,
    excludePaths
  }, location);
  const matchingSubNavigationItems = subNavigationItems.filter((item) => {
    const subMatchState = matchStateForItem(item, location);
    return subMatchState === MatchState.MatchForced || subMatchState === MatchState.MatchUrl || subMatchState === MatchState.MatchPaths;
  });
  const childIsActive = matchingSubNavigationItems.length > 0;
  const selected = selectedOverride == null ? matchState === MatchState.MatchForced || matchState === MatchState.MatchUrl || matchState === MatchState.MatchPaths : selectedOverride;
  const icon = polarisSummerEditions2023 && (selected || childIsActive) ? matchedItemIcon ?? baseIcon : baseIcon;
  const iconMarkup = icon ? import_react255.default.createElement("div", {
    className: classNames(styles107.Icon, shouldResizeIcon && styles107["Icon-resized"])
  }, import_react255.default.createElement(Icon, {
    source: icon
  })) : null;
  let badgeMarkup = null;
  if (isNew) {
    badgeMarkup = import_react255.default.createElement(Badge, {
      status: "new"
    }, i18n.translate("Polaris.Badge.STATUS_LABELS.new"));
  } else if (typeof badge === "string") {
    badgeMarkup = import_react255.default.createElement(Badge, {
      status: "new"
    }, badge);
  } else {
    badgeMarkup = badge;
  }
  const wrappedBadgeMarkup = badgeMarkup == null ? null : import_react255.default.createElement("div", {
    className: styles107.Badge
  }, badgeMarkup);
  const itemLabelMarkup = import_react255.default.createElement("span", {
    className: classNames(styles107.Text, truncateText && styles107["Text-truncated"]),
    ref: navTextRef
  }, label, indicatorMarkup);
  if (url == null) {
    const className2 = classNames(styles107.Item, disabled && styles107["Item-disabled"], selectedOverride && styles107["Item-selected"]);
    return import_react255.default.createElement("li", {
      className: styles107.ListItem
    }, import_react255.default.createElement("div", {
      className: styles107.ItemWrapper
    }, import_react255.default.createElement("div", {
      className: classNames(styles107.ItemInnerWrapper, disabled && styles107.ItemInnerDisabled, polarisSummerEditions2023 ? selectedOverride && styles107["ItemInnerWrapper-selected"] : void 0)
    }, import_react255.default.createElement("button", {
      type: "button",
      className: className2,
      disabled,
      "aria-disabled": disabled,
      "aria-label": accessibilityLabel,
      onClick: getClickHandler(onClick)
    }, iconMarkup, itemLabelMarkup, wrappedBadgeMarkup))));
  }
  if (secondaryAction && true) {
    console.warn("Deprecation: The `secondaryAction` prop on the `Navigation.Item` has been deprecated. Use `secondaryActions` instead.");
  }
  const actions = secondaryActions || secondaryAction && [secondaryAction];
  if (actions && actions.length > MAX_SECONDARY_ACTIONS) {
    actions.length = MAX_SECONDARY_ACTIONS;
    if (true) {
      console.warn(`secondaryActions must have a maximum of ${MAX_SECONDARY_ACTIONS} actions. Only the first ${MAX_SECONDARY_ACTIONS} actions will be rendered.`);
    }
  }
  const secondaryActionMarkup = (actions == null ? void 0 : actions.length) ? import_react255.default.createElement("span", {
    className: styles107.SecondaryActions
  }, actions.map((action) => import_react255.default.createElement(ItemSecondaryAction, Object.assign({
    key: action.accessibilityLabel
  }, action, {
    tabIndex,
    disabled
  })))) : null;
  const itemContentMarkup = import_react255.default.createElement(import_react255.default.Fragment, null, iconMarkup, itemLabelMarkup, secondaryActionMarkup ? null : wrappedBadgeMarkup);
  const outerContentMarkup = import_react255.default.createElement(import_react255.default.Fragment, null, secondaryActionMarkup ? wrappedBadgeMarkup : null);
  const showExpanded = selected || expanded || childIsActive;
  const canBeActive = subNavigationItems.length === 0 || !childIsActive;
  const itemClassName = classNames(styles107.Item, disabled && styles107["Item-disabled"], polarisSummerEditions2023 ? (selected || childIsActive) && styles107["Item-selected"] : selected && canBeActive && styles107["Item-selected"], showExpanded && styles107.subNavigationActive, childIsActive && styles107["Item-child-active"], showVerticalLine && polarisSummerEditions2023 && styles107["Item-line"], matches2 && polarisSummerEditions2023 && styles107["Item-line-pointer"], showVerticalHoverPointer && polarisSummerEditions2023 && styles107["Item-hover-pointer"]);
  let secondaryNavigationMarkup = null;
  if (subNavigationItems.length > 0) {
    const longestMatch = matchingSubNavigationItems.sort(({
      url: firstUrl
    }, {
      url: secondUrl
    }) => secondUrl.length - firstUrl.length)[0];
    secondaryNavigationMarkup = import_react255.default.createElement(SecondaryNavigation, {
      ItemComponent: Item11,
      icon,
      longestMatch,
      subNavigationItems,
      showExpanded,
      truncateText,
      secondaryNavigationId
    });
  }
  const className = classNames(styles107.ListItem, Boolean(actions && actions.length) && styles107["ListItem-hasAction"]);
  const itemLinkMarkup = () => {
    const linkMarkup = import_react255.default.createElement(UnstyledLink, Object.assign({
      url,
      className: itemClassName,
      external,
      tabIndex,
      "aria-disabled": disabled,
      "aria-label": accessibilityLabel,
      onClick: getClickHandler(onClick)
    }, normalizeAriaAttributes(secondaryNavigationId, subNavigationItems.length > 0, showExpanded)), itemContentMarkup);
    return isTruncated ? import_react255.default.createElement(Tooltip, {
      hoverDelay: TOOLTIP_HOVER_DELAY,
      content: label,
      preferredPosition: "above"
    }, linkMarkup) : linkMarkup;
  };
  return import_react255.default.createElement("li", {
    className,
    onMouseEnter: () => {
      onMouseEnter == null ? void 0 : onMouseEnter(label);
    },
    onMouseLeave
  }, import_react255.default.createElement("div", {
    className: styles107.ItemWrapper
  }, import_react255.default.createElement("div", {
    className: classNames(styles107.ItemInnerWrapper, polarisSummerEditions2023 ? selected && childIsActive && styles107["ItemInnerWrapper-open"] || selected && !childIsActive && styles107["ItemInnerWrapper-selected"] : selected && canBeActive && styles107["ItemInnerWrapper-selected"], displayActionsOnHover && styles107["ItemInnerWrapper-display-actions-on-hover"], disabled && styles107.ItemInnerDisabled)
  }, displayActionsOnHover && secondaryActionMarkup && wrappedBadgeMarkup ? import_react255.default.createElement("span", {
    className: styles107.ItemWithFloatingActions
  }, itemLinkMarkup(), secondaryActionMarkup) : import_react255.default.createElement(import_react255.default.Fragment, null, itemLinkMarkup(), secondaryActionMarkup), outerContentMarkup)), secondaryNavigationMarkup);
  function getClickHandler(onClick2) {
    return (event) => {
      const {
        currentTarget
      } = event;
      if (currentTarget.getAttribute("href") === location) {
        event.preventDefault();
      }
      if (subNavigationItems && subNavigationItems.length > 0 && isNavigationCollapsed) {
        event.preventDefault();
        onToggleExpandedState == null ? void 0 : onToggleExpandedState();
      } else if (onNavigationDismiss) {
        onNavigationDismiss();
        if (onClick2 && onClick2 !== onNavigationDismiss) {
          onClick2();
        }
        return;
      }
      if (onClick2) {
        onClick2();
      }
    };
  }
}
function ItemSecondaryAction({
  url,
  icon,
  accessibilityLabel,
  tooltip,
  onClick,
  disabled,
  tabIndex
}) {
  const markup = url ? import_react255.default.createElement(UnstyledLink, {
    external: true,
    url,
    className: styles107.SecondaryAction,
    tabIndex,
    "aria-disabled": disabled,
    "aria-label": accessibilityLabel,
    onClick
  }, import_react255.default.createElement(Icon, {
    source: icon
  })) : import_react255.default.createElement(UnstyledButton, {
    className: styles107.SecondaryAction,
    tabIndex,
    disabled,
    accessibilityLabel,
    onClick
  }, import_react255.default.createElement(Icon, {
    source: icon
  }));
  return tooltip ? import_react255.default.createElement(Tooltip, tooltip, " ", markup, " ") : markup;
}
function isNavigationItemActive(navigationItem, currentPath) {
  const matchState = matchStateForItem(navigationItem, currentPath);
  const matchingSubNavigationItems = navigationItem.subNavigationItems && navigationItem.subNavigationItems.filter((item) => {
    const subMatchState = matchStateForItem(item, currentPath);
    return subMatchState === MatchState.MatchForced || subMatchState === MatchState.MatchUrl || subMatchState === MatchState.MatchPaths;
  });
  const childIsActive = matchingSubNavigationItems && matchingSubNavigationItems.length > 0;
  const selected = matchState === MatchState.MatchForced || matchState === MatchState.MatchUrl || matchState === MatchState.MatchPaths;
  return selected || childIsActive;
}
function normalizePathname(pathname) {
  const barePathname = pathname.split("?")[0].split("#")[0];
  return barePathname.endsWith("/") ? barePathname : `${barePathname}/`;
}
function safeEqual(location, path) {
  return normalizePathname(location) === normalizePathname(path);
}
function safeStartsWith(location, path) {
  return normalizePathname(location).startsWith(normalizePathname(path));
}
function matchStateForItem({
  url,
  matches: matches2,
  exactMatch,
  matchPaths,
  excludePaths
}, location) {
  if (url == null) {
    return MatchState.NoMatch;
  }
  if (matches2) {
    return MatchState.MatchForced;
  }
  if (matches2 === false || excludePaths && excludePaths.some((path) => safeStartsWith(location, path))) {
    return MatchState.Excluded;
  }
  if (matchPaths && matchPaths.some((path) => safeStartsWith(location, path))) {
    return MatchState.MatchPaths;
  }
  const matchesUrl = exactMatch ? safeEqual(location, url) : safeStartsWith(location, url);
  return matchesUrl ? MatchState.MatchUrl : MatchState.NoMatch;
}
function normalizeAriaAttributes(controlId, hasSubMenu, expanded) {
  return hasSubMenu ? {
    "aria-expanded": expanded,
    "aria-controls": controlId
  } : void 0;
}

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Section/Section.js
function Section7({
  title,
  fill,
  action,
  items,
  rollup,
  separator
}) {
  const {
    value: expanded,
    toggle: toggleExpanded,
    setFalse: setExpandedFalse
  } = useToggle(false);
  const animationFrame = (0, import_react256.useRef)(null);
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const [expandedIndex, setExpandedIndex] = (0, import_react256.useState)();
  const handleClick = (onClick, hasSubNavItems) => {
    return () => {
      if (onClick) {
        onClick();
      }
      if (animationFrame.current) {
        cancelAnimationFrame(animationFrame.current);
      }
      if (!hasSubNavItems || !isNavigationCollapsed) {
        animationFrame.current = requestAnimationFrame(setExpandedFalse);
      }
    };
  };
  (0, import_react256.useEffect)(() => {
    return () => {
      animationFrame.current && cancelAnimationFrame(animationFrame.current);
    };
  });
  const className = classNames(styles107.Section, separator && styles107["Section-withSeparator"], fill && styles107["Section-fill"]);
  const buttonMarkup = action && import_react256.default.createElement("button", {
    type: "button",
    className: styles107.Action,
    "aria-label": action.accessibilityLabel,
    onClick: action.onClick
  }, import_react256.default.createElement(Icon, {
    source: action.icon
  }));
  const actionMarkup = action && (action.tooltip ? import_react256.default.createElement(Tooltip, action.tooltip, buttonMarkup) : buttonMarkup);
  const sectionHeadingMarkup = title && import_react256.default.createElement("li", {
    className: styles107.SectionHeading
  }, import_react256.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    fontWeight: "medium",
    color: "subdued"
  }, title), actionMarkup);
  const itemsMarkup = items.map((item, index) => {
    const {
      onClick,
      label,
      subNavigationItems,
      ...rest
    } = item;
    const hasSubNavItems = subNavigationItems != null && subNavigationItems.length > 0;
    const handleToggleExpandedState = () => {
      if (expandedIndex === index) {
        setExpandedIndex(-1);
      } else {
        setExpandedIndex(index);
      }
    };
    return import_react256.default.createElement(Item11, Object.assign({
      key: label
    }, rest, {
      label,
      subNavigationItems,
      onClick: handleClick(onClick, hasSubNavItems),
      onToggleExpandedState: handleToggleExpandedState,
      expanded: expandedIndex === index
    }));
  });
  const toggleClassName = classNames(styles107.Item, styles107.RollupToggle);
  const ariaLabel = rollup && (expanded ? rollup.hide : rollup.view);
  const toggleRollup = rollup && items.length > rollup.after && import_react256.default.createElement("div", {
    className: styles107.ListItem,
    key: "List Item"
  }, import_react256.default.createElement("div", {
    className: styles107.ItemWrapper
  }, import_react256.default.createElement("div", {
    className: styles107.ItemInnerWrapper
  }, import_react256.default.createElement("button", {
    type: "button",
    className: toggleClassName,
    onClick: toggleExpanded,
    "aria-label": ariaLabel
  }, import_react256.default.createElement("span", {
    className: styles107.Icon
  }, import_react256.default.createElement(Icon, {
    source: SvgHorizontalDotsMinor
  }))))));
  const activeItemIndex = items.findIndex((item) => {
    if (!rollup) {
      return false;
    }
    return rollup.activePath === item.url || item.url && rollup.activePath.startsWith(item.url) || (item.subNavigationItems ? item.subNavigationItems.some(({
      url: itemUrl
    }) => rollup.activePath.startsWith(itemUrl)) : false);
  });
  const sectionItems = rollup ? itemsMarkup.slice(0, rollup.after) : itemsMarkup;
  const additionalItems = rollup ? itemsMarkup.slice(rollup.after) : [];
  if (rollup && activeItemIndex !== -1 && activeItemIndex > rollup.after - 1) {
    sectionItems.push(...additionalItems.splice(activeItemIndex - rollup.after, 1));
  }
  const additionalItemsId = (0, import_react256.useId)();
  const activeItemsMarkup = rollup && additionalItems.length > 0 && import_react256.default.createElement("li", {
    className: styles107.RollupSection
  }, import_react256.default.createElement(Collapsible, {
    id: additionalItemsId,
    open: expanded
  }, import_react256.default.createElement("ul", {
    className: styles107.List
  }, additionalItems)), toggleRollup);
  return import_react256.default.createElement("ul", {
    className
  }, sectionHeadingMarkup, sectionItems, activeItemsMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.js
var Navigation2 = function Navigation3({
  children: children2,
  contextControl,
  location,
  onDismiss,
  ariaLabelledBy,
  logoSuffix
}) {
  const {
    logo
  } = useFrame();
  const width2 = getWidth(logo, 104);
  const logoMarkup = logo ? import_react257.default.createElement("div", {
    className: classNames(styles107.LogoContainer, logoSuffix && styles107.hasLogoSuffix)
  }, import_react257.default.createElement(UnstyledLink, {
    url: logo.url || "",
    className: styles107.LogoLink,
    style: {
      width: width2
    }
  }, import_react257.default.createElement(Image, {
    source: logo.topBarSource || "",
    alt: logo.accessibilityLabel || "",
    className: styles107.Logo,
    style: {
      width: width2
    }
  })), logoSuffix) : null;
  const mediaMarkup = contextControl ? import_react257.default.createElement("div", {
    className: styles107.ContextControl
  }, contextControl) : logoMarkup;
  const context = (0, import_react257.useMemo)(() => ({
    location,
    onNavigationDismiss: onDismiss
  }), [location, onDismiss]);
  return import_react257.default.createElement(NavigationContext.Provider, {
    value: context
  }, import_react257.default.createElement(WithinContentContext.Provider, {
    value: true
  }, import_react257.default.createElement("nav", {
    className: styles107.Navigation,
    "aria-labelledby": ariaLabelledBy
  }, mediaMarkup, import_react257.default.createElement(Scrollable, {
    className: styles107.PrimaryNavigation
  }, children2))));
};
Navigation2.Item = Item11;
Navigation2.Section = Section7;

// node_modules/@shopify/polaris/build/esm/components/OptionList/OptionList.js
var import_react260 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/arrays.js
function arraysAreEqual(firstArray, secondArray, comparator) {
  if (firstArray.length !== secondArray.length) {
    return false;
  }
  return firstArray.every((firstItem, index) => {
    const secondItem = secondArray[index];
    if (comparator != null) {
      return comparator(firstItem, secondItem);
    }
    return firstItem === secondItem;
  });
}

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.js
var import_react259 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.scss.js
var styles108 = {
  "Option": "Polaris-OptionList-Option",
  "SingleSelectOption": "Polaris-OptionList-Option__SingleSelectOption",
  "focused": "Polaris-OptionList-Option--focused",
  "active": "Polaris-OptionList-Option--active",
  "select": "Polaris-OptionList-Option--select",
  "disabled": "Polaris-OptionList-Option--disabled",
  "Media": "Polaris-OptionList-Option__Media",
  "Label": "Polaris-OptionList-Option__Label",
  "MultiSelectOption": "Polaris-OptionList-Option__MultiSelectOption",
  "CheckboxLabel": "Polaris-OptionList-Option__CheckboxLabel",
  "Checkbox": "Polaris-OptionList-Option__Checkbox",
  "verticalAlignTop": "Polaris-OptionList-Option--verticalAlignTop",
  "verticalAlignCenter": "Polaris-OptionList-Option--verticalAlignCenter",
  "verticalAlignBottom": "Polaris-OptionList-Option--verticalAlignBottom",
  "Icon": "Polaris-OptionList-Option__Icon"
};

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Checkbox/Checkbox.js
var import_react258 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Checkbox/Checkbox.scss.js
var styles109 = {
  "Checkbox": "Polaris-OptionList-Checkbox",
  "active": "Polaris-OptionList-Checkbox--active",
  "Backdrop": "Polaris-OptionList-Checkbox__Backdrop",
  "Input": "Polaris-OptionList-Checkbox__Input",
  "Input-indeterminate": "Polaris-OptionList-Checkbox__Input--indeterminate",
  "Icon": "Polaris-OptionList-Checkbox__Icon",
  "hover": "Polaris-OptionList-Checkbox--hover"
};

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Checkbox/Checkbox.js
function Checkbox5({
  id: idProp,
  checked = false,
  disabled,
  active,
  onChange,
  name,
  value,
  role
}) {
  const uniqId = (0, import_react258.useId)();
  const id = idProp ?? uniqId;
  const className = classNames(styles109.Checkbox, active && styles109.active);
  const inputClassName = classNames(styles109.Input);
  return import_react258.default.createElement("div", {
    className
  }, import_react258.default.createElement("input", {
    id,
    name,
    value,
    type: "checkbox",
    checked,
    disabled,
    className: inputClassName,
    "aria-checked": checked,
    onChange,
    role
  }), import_react258.default.createElement("div", {
    className: styles109.Backdrop
  }), import_react258.default.createElement("div", {
    className: styles109.Icon
  }, import_react258.default.createElement(Icon, {
    source: SvgTickSmallMinor
  })));
}

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.js
function Option3({
  label,
  value,
  id,
  select,
  active,
  allowMultiple,
  disabled,
  role,
  media,
  onClick,
  section,
  index,
  verticalAlign,
  onPointerEnter,
  onFocus
}) {
  const {
    value: focused,
    toggle: toggleFocused
  } = useToggle(false);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const handleClick = (0, import_react259.useCallback)(() => {
    if (disabled) {
      return;
    }
    onClick(section, index);
  }, [disabled, index, onClick, section]);
  const handlePointerEnter = (0, import_react259.useCallback)(() => {
    if (disabled) {
      return;
    }
    onPointerEnter(section, index);
  }, [disabled, onPointerEnter, section, index]);
  const handleFocus = (0, import_react259.useCallback)(() => {
    toggleFocused();
    onFocus(section, index);
  }, [toggleFocused, onFocus, section, index]);
  const mediaMarkup = media ? import_react259.default.createElement("div", {
    className: styles108.Media
  }, media) : null;
  const singleSelectClassName = classNames(styles108.SingleSelectOption, focused && styles108.focused, disabled && styles108.disabled, select && styles108.select, active && styles108.active, verticalAlign && styles108[variationName("verticalAlign", verticalAlign)]);
  const multiSelectClassName = classNames(styles108.Label, disabled && styles108.disabled, active && styles108.active, select && styles108.select, verticalAlign && styles108[variationName("verticalAlign", verticalAlign)], polarisSummerEditions2023 && allowMultiple && styles108.CheckboxLabel, polarisSummerEditions2023 && allowMultiple && styles108.MultiSelectOption);
  const checkBoxRole = role === "option" ? "presentation" : void 0;
  const optionMarkup = allowMultiple ? import_react259.default.createElement("label", {
    htmlFor: id,
    className: multiSelectClassName
  }, import_react259.default.createElement("div", {
    className: styles108.Checkbox
  }, polarisSummerEditions2023 ? import_react259.default.createElement(Checkbox, {
    id,
    label: "",
    ariaDescribedBy: `${id}-label`,
    value,
    checked: select,
    disabled,
    onChange: handleClick
  }) : import_react259.default.createElement(Checkbox5, {
    id,
    value,
    checked: select,
    active,
    disabled,
    onChange: handleClick,
    role: checkBoxRole
  })), mediaMarkup, polarisSummerEditions2023 ? import_react259.default.createElement("span", {
    id: `${id}-label`
  }, label) : label) : import_react259.default.createElement("button", {
    id,
    type: "button",
    className: singleSelectClassName,
    onClick: handleClick,
    disabled,
    onFocus: handleFocus,
    onBlur: toggleFocused,
    "aria-pressed": polarisSummerEditions2023 ? active || select : active
  }, polarisSummerEditions2023 ? import_react259.default.createElement(import_react259.default.Fragment, null, import_react259.default.createElement(HorizontalStack, {
    wrap: false,
    blockAlign: verticalAlignToBlockAlign(verticalAlign)
  }, mediaMarkup, label), (select || active) && import_react259.default.createElement("span", {
    className: styles108.Icon
  }, import_react259.default.createElement(Icon, {
    source: SvgTickMinor
  }))) : import_react259.default.createElement(import_react259.default.Fragment, null, mediaMarkup, label));
  const scrollMarkup = active ? import_react259.default.createElement(Scrollable.ScrollTo, null) : null;
  return import_react259.default.createElement("li", {
    key: id,
    className: styles108.Option,
    tabIndex: -1,
    onPointerEnter: handlePointerEnter
  }, scrollMarkup, optionMarkup);
}
function verticalAlignToBlockAlign(verticalAlign) {
  switch (verticalAlign) {
    case "top":
      return "start";
    case "center":
      return "center";
    case "bottom":
      return "end";
    default:
      return "start";
  }
}

// node_modules/@shopify/polaris/build/esm/components/OptionList/OptionList.js
function OptionList({
  options,
  sections,
  title,
  selected,
  allowMultiple,
  role,
  optionRole,
  verticalAlign,
  onChange,
  id: idProp,
  onPointerEnterOption,
  onFocusOption
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const [normalizedOptions, setNormalizedOptions] = (0, import_react260.useState)(createNormalizedOptions(options, sections, title));
  const uniqId = (0, import_react260.useId)();
  const id = idProp ?? uniqId;
  useDeepEffect(() => {
    setNormalizedOptions(createNormalizedOptions(options || [], sections || [], title));
  }, [options, sections, title], optionArraysAreEqual);
  const handleClick = (0, import_react260.useCallback)((sectionIndex, optionIndex) => {
    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
    const foundIndex = selected.indexOf(selectedValue);
    if (allowMultiple) {
      const newSelection = foundIndex === -1 ? [selectedValue, ...selected] : [...selected.slice(0, foundIndex), ...selected.slice(foundIndex + 1, selected.length)];
      onChange(newSelection);
      return;
    }
    onChange([selectedValue]);
  }, [normalizedOptions, selected, allowMultiple, onChange]);
  const handlePointerEnter = (0, import_react260.useCallback)((sectionIndex, optionIndex) => {
    if (!onPointerEnterOption)
      return;
    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
    onPointerEnterOption(selectedValue);
  }, [normalizedOptions, onPointerEnterOption]);
  const handleFocus = (0, import_react260.useCallback)((sectionIndex, optionIndex) => {
    if (!onFocusOption)
      return;
    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
    onFocusOption(selectedValue);
  }, [normalizedOptions, onFocusOption]);
  const optionsExist = normalizedOptions.length > 0;
  const optionsMarkup = optionsExist ? normalizedOptions.map(({
    title: title2,
    options: options2
  }, sectionIndex) => {
    const isFirstOption = sectionIndex === 0;
    const sectionPaddingBlockStart = polarisSummerEditions2023 ? "300" : "400";
    const firstOptionBlockStartPadding = polarisSummerEditions2023 ? "050" : "200";
    const titleLevel = isFirstOption ? "h2" : "h3";
    const titleMarkup = title2 ? import_react260.default.createElement(Box, {
      paddingBlockStart: isFirstOption ? firstOptionBlockStartPadding : sectionPaddingBlockStart,
      paddingInlineStart: polarisSummerEditions2023 ? "150" : "200",
      paddingBlockEnd: polarisSummerEditions2023 ? "100" : "200",
      paddingInlineEnd: polarisSummerEditions2023 ? "150" : "200",
      borderColor: "border-subdued",
      borderBlockStartWidth: !isFirstOption && !polarisSummerEditions2023 ? "1" : void 0
    }, import_react260.default.createElement(Text, {
      as: polarisSummerEditions2023 ? titleLevel : "p",
      variant: "headingXs"
    }, title2)) : null;
    const optionsMarkup2 = options2 && options2.map((option2, optionIndex) => {
      const isSelected2 = selected.includes(option2.value);
      const optionId = option2.id || `${id}-${sectionIndex}-${optionIndex}`;
      return import_react260.default.createElement(Option3, Object.assign({
        key: optionId
      }, option2, {
        id: optionId,
        section: sectionIndex,
        index: optionIndex,
        onClick: handleClick,
        select: isSelected2,
        allowMultiple,
        verticalAlign,
        role: optionRole,
        onPointerEnter: handlePointerEnter,
        onFocus: handleFocus
      }));
    });
    const option = import_react260.default.createElement(Bleed, {
      marginBlockStart: title2 || polarisSummerEditions2023 ? void 0 : "050"
    }, import_react260.default.createElement(Box, {
      as: "ul",
      id: `${id}-${sectionIndex}`,
      role
    }, optionsMarkup2));
    const blockStartPadding = isFirstOption ? (
      // eslint-disable-next-line no-nested-ternary
      polarisSummerEditions2023 ? title2 ? "100" : "0" : void 0
    ) : (
      // eslint-disable-next-line no-nested-ternary
      polarisSummerEditions2023 ? title2 ? "050" : "0" : "200"
    );
    return import_react260.default.createElement(Box, {
      key: title2 || `noTitle-${sectionIndex}`,
      as: "li",
      paddingBlockStart: blockStartPadding
    }, polarisSummerEditions2023 ? import_react260.default.createElement(VerticalStack, {
      gap: isFirstOption && sections ? void 0 : "0"
    }, titleMarkup, option) : import_react260.default.createElement(import_react260.default.Fragment, null, titleMarkup, option));
  }) : null;
  return import_react260.default.createElement(Box, {
    as: "ul",
    role,
    padding: polarisSummerEditions2023 ? "150" : "200"
  }, optionsMarkup);
}
function createNormalizedOptions(options, sections, title) {
  if (options == null) {
    const section = {
      options: [],
      title
    };
    return sections == null ? [] : [section, ...sections];
  }
  if (sections == null) {
    return [{
      title,
      options
    }];
  }
  return [{
    title,
    options
  }, ...sections];
}
function optionArraysAreEqual(firstArray, secondArray) {
  if (isSection(firstArray) && isSection(secondArray)) {
    return arraysAreEqual(firstArray, secondArray, testSectionsPropEquality);
  }
  return arraysAreEqual(firstArray, secondArray);
}
function testSectionsPropEquality(previousSection, currentSection) {
  const {
    options: previousOptions
  } = previousSection;
  const {
    options: currentOptions
  } = currentSection;
  const optionsAreEqual = arraysAreEqual(previousOptions, currentOptions);
  const titlesAreEqual = previousSection.title === currentSection.title;
  return optionsAreEqual && titlesAreEqual;
}

// node_modules/@shopify/polaris/build/esm/components/Page/Page.js
var import_react266 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/is-interface.js
var import_react261 = __toESM(require_react());
function isInterface(x) {
  return !(0, import_react261.isValidElement)(x) && x !== void 0;
}

// node_modules/@shopify/polaris/build/esm/utilities/is-react-element.js
var import_react262 = __toESM(require_react());
function isReactElement(x) {
  return (0, import_react262.isValidElement)(x) && x !== void 0;
}

// node_modules/@shopify/polaris/build/esm/components/Page/Page.scss.js
var styles110 = {
  "Page": "Polaris-Page",
  "fullWidth": "Polaris-Page--fullWidth",
  "narrowWidth": "Polaris-Page--narrowWidth",
  "Content": "Polaris-Page__Content",
  "divider": "Polaris-Page--divider"
};

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.js
var import_react265 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.scss.js
var styles111 = {
  "TitleWrapper": "Polaris-Page-Header__TitleWrapper",
  "BreadcrumbWrapper": "Polaris-Page-Header__BreadcrumbWrapper",
  "PaginationWrapper": "Polaris-Page-Header__PaginationWrapper",
  "PrimaryActionWrapper": "Polaris-Page-Header__PrimaryActionWrapper",
  "Row": "Polaris-Page-Header__Row",
  "mobileView": "Polaris-Page-Header--mobileView",
  "RightAlign": "Polaris-Page-Header__RightAlign",
  "noBreadcrumbs": "Polaris-Page-Header--noBreadcrumbs",
  "AdditionalMetaData": "Polaris-Page-Header__AdditionalMetaData",
  "Actions": "Polaris-Page-Header__Actions",
  "longTitle": "Polaris-Page-Header--longTitle",
  "mediumTitle": "Polaris-Page-Header--mediumTitle",
  "isSingleRow": "Polaris-Page-Header--isSingleRow"
};

// node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.js
var import_react263 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/is-input-focused.js
var EditableTarget;
(function(EditableTarget2) {
  EditableTarget2["Input"] = "INPUT";
  EditableTarget2["Textarea"] = "TEXTAREA";
  EditableTarget2["Select"] = "SELECT";
  EditableTarget2["ContentEditable"] = "contenteditable";
})(EditableTarget || (EditableTarget = {}));
function isInputFocused() {
  if (document == null || document.activeElement == null) {
    return false;
  }
  const {
    tagName
  } = document.activeElement;
  return tagName === EditableTarget.Input || tagName === EditableTarget.Textarea || tagName === EditableTarget.Select || document.activeElement.hasAttribute(EditableTarget.ContentEditable);
}

// node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.scss.js
var styles112 = {
  "Pagination": "Polaris-Pagination",
  "table": "Polaris-Pagination--table"
};

// node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.js
function Pagination({
  hasNext,
  hasPrevious,
  nextURL,
  previousURL,
  onNext,
  onPrevious,
  nextTooltip,
  previousTooltip,
  nextKeys,
  previousKeys,
  accessibilityLabel,
  accessibilityLabels,
  label,
  type = "page"
}) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const node = (0, import_react263.createRef)();
  const navLabel = accessibilityLabel || i18n.translate("Polaris.Pagination.pagination");
  const previousLabel = (accessibilityLabels == null ? void 0 : accessibilityLabels.previous) || i18n.translate("Polaris.Pagination.previous");
  const nextLabel = (accessibilityLabels == null ? void 0 : accessibilityLabels.next) || i18n.translate("Polaris.Pagination.next");
  const prev = import_react263.default.createElement(Button, {
    outline: true,
    icon: SvgChevronLeftMinor,
    accessibilityLabel: previousLabel,
    url: previousURL,
    onClick: onPrevious,
    disabled: !hasPrevious,
    id: "previousURL"
  });
  const constructedPrevious = previousTooltip && hasPrevious ? import_react263.default.createElement(Tooltip, {
    activatorWrapper: "span",
    content: previousTooltip,
    preferredPosition: "below"
  }, prev) : prev;
  const next = import_react263.default.createElement(Button, {
    outline: true,
    icon: SvgChevronRightMinor,
    accessibilityLabel: nextLabel,
    url: nextURL,
    onClick: onNext,
    disabled: !hasNext,
    id: "nextURL"
  });
  const constructedNext = nextTooltip && hasNext ? import_react263.default.createElement(Tooltip, {
    activatorWrapper: "span",
    content: nextTooltip,
    preferredPosition: "below"
  }, next) : next;
  const previousHandler = onPrevious || noop18;
  const previousButtonEvents = previousKeys && (previousURL || onPrevious) && hasPrevious && previousKeys.map((key) => import_react263.default.createElement(KeypressListener, {
    key,
    keyCode: key,
    handler: previousURL ? handleCallback(clickPaginationLink("previousURL", node)) : handleCallback(previousHandler)
  }));
  const nextHandler = onNext || noop18;
  const nextButtonEvents = nextKeys && (nextURL || onNext) && hasNext && nextKeys.map((key) => import_react263.default.createElement(KeypressListener, {
    key,
    keyCode: key,
    handler: nextURL ? handleCallback(clickPaginationLink("nextURL", node)) : handleCallback(nextHandler)
  }));
  if (type === "table") {
    const labelMarkup2 = label ? import_react263.default.createElement(Text, {
      as: "span",
      variant: "bodySm",
      fontWeight: "medium"
    }, label) : null;
    return import_react263.default.createElement("nav", {
      "aria-label": navLabel,
      ref: node,
      className: classNames(styles112.Pagination, styles112.table)
    }, previousButtonEvents, nextButtonEvents, import_react263.default.createElement(Box, {
      background: "bg-subdued",
      paddingBlockStart: "150",
      paddingBlockEnd: "150",
      paddingInlineStart: "300",
      paddingInlineEnd: "200"
    }, import_react263.default.createElement(HorizontalStack, {
      align: labelMarkup2 ? "space-between" : "end",
      blockAlign: "center"
    }, labelMarkup2, import_react263.default.createElement(ButtonGroup, {
      segmented: true
    }, constructedPrevious, constructedNext))));
  }
  const labelTextMarkup = hasNext && hasPrevious ? import_react263.default.createElement("span", null, label) : import_react263.default.createElement(Text, {
    color: "subdued",
    as: "span"
  }, label);
  const labelMarkup = label ? import_react263.default.createElement(Box, {
    padding: polarisSummerEditions2023 ? "300" : void 0,
    paddingBlockStart: "0",
    paddingBlockEnd: "0"
  }, import_react263.default.createElement("div", {
    "aria-live": "polite"
  }, labelTextMarkup)) : null;
  return import_react263.default.createElement("nav", {
    "aria-label": navLabel,
    ref: node,
    className: styles112.Pagination
  }, previousButtonEvents, nextButtonEvents, import_react263.default.createElement(ButtonGroup, {
    segmented: !label || polarisSummerEditions2023
  }, constructedPrevious, labelMarkup, constructedNext));
}
function clickPaginationLink(id, node) {
  return () => {
    if (node.current == null) {
      return;
    }
    const link = node.current.querySelector(`#${id}`);
    if (link) {
      link.click();
    }
  };
}
function handleCallback(fn) {
  return () => {
    if (isInputFocused()) {
      return;
    }
    fn();
  };
}
function noop18() {
}

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.js
var import_react264 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.scss.js
var styles113 = {
  "Title": "Polaris-Header-Title",
  "TitleWithSubtitle": "Polaris-Header-Title__TitleWithSubtitle",
  "SubTitle": "Polaris-Header-Title__SubTitle",
  "SubtitleCompact": "Polaris-Header-Title__SubtitleCompact",
  "TitleWithMetadataWrapper": "Polaris-Header-Title__TitleWithMetadataWrapper",
  "TitleMetadata": "Polaris-Header-Title__TitleMetadata"
};

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.js
function Title({
  title,
  subtitle,
  titleMetadata,
  compactTitle
}) {
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const className = classNames(styles113.Title, subtitle && styles113.TitleWithSubtitle);
  const titleMarkup = title ? import_react264.default.createElement("h1", {
    className
  }, title) : null;
  const titleMetadataMarkup = titleMetadata ? import_react264.default.createElement("div", {
    className: styles113.TitleMetadata
  }, titleMetadata) : null;
  const wrappedTitleMarkup = titleMetadata ? import_react264.default.createElement("div", {
    className: styles113.TitleWithMetadataWrapper
  }, titleMarkup, titleMetadataMarkup) : titleMarkup;
  const subtitleMarkup = subtitle ? import_react264.default.createElement("div", {
    className: classNames(styles113.SubTitle, compactTitle && styles113.SubtitleCompact)
  }, import_react264.default.createElement(Text, {
    as: "p",
    variant: polarisSummerEditions2023 ? "bodySm" : void 0
  }, subtitle)) : null;
  return import_react264.default.createElement(import_react264.default.Fragment, null, wrappedTitleMarkup, subtitleMarkup);
}

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.js
var SHORT_TITLE = 20;
var REALLY_SHORT_TITLE = 8;
var LONG_TITLE = 34;
function Header4({
  title,
  subtitle,
  titleMetadata,
  additionalMetadata,
  titleHidden = false,
  primaryAction,
  pagination,
  filterActions,
  additionalNavigation,
  backAction,
  secondaryActions = [],
  actionGroups = [],
  compactTitle = false,
  onActionRollup
}) {
  const i18n = useI18n();
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  if (additionalNavigation && true) {
    console.warn("Deprecation: The `additionalNavigation` on Page is deprecated and will be removed in the next major version.");
  }
  const isSingleRow = !primaryAction && !pagination && (isInterface(secondaryActions) && !secondaryActions.length || isReactElement(secondaryActions)) && !actionGroups.length;
  const breadcrumbMarkup = backAction ? import_react265.default.createElement("div", {
    className: styles111.BreadcrumbWrapper
  }, import_react265.default.createElement(Box, {
    maxWidth: "100%",
    paddingInlineEnd: polarisSummerEditions2023 ? "100" : "400",
    printHidden: true
  }, import_react265.default.createElement(Breadcrumbs, {
    backAction
  }))) : null;
  const paginationMarkup = pagination && !isNavigationCollapsed ? import_react265.default.createElement("div", {
    className: styles111.PaginationWrapper
  }, import_react265.default.createElement(Box, {
    printHidden: true
  }, import_react265.default.createElement(Pagination, Object.assign({}, pagination, {
    hasPrevious: pagination.hasPrevious,
    hasNext: pagination.hasNext
  })))) : null;
  const additionalNavigationMarkup = additionalNavigation ? import_react265.default.createElement(HorizontalStack, {
    gap: "400",
    align: "end"
  }, import_react265.default.createElement(Box, {
    printHidden: true
  }, additionalNavigation)) : null;
  const pageTitleMarkup = import_react265.default.createElement("div", {
    className: styles111.TitleWrapper
  }, import_react265.default.createElement(Title, {
    title,
    subtitle,
    titleMetadata,
    compactTitle
  }));
  const primaryActionMarkup = primaryAction ? import_react265.default.createElement(PrimaryActionMarkup, {
    primaryAction
  }) : null;
  let actionMenuMarkup = null;
  if (isInterface(secondaryActions) && (secondaryActions.length > 0 || hasGroupsWithActions(actionGroups))) {
    actionMenuMarkup = import_react265.default.createElement(ActionMenu, {
      actions: secondaryActions,
      groups: actionGroups,
      rollup: isNavigationCollapsed,
      rollupActionsLabel: title ? i18n.translate("Polaris.Page.Header.rollupActionsLabel", {
        title
      }) : void 0,
      onActionRollup
    });
  } else if (isReactElement(secondaryActions)) {
    actionMenuMarkup = import_react265.default.createElement(import_react265.default.Fragment, null, secondaryActions);
  }
  const navigationMarkup = breadcrumbMarkup || paginationMarkup || additionalNavigationMarkup ? import_react265.default.createElement(Box, {
    printHidden: true,
    paddingBlockEnd: "100",
    paddingInlineEnd: actionMenuMarkup && isNavigationCollapsed ? "1000" : void 0
  }, import_react265.default.createElement(HorizontalStack, {
    gap: "400",
    align: "space-between",
    blockAlign: "center"
  }, breadcrumbMarkup, additionalNavigationMarkup, paginationMarkup)) : null;
  const additionalMetadataMarkup = additionalMetadata ? import_react265.default.createElement("div", {
    className: styles111.AdditionalMetaData
  }, import_react265.default.createElement(Text, {
    color: "subdued",
    as: "span",
    variant: polarisSummerEditions2023 ? "bodySm" : void 0
  }, additionalMetadata)) : null;
  const headerClassNames = classNames(isSingleRow && styles111.isSingleRow, navigationMarkup && styles111.hasNavigation, actionMenuMarkup && styles111.hasActionMenu, isNavigationCollapsed && styles111.mobileView, !backAction && styles111.noBreadcrumbs, title && title.length < LONG_TITLE && styles111.mediumTitle, title && title.length > LONG_TITLE && styles111.longTitle);
  const {
    slot1,
    slot2,
    slot3,
    slot4,
    slot5,
    slot6
  } = determineLayout({
    actionMenuMarkup,
    additionalMetadataMarkup,
    additionalNavigationMarkup,
    breadcrumbMarkup,
    isNavigationCollapsed,
    pageTitleMarkup,
    paginationMarkup,
    primaryActionMarkup,
    title
  });
  return import_react265.default.createElement(Box, {
    position: "relative",
    paddingBlockStart: {
      xs: "400",
      md: polarisSummerEditions2023 ? "600" : "500"
    },
    paddingBlockEnd: {
      xs: "400",
      md: polarisSummerEditions2023 ? "600" : "500"
    },
    paddingInlineStart: {
      xs: "400",
      sm: "0"
    },
    paddingInlineEnd: {
      xs: "400",
      sm: "0"
    },
    visuallyHidden: titleHidden
  }, import_react265.default.createElement("div", {
    className: headerClassNames
  }, import_react265.default.createElement(FilterActionsProvider, {
    filterActions: Boolean(filterActions)
  }, import_react265.default.createElement(ConditionalRender, {
    condition: [slot1, slot2, slot3, slot4].some(notNull)
  }, import_react265.default.createElement("div", {
    className: styles111.Row
  }, slot1, slot2, import_react265.default.createElement(ConditionalRender, {
    condition: [slot3, slot4].some(notNull)
  }, import_react265.default.createElement("div", {
    className: styles111.RightAlign
  }, import_react265.default.createElement(ConditionalWrapper, {
    condition: [slot3, slot4].every(notNull),
    wrapper: (children2) => import_react265.default.createElement("div", {
      className: styles111.Actions
    }, children2)
  }, slot3, slot4))))), import_react265.default.createElement(ConditionalRender, {
    condition: [slot5, slot6].some(notNull)
  }, import_react265.default.createElement("div", {
    className: styles111.Row
  }, import_react265.default.createElement(HorizontalStack, {
    gap: "400"
  }, slot5), import_react265.default.createElement(ConditionalRender, {
    condition: slot6 != null
  }, import_react265.default.createElement("div", {
    className: styles111.RightAlign
  }, slot6)))))));
}
function PrimaryActionMarkup({
  primaryAction
}) {
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  let actionMarkup;
  if (isInterface(primaryAction)) {
    const {
      primary: isPrimary,
      helpText
    } = primaryAction;
    const primary = isPrimary === void 0 ? true : isPrimary;
    const content = buttonFrom(shouldShowIconOnly(isNavigationCollapsed, primaryAction), {
      primary
    });
    actionMarkup = helpText ? import_react265.default.createElement(Tooltip, {
      content: helpText
    }, content) : content;
  } else {
    actionMarkup = primaryAction;
  }
  return import_react265.default.createElement("div", {
    className: styles111.PrimaryActionWrapper
  }, import_react265.default.createElement(Box, {
    printHidden: true
  }, actionMarkup));
}
function shouldShowIconOnly(isMobile, action) {
  let {
    content,
    accessibilityLabel,
    icon
  } = action;
  if (icon == null)
    return {
      ...action,
      icon: void 0
    };
  if (isMobile) {
    accessibilityLabel = accessibilityLabel || content;
    content = void 0;
  } else {
    icon = void 0;
  }
  return {
    ...action,
    content,
    accessibilityLabel,
    icon
  };
}
function notNull(value) {
  return value != null;
}
function determineLayout({
  actionMenuMarkup,
  additionalMetadataMarkup,
  additionalNavigationMarkup,
  breadcrumbMarkup,
  isNavigationCollapsed,
  pageTitleMarkup,
  paginationMarkup,
  primaryActionMarkup,
  title
}) {
  const layouts = {
    mobileCompact: {
      slots: {
        slot1: null,
        slot2: pageTitleMarkup,
        slot3: actionMenuMarkup,
        slot4: primaryActionMarkup,
        slot5: additionalMetadataMarkup,
        slot6: additionalNavigationMarkup
      },
      condition: isNavigationCollapsed && breadcrumbMarkup == null && title != null && title.length <= REALLY_SHORT_TITLE
    },
    mobileDefault: {
      slots: {
        slot1: breadcrumbMarkup,
        slot2: pageTitleMarkup,
        slot3: actionMenuMarkup,
        slot4: primaryActionMarkup,
        slot5: additionalMetadataMarkup,
        slot6: additionalNavigationMarkup
      },
      condition: isNavigationCollapsed
    },
    desktopCompact: {
      slots: {
        slot1: breadcrumbMarkup,
        slot2: pageTitleMarkup,
        slot3: actionMenuMarkup,
        slot4: primaryActionMarkup,
        slot5: additionalMetadataMarkup,
        slot6: additionalNavigationMarkup
      },
      condition: !isNavigationCollapsed && paginationMarkup == null && actionMenuMarkup == null && title != null && title.length <= SHORT_TITLE
    },
    desktopDefault: {
      slots: {
        slot1: breadcrumbMarkup,
        slot2: pageTitleMarkup,
        slot3: import_react265.default.createElement(import_react265.default.Fragment, null, actionMenuMarkup, primaryActionMarkup),
        slot4: paginationMarkup,
        slot5: additionalMetadataMarkup,
        slot6: additionalNavigationMarkup
      },
      condition: !isNavigationCollapsed
    }
  };
  const layout = Object.values(layouts).find((layout2) => layout2.condition) || layouts.desktopDefault;
  return layout.slots;
}

// node_modules/@shopify/polaris/build/esm/components/Page/Page.js
function Page({
  children: children2,
  fullWidth,
  narrowWidth,
  divider,
  ...rest
}) {
  const pageClassName = classNames(styles110.Page, fullWidth && styles110.fullWidth, narrowWidth && styles110.narrowWidth);
  const hasHeaderContent = rest.title != null && rest.title !== "" || rest.subtitle != null && rest.subtitle !== "" || rest.primaryAction != null || rest.secondaryActions != null && (isInterface(rest.secondaryActions) && rest.secondaryActions.length > 0 || isReactElement(rest.secondaryActions)) || rest.actionGroups != null && rest.actionGroups.length > 0 || rest.backAction != null;
  const contentClassName = classNames(!hasHeaderContent && styles110.Content, divider && hasHeaderContent && styles110.divider);
  const headerMarkup = hasHeaderContent ? import_react266.default.createElement(Header4, Object.assign({
    filterActions: true
  }, rest)) : null;
  return import_react266.default.createElement("div", {
    className: pageClassName
  }, headerMarkup, import_react266.default.createElement("div", {
    className: contentClassName
  }, children2));
}

// node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.js
var import_react267 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.scss.js
var styles114 = {
  "PageActions": "Polaris-PageActions"
};

// node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.js
function PageActions({
  primaryAction,
  secondaryActions
}) {
  let primaryActionMarkup = null;
  if (isReactElement(primaryAction)) {
    primaryActionMarkup = import_react267.default.createElement(import_react267.default.Fragment, null, primaryAction);
  } else if (primaryAction) {
    primaryActionMarkup = buttonsFrom(primaryAction, {
      primary: true
    });
  }
  let secondaryActionsMarkup = null;
  if (isInterface(secondaryActions) && secondaryActions.length > 0) {
    secondaryActionsMarkup = import_react267.default.createElement(ButtonGroup, null, buttonsFrom(secondaryActions));
  } else if (isReactElement(secondaryActions)) {
    secondaryActionsMarkup = import_react267.default.createElement(import_react267.default.Fragment, null, secondaryActions);
  }
  return import_react267.default.createElement("div", {
    className: styles114.PageActions
  }, import_react267.default.createElement(LegacyStack, {
    distribution: "trailing",
    spacing: "tight"
  }, secondaryActionsMarkup, primaryActionMarkup));
}

// node_modules/@shopify/polaris/build/esm/components/PolarisTestProvider/PolarisTestProvider.js
var import_react268 = __toESM(require_react());
var defaultMediaQuery = {
  isNavigationCollapsed: false
};
var defaultIndexFilters = {
  mode: IndexFiltersMode.Default,
  setMode: noop19
};
function PolarisTestProvider({
  strict,
  children: children2,
  i18n,
  link,
  mediaQuery,
  features,
  frame,
  indexFilters
}) {
  const Wrapper = strict ? import_react268.StrictMode : import_react268.Fragment;
  const intl = (0, import_react268.useMemo)(() => new I18n(i18n || {}), [i18n]);
  const scrollLockManager = (0, import_react268.useMemo)(() => new ScrollLockManager(), []);
  const stickyManager = (0, import_react268.useMemo)(() => new StickyManager(), []);
  const featuresConfig = (0, import_react268.useMemo)(() => ({
    polarisSummerEditions2023: false,
    ...features
  }), [features]);
  const mergedFrame = createFrameContext(frame);
  const mergedMediaQuery = merge(defaultMediaQuery, mediaQuery);
  const mergedIndexFilters = merge(defaultIndexFilters, indexFilters);
  return import_react268.default.createElement(Wrapper, null, import_react268.default.createElement(FeaturesContext.Provider, {
    value: featuresConfig
  }, import_react268.default.createElement(I18nContext.Provider, {
    value: intl
  }, import_react268.default.createElement(ScrollLockManagerContext.Provider, {
    value: scrollLockManager
  }, import_react268.default.createElement(StickyManagerContext.Provider, {
    value: stickyManager
  }, import_react268.default.createElement(LinkContext.Provider, {
    value: link
  }, import_react268.default.createElement(MediaQueryContext.Provider, {
    value: mergedMediaQuery
  }, import_react268.default.createElement(PortalsManager, null, import_react268.default.createElement(FocusManager, null, import_react268.default.createElement(EphemeralPresenceManager, null, import_react268.default.createElement(FrameContext.Provider, {
    value: mergedFrame
  }, import_react268.default.createElement(IndexFiltersModeContext.Provider, {
    value: mergedIndexFilters
  }, children2))))))))))));
}
function noop19() {
}
function createFrameContext({
  logo = void 0,
  showToast = noop19,
  hideToast = noop19,
  toastMessages = [],
  setContextualSaveBar = noop19,
  removeContextualSaveBar = noop19,
  startLoading = noop19,
  stopLoading = noop19
} = {}) {
  return {
    logo,
    showToast,
    hideToast,
    toastMessages,
    setContextualSaveBar,
    removeContextualSaveBar,
    startLoading,
    stopLoading
  };
}

// node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.js
var import_react269 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.scss.js
var styles115 = {
  "ProgressBar": "Polaris-ProgressBar",
  "sizeSmall": "Polaris-ProgressBar--sizeSmall",
  "sizeMedium": "Polaris-ProgressBar--sizeMedium",
  "sizeLarge": "Polaris-ProgressBar--sizeLarge",
  "colorHighlight": "Polaris-ProgressBar--colorHighlight",
  "colorPrimary": "Polaris-ProgressBar--colorPrimary",
  "colorSuccess": "Polaris-ProgressBar--colorSuccess",
  "colorCritical": "Polaris-ProgressBar--colorCritical",
  "Indicator": "Polaris-ProgressBar__Indicator",
  "IndicatorAppearActive": "Polaris-ProgressBar__IndicatorAppearActive",
  "IndicatorAppearDone": "Polaris-ProgressBar__IndicatorAppearDone",
  "Progress": "Polaris-ProgressBar__Progress",
  "Label": "Polaris-ProgressBar__Label"
};

// node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.js
function ProgressBar({
  progress = 0,
  size: size2 = "medium",
  color: color2 = "highlight",
  animated: hasAppearAnimation = true,
  ariaLabelledBy
}) {
  const i18n = useI18n();
  const indicatorRef = (0, import_react269.useRef)(null);
  const className = classNames(styles115.ProgressBar, size2 && styles115[variationName("size", size2)], color2 && styles115[variationName("color", color2)]);
  const warningMessage = i18n.translate(progress < 0 ? "Polaris.ProgressBar.negativeWarningMessage" : "Polaris.ProgressBar.exceedWarningMessage", {
    progress
  });
  const parsedProgress = parseProgress(progress, warningMessage);
  const progressBarDuration = hasAppearAnimation ? motion2["motion-duration-500"] : motion2["motion-duration-0"];
  return import_react269.default.createElement("div", {
    className
  }, import_react269.default.createElement("progress", {
    "aria-labelledby": ariaLabelledBy,
    className: styles115.Progress,
    value: parsedProgress,
    max: "100"
  }), import_react269.default.createElement(CSSTransition_default, {
    in: true,
    appear: true,
    timeout: parseInt(progressBarDuration, 10),
    nodeRef: indicatorRef,
    classNames: {
      appearActive: styles115.IndicatorAppearActive,
      appearDone: styles115.IndicatorAppearDone
    }
  }, import_react269.default.createElement("div", {
    ref: indicatorRef,
    className: styles115.Indicator,
    style: {
      "--pc-progress-bar-duration": progressBarDuration,
      "--pc-progress-bar-percent": parsedProgress / 100
    }
  }, import_react269.default.createElement("span", {
    className: styles115.Label
  }, parsedProgress, "%"))));
}
function parseProgress(progress, warningMessage) {
  let progressWidth;
  if (progress < 0) {
    if (true) {
      console.warn(warningMessage);
    }
    progressWidth = 0;
  } else if (progress > 100) {
    if (true) {
      console.warn(warningMessage);
    }
    progressWidth = 100;
  } else {
    progressWidth = progress;
  }
  return progressWidth;
}

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.js
var import_react272 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.js
var import_react270 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.scss.js
var sharedStyles = {
  "RangeSlider": "Polaris-RangeSlider"
};

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.scss.js
var styles116 = {
  "RangeSlider": "Polaris-RangeSlider-DualThumb__RangeSlider",
  "DualThumb": "Polaris-RangeSlider-DualThumb",
  "TrackWrapper": "Polaris-RangeSlider-DualThumb__TrackWrapper",
  "disabled": "Polaris-RangeSlider-DualThumb--disabled",
  "Track": "Polaris-RangeSlider-DualThumb__Track",
  "error": "Polaris-RangeSlider-DualThumb--error",
  "Track--dashed": "Polaris-RangeSlider-DualThumb--trackDashed",
  "Thumbs": "Polaris-RangeSlider-DualThumb__Thumbs",
  "Prefix": "Polaris-RangeSlider-DualThumb__Prefix",
  "Suffix": "Polaris-RangeSlider-DualThumb__Suffix",
  "Output": "Polaris-RangeSlider-DualThumb__Output",
  "OutputBubble": "Polaris-RangeSlider-DualThumb__OutputBubble"
};

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.js
var Control;
(function(Control2) {
  Control2[Control2["Lower"] = 0] = "Lower";
  Control2[Control2["Upper"] = 1] = "Upper";
})(Control || (Control = {}));
var DualThumb = class extends import_react270.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      value: sanitizeValue(this.props.value, this.props.min, this.props.max, this.props.step),
      trackWidth: 0,
      trackLeft: 0
    };
    this.track = (0, import_react270.createRef)();
    this.trackWrapper = (0, import_react270.createRef)();
    this.thumbLower = (0, import_react270.createRef)();
    this.thumbUpper = (0, import_react270.createRef)();
    this.setTrackPosition = debounce(() => {
      if (this.track.current) {
        const thumbSize = 16;
        const {
          width: width2,
          left
        } = this.track.current.getBoundingClientRect();
        const adjustedTrackWidth = width2 - thumbSize;
        const adjustedTrackLeft = left + thumbSize / 2;
        const range = this.props.max - this.props.min;
        const minValuePosition = this.props.min / range * adjustedTrackWidth;
        this.setState({
          trackWidth: adjustedTrackWidth,
          trackLeft: adjustedTrackLeft - minValuePosition
        });
      }
    }, 40, {
      leading: true,
      trailing: true,
      maxWait: 40
    });
    this.handleMouseDownThumbLower = (event) => {
      if (event.button !== 0 || this.props.disabled)
        return;
      registerMouseMoveHandler(this.handleMouseMoveThumbLower);
      event.stopPropagation();
    };
    this.handleMouseMoveThumbLower = (event) => {
      const valueUpper = this.state.value[1];
      this.setValue([this.actualXPosition(event.clientX), valueUpper], Control.Upper);
    };
    this.handleTouchStartThumbLower = (event) => {
      if (this.props.disabled)
        return;
      registerTouchMoveHandler(this.handleTouchMoveThumbLower);
      event.stopPropagation();
    };
    this.handleTouchMoveThumbLower = (event) => {
      event.preventDefault();
      const valueUpper = this.state.value[1];
      this.setValue([this.actualXPosition(event.touches[0].clientX), valueUpper], Control.Upper);
    };
    this.handleMouseDownThumbUpper = (event) => {
      if (event.button !== 0 || this.props.disabled)
        return;
      registerMouseMoveHandler(this.handleMouseMoveThumbUpper);
      event.stopPropagation();
    };
    this.handleMouseMoveThumbUpper = (event) => {
      const valueLower = this.state.value[0];
      this.setValue([valueLower, this.actualXPosition(event.clientX)], Control.Lower);
    };
    this.handleTouchStartThumbUpper = (event) => {
      if (this.props.disabled)
        return;
      registerTouchMoveHandler(this.handleTouchMoveThumbUpper);
      event.stopPropagation();
    };
    this.handleTouchMoveThumbUpper = (event) => {
      event.preventDefault();
      const valueLower = this.state.value[0];
      this.setValue([valueLower, this.actualXPosition(event.touches[0].clientX)], Control.Lower);
    };
    this.handleKeypressLower = (event) => {
      if (this.props.disabled)
        return;
      const {
        incrementValueLower,
        decrementValueLower
      } = this;
      const handlerMap = {
        [Key.UpArrow]: incrementValueLower,
        [Key.RightArrow]: incrementValueLower,
        [Key.DownArrow]: decrementValueLower,
        [Key.LeftArrow]: decrementValueLower
      };
      const handler = handlerMap[event.keyCode];
      if (handler != null) {
        event.preventDefault();
        event.stopPropagation();
        handler();
      }
    };
    this.handleKeypressUpper = (event) => {
      if (this.props.disabled)
        return;
      const {
        incrementValueUpper,
        decrementValueUpper
      } = this;
      const handlerMap = {
        [Key.UpArrow]: incrementValueUpper,
        [Key.RightArrow]: incrementValueUpper,
        [Key.DownArrow]: decrementValueUpper,
        [Key.LeftArrow]: decrementValueUpper
      };
      const handler = handlerMap[event.keyCode];
      if (handler != null) {
        event.preventDefault();
        event.stopPropagation();
        handler();
      }
    };
    this.incrementValueLower = () => {
      this.setValue([this.state.value[0] + this.props.step, this.state.value[1]], Control.Upper);
    };
    this.decrementValueLower = () => {
      this.setValue([this.state.value[0] - this.props.step, this.state.value[1]], Control.Upper);
    };
    this.incrementValueUpper = () => {
      this.setValue([this.state.value[0], this.state.value[1] + this.props.step], Control.Lower);
    };
    this.decrementValueUpper = () => {
      this.setValue([this.state.value[0], this.state.value[1] - this.props.step], Control.Lower);
    };
    this.dispatchValue = () => {
      const {
        onChange,
        id
      } = this.props;
      const {
        value
      } = this.state;
      onChange(value, id);
    };
    this.setValue = (dirtyValue, control) => {
      const {
        props: {
          min,
          max,
          step
        },
        state: {
          value
        }
      } = this;
      const sanitizedValue = sanitizeValue(dirtyValue, min, max, step, control);
      if (isTupleEqual(sanitizedValue, value) === false) {
        this.setState({
          value: sanitizedValue
        }, this.dispatchValue);
      }
    };
    this.handleMouseDownTrack = (event) => {
      if (event.button !== 0 || this.props.disabled)
        return;
      event.preventDefault();
      const clickXPosition = this.actualXPosition(event.clientX);
      const {
        value
      } = this.state;
      const distanceFromLowerThumb = Math.abs(value[0] - clickXPosition);
      const distanceFromUpperThumb = Math.abs(value[1] - clickXPosition);
      if (distanceFromLowerThumb <= distanceFromUpperThumb) {
        this.setValue([clickXPosition, value[1]], Control.Upper);
        registerMouseMoveHandler(this.handleMouseMoveThumbLower);
        if (this.thumbLower.current != null) {
          this.thumbLower.current.focus();
        }
      } else {
        this.setValue([value[0], clickXPosition], Control.Lower);
        registerMouseMoveHandler(this.handleMouseMoveThumbUpper);
        if (this.thumbUpper.current != null) {
          this.thumbUpper.current.focus();
        }
      }
    };
    this.handleTouchStartTrack = (event) => {
      if (this.props.disabled)
        return;
      event.preventDefault();
      const clickXPosition = this.actualXPosition(event.touches[0].clientX);
      const {
        value
      } = this.state;
      const distanceFromLowerThumb = Math.abs(value[0] - clickXPosition);
      const distanceFromUpperThumb = Math.abs(value[1] - clickXPosition);
      if (distanceFromLowerThumb <= distanceFromUpperThumb) {
        this.setValue([clickXPosition, value[1]], Control.Upper);
        registerTouchMoveHandler(this.handleTouchMoveThumbLower);
        if (this.thumbLower.current != null) {
          this.thumbLower.current.focus();
        }
      } else {
        this.setValue([value[0], clickXPosition], Control.Lower);
        registerTouchMoveHandler(this.handleTouchMoveThumbUpper);
        if (this.thumbUpper.current != null) {
          this.thumbUpper.current.focus();
        }
      }
    };
    this.actualXPosition = (dirtyXPosition) => {
      if (this.track.current) {
        const {
          min,
          max
        } = this.props;
        const {
          trackLeft,
          trackWidth
        } = this.state;
        const relativeX = dirtyXPosition - trackLeft;
        const percentageOfTrack = relativeX / trackWidth;
        return percentageOfTrack * (max - min);
      } else {
        return 0;
      }
    };
  }
  static getDerivedStateFromProps(props, state) {
    const {
      min,
      step,
      max,
      value,
      onChange,
      id
    } = props;
    const {
      prevValue
    } = state;
    if (isTupleEqual(prevValue, value)) {
      return null;
    }
    const sanitizedValue = sanitizeValue(value, min, max, step);
    if (!isTupleEqual(value, sanitizedValue)) {
      onChange(sanitizedValue, id);
    }
    return {
      prevValue: value,
      value: sanitizedValue
    };
  }
  componentDidMount() {
    this.setTrackPosition();
    if (this.trackWrapper.current != null) {
      this.trackWrapper.current.addEventListener("touchstart", this.handleTouchStartTrack, {
        passive: false
      });
    }
  }
  componentWillUnmount() {
    if (this.trackWrapper.current != null) {
      this.trackWrapper.current.removeEventListener("touchstart", this.handleTouchStartTrack);
    }
  }
  render() {
    const {
      id,
      min,
      max,
      prefix,
      suffix,
      disabled,
      output,
      error,
      onFocus,
      onBlur,
      label,
      labelAction,
      labelHidden,
      helpText
    } = this.props;
    const {
      value
    } = this.state;
    const idLower = id;
    const idUpper = `${id}Upper`;
    const describedBy = [];
    if (error) {
      describedBy.push(`${id}Error`);
    }
    const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
    const trackWrapperClassName = classNames(styles116.TrackWrapper, error && styles116.error, disabled && styles116.disabled);
    const thumbLowerClassName = classNames(styles116.Thumbs, styles116.ThumbLower, disabled && styles116.disabled);
    const thumbUpperClassName = classNames(styles116.Thumbs, styles116.ThumbUpper, disabled && styles116.disabled);
    const trackWidth = this.state.trackWidth;
    const range = max - min;
    const minValuePosition = min / range * trackWidth;
    const leftPositionThumbLower = value[0] / range * trackWidth - minValuePosition;
    const leftPositionThumbUpper = value[1] / range * trackWidth - minValuePosition;
    const outputLowerClassName = classNames(styles116.Output, styles116.OutputLower);
    const outputMarkupLower = !disabled && output ? import_react270.default.createElement("output", {
      htmlFor: idLower,
      className: outputLowerClassName,
      style: {
        left: `${leftPositionThumbLower}px`
      }
    }, import_react270.default.createElement("div", {
      className: styles116.OutputBubble
    }, import_react270.default.createElement(Text, {
      as: "span",
      variant: "headingXs",
      alignment: "center"
    }, value[0]))) : null;
    const outputUpperClassName = classNames(styles116.Output, styles116.OutputUpper);
    const outputMarkupUpper = !disabled && output ? import_react270.default.createElement("output", {
      htmlFor: idUpper,
      className: outputUpperClassName,
      style: {
        left: `${leftPositionThumbUpper}px`
      }
    }, import_react270.default.createElement("div", {
      className: styles116.OutputBubble
    }, import_react270.default.createElement(Text, {
      as: "span",
      variant: "headingXs",
      alignment: "center"
    }, value[1]))) : null;
    const cssVars = {
      "--pc-range-slider-progress-lower": `${leftPositionThumbLower}px`,
      "--pc-range-slider-progress-upper": `${leftPositionThumbUpper}px`
    };
    const prefixMarkup = prefix && import_react270.default.createElement("div", {
      className: styles116.Prefix
    }, prefix);
    const suffixMarkup = suffix && import_react270.default.createElement("div", {
      className: styles116.Suffix
    }, suffix);
    return import_react270.default.createElement(import_react270.default.Fragment, null, import_react270.default.createElement(Labelled, {
      id,
      label,
      error,
      action: labelAction,
      labelHidden,
      helpText
    }, import_react270.default.createElement("div", {
      className: classNames(styles116.DualThumb, sharedStyles.RangeSlider)
    }, prefixMarkup, import_react270.default.createElement("div", {
      className: trackWrapperClassName,
      onMouseDown: this.handleMouseDownTrack,
      ref: this.trackWrapper
    }, import_react270.default.createElement("div", {
      className: styles116.Track,
      style: cssVars,
      ref: this.track
    }), import_react270.default.createElement("div", {
      className: styles116["Track--dashed"]
    }), import_react270.default.createElement("div", {
      id: idLower,
      className: thumbLowerClassName,
      style: {
        left: `${leftPositionThumbLower}px`
      },
      role: "slider",
      "aria-disabled": disabled,
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": value[0],
      "aria-invalid": Boolean(error),
      "aria-describedby": ariaDescribedBy,
      "aria-labelledby": labelID(id),
      onFocus,
      onBlur,
      tabIndex: 0,
      onKeyDown: this.handleKeypressLower,
      onMouseDown: this.handleMouseDownThumbLower,
      onTouchStart: this.handleTouchStartThumbLower,
      ref: this.thumbLower
    }), outputMarkupLower, import_react270.default.createElement("div", {
      id: idUpper,
      className: thumbUpperClassName,
      style: {
        left: `${leftPositionThumbUpper}px`
      },
      role: "slider",
      "aria-disabled": disabled,
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": value[1],
      "aria-invalid": Boolean(error),
      "aria-describedby": ariaDescribedBy,
      "aria-labelledby": labelID(id),
      onFocus,
      onBlur,
      tabIndex: 0,
      onKeyDown: this.handleKeypressUpper,
      onMouseDown: this.handleMouseDownThumbUpper,
      onTouchStart: this.handleTouchStartThumbUpper,
      ref: this.thumbUpper
    }), outputMarkupUpper), suffixMarkup)), import_react270.default.createElement(EventListener, {
      event: "resize",
      handler: this.setTrackPosition
    }));
  }
};
DualThumb.contextType = FeaturesContext;
function registerMouseMoveHandler(handler) {
  document.addEventListener("mousemove", handler);
  document.addEventListener("mouseup", () => {
    document.removeEventListener("mousemove", handler);
  }, {
    once: true
  });
}
function registerTouchMoveHandler(handler) {
  const removeHandler = () => {
    document.removeEventListener("touchmove", handler);
    document.removeEventListener("touchend", removeHandler);
    document.removeEventListener("touchcancel", removeHandler);
  };
  document.addEventListener("touchmove", handler, {
    passive: false
  });
  document.addEventListener("touchend", removeHandler, {
    once: true
  });
  document.addEventListener("touchcancel", removeHandler, {
    once: true
  });
}
function sanitizeValue(value, min, max, step, control = Control.Upper) {
  let upperValue = inBoundsUpper(roundedToStep(value[1]));
  let lowerValue = inBoundsLower(roundedToStep(value[0]));
  const maxLowerValue = upperValue - step;
  const minUpperValue = lowerValue + step;
  if (control === Control.Upper && lowerValue > maxLowerValue) {
    lowerValue = maxLowerValue;
  } else if (control === Control.Lower && upperValue < minUpperValue) {
    upperValue = minUpperValue;
  }
  return [lowerValue, upperValue];
  function inBoundsUpper(value2) {
    const lowerMin = min + step;
    if (value2 < lowerMin) {
      return lowerMin;
    } else if (value2 > max) {
      return max;
    } else {
      return value2;
    }
  }
  function inBoundsLower(value2) {
    const upperMax = max - step;
    if (value2 < min) {
      return min;
    } else if (value2 > upperMax) {
      return upperMax;
    } else {
      return value2;
    }
  }
  function roundedToStep(value2) {
    return Math.round(value2 / step) * step;
  }
}
function isTupleEqual(a, b) {
  if (a == null || b == null) {
    return false;
  }
  return a[0] === b[0] && a[1] === b[1];
}

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.js
var import_react271 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.scss.js
var styles117 = {
  "RangeSlider": "Polaris-RangeSlider-SingleThumb__RangeSlider",
  "SingleThumb": "Polaris-RangeSlider-SingleThumb",
  "disabled": "Polaris-RangeSlider-SingleThumb--disabled",
  "InputWrapper": "Polaris-RangeSlider-SingleThumb__InputWrapper",
  "Prefix": "Polaris-RangeSlider-SingleThumb__Prefix",
  "Suffix": "Polaris-RangeSlider-SingleThumb__Suffix",
  "Input": "Polaris-RangeSlider-SingleThumb__Input",
  "error": "Polaris-RangeSlider-SingleThumb--error",
  "Output": "Polaris-RangeSlider-SingleThumb__Output",
  "OutputBubble": "Polaris-RangeSlider-SingleThumb__OutputBubble"
};

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/utilities/invertNumber.js
function invertNumber(number) {
  if (Math.sign(number) === 1) {
    return -Math.abs(number);
  } else if (Math.sign(number) === -1) {
    return Math.abs(number);
  } else {
    return 0;
  }
}

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.js
function SingleThumb(props) {
  const {
    id,
    error,
    helpText,
    value,
    min,
    max,
    disabled,
    output,
    prefix,
    suffix,
    label,
    labelAction,
    labelHidden,
    step,
    onBlur,
    onFocus
  } = props;
  const clampedValue = clamp(value, min, max);
  const describedBy = [];
  if (error) {
    describedBy.push(`${id}Error`);
  }
  if (helpText) {
    describedBy.push(helpTextID2(id));
  }
  const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
  const sliderProgress = (clampedValue - min) * 100 / (max - min);
  const outputFactor = invertNumber((sliderProgress - 50) / 100);
  const cssVars = {
    "--pc-range-slider-min": min,
    "--pc-range-slider-max": max,
    "--pc-range-slider-current": clampedValue,
    "--pc-range-slider-progress": `${sliderProgress}%`,
    "--pc-range-slider-output-factor": `${outputFactor}`
  };
  const outputMarkup = !disabled && output && import_react271.default.createElement("output", {
    htmlFor: id,
    className: styles117.Output
  }, import_react271.default.createElement("div", {
    className: styles117.OutputBubble
  }, import_react271.default.createElement(Text, {
    as: "span",
    variant: "headingXs",
    alignment: "center"
  }, clampedValue)));
  const prefixMarkup = prefix && import_react271.default.createElement("div", {
    className: styles117.Prefix
  }, prefix);
  const suffixMarkup = suffix && import_react271.default.createElement("div", {
    className: styles117.Suffix
  }, suffix);
  const className = classNames(styles117.SingleThumb, sharedStyles.RangeSlider, error && styles117.error, disabled && styles117.disabled);
  return import_react271.default.createElement(Labelled, {
    id,
    label,
    error,
    action: labelAction,
    labelHidden,
    helpText
  }, import_react271.default.createElement("div", {
    className,
    style: cssVars
  }, prefixMarkup, import_react271.default.createElement("div", {
    className: styles117.InputWrapper
  }, import_react271.default.createElement("input", {
    type: "range",
    className: styles117.Input,
    id,
    name: id,
    min,
    max,
    step,
    value: clampedValue,
    disabled,
    onChange: handleChange,
    onFocus,
    onBlur,
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-valuenow": clampedValue,
    "aria-invalid": Boolean(error),
    "aria-describedby": ariaDescribedBy
  }), outputMarkup), suffixMarkup));
  function handleChange(event) {
    const {
      onChange
    } = props;
    onChange && onChange(parseFloat(event.currentTarget.value), id);
  }
}

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.js
function RangeSlider({
  min = 0,
  max = 100,
  step = 1,
  value,
  ...rest
}) {
  const id = (0, import_react272.useId)();
  const sharedProps = {
    id,
    min,
    max,
    step,
    ...rest
  };
  return isDualThumb(value) ? import_react272.default.createElement(DualThumb, Object.assign({
    value
  }, sharedProps)) : import_react272.default.createElement(SingleThumb, Object.assign({
    value
  }, sharedProps));
}
function isDualThumb(value) {
  return Array.isArray(value);
}

// node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.js
var import_react273 = __toESM(require_react());
var import_react_fast_compare4 = __toESM(require_react_fast_compare());

// node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.scss.js
var styles118 = {
  "ResourceItem": "Polaris-ResourceItem",
  "Actions": "Polaris-ResourceItem__Actions",
  "ItemWrapper": "Polaris-ResourceItem__ItemWrapper",
  "CheckboxWrapper": "Polaris-ResourceItem__CheckboxWrapper",
  "CheckboxLabel": "Polaris-ResourceItem__CheckboxLabel",
  "focusedInner": "Polaris-ResourceItem--focusedInner",
  "focused": "Polaris-ResourceItem--focused",
  "selected": "Polaris-ResourceItem--selected",
  "Link": "Polaris-ResourceItem__Link",
  "Button": "Polaris-ResourceItem__Button",
  "selectable": "Polaris-ResourceItem--selectable",
  "ListItem": "Polaris-ResourceItem__ListItem",
  "hasBulkActions": "Polaris-ResourceItem--hasBulkActions",
  "selectMode": "Polaris-ResourceItem--selectMode"
};

// node_modules/@shopify/polaris/build/esm/utilities/resource-list/types.js
var SELECT_ALL_ITEMS2 = "All";

// node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.js
var BaseResourceItem = class extends import_react273.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      actionsMenuVisible: false,
      focused: false,
      focusedInner: false,
      selected: isSelected(this.props.id, this.props.context.selectedItems)
    };
    this.node = null;
    this.overlayRef = (0, import_react273.createRef)();
    this.buttonOverlay = (0, import_react273.createRef)();
    this.setNode = (node) => {
      this.node = node;
    };
    this.handleFocus = (event) => {
      if (event.target === this.buttonOverlay.current || this.node && event.target === this.overlayRef.current) {
        this.setState({
          focused: true,
          focusedInner: false
        });
      } else if (this.node && this.node.contains(event.target)) {
        this.setState({
          focused: true,
          focusedInner: true
        });
      }
    };
    this.handleBlur = ({
      relatedTarget
    }) => {
      if (this.node && relatedTarget instanceof Element && this.node.contains(relatedTarget)) {
        return;
      }
      this.setState({
        focused: false,
        focusedInner: false
      });
    };
    this.handleMouseOut = () => {
      this.state.focused && this.setState({
        focused: false,
        focusedInner: false
      });
      if (this.props.onMouseOut) {
        this.props.onMouseOut();
      }
    };
    this.handleLargerSelectionArea = (event) => {
      stopPropagation2(event);
      this.handleSelection(!this.state.selected, event.nativeEvent.shiftKey);
    };
    this.handleSelection = (value, shiftKey) => {
      const {
        id,
        sortOrder,
        context: {
          onSelectionChange
        }
      } = this.props;
      if (id == null || onSelectionChange == null) {
        return;
      }
      this.setState({
        focused: value,
        focusedInner: value
      });
      onSelectionChange(value, id, sortOrder, shiftKey);
    };
    this.handleClick = (event) => {
      stopPropagation2(event);
      const {
        id,
        onClick,
        url,
        context: {
          selectMode
        }
      } = this.props;
      const {
        ctrlKey,
        metaKey
      } = event.nativeEvent;
      const anchor = this.node && this.node.querySelector("a");
      if (selectMode) {
        this.handleLargerSelectionArea(event);
        return;
      }
      if (anchor === event.target) {
        return;
      }
      if (onClick) {
        onClick(id);
      }
      if (url && (ctrlKey || metaKey)) {
        window.open(url, "_blank");
        return;
      }
      if (url && anchor) {
        anchor.click();
      }
    };
    this.handleKeyUp = (event) => {
      const {
        onClick = noop20,
        context: {
          selectMode
        }
      } = this.props;
      const {
        key
      } = event;
      if (key === "Enter" && this.props.url && !selectMode) {
        onClick();
      }
    };
    this.handleActionsClick = () => {
      this.setState(({
        actionsMenuVisible
      }) => ({
        actionsMenuVisible: !actionsMenuVisible
      }));
    };
    this.handleCloseRequest = () => {
      this.setState({
        actionsMenuVisible: false
      });
    };
  }
  static getDerivedStateFromProps(nextProps, prevState) {
    const selected = isSelected(nextProps.id, nextProps.context.selectedItems);
    if (prevState.selected === selected) {
      return null;
    }
    return {
      selected
    };
  }
  shouldComponentUpdate(nextProps, nextState) {
    const {
      children: nextChildren,
      context: {
        selectedItems: nextSelectedItems,
        ...restNextContext
      },
      ...restNextProps
    } = nextProps;
    const {
      children: children2,
      context: {
        selectedItems,
        ...restContext
      },
      ...restProps
    } = this.props;
    const nextSelectMode = nextProps.context.selectMode;
    return !(0, import_react_fast_compare4.default)(this.state, nextState) || this.props.context.selectMode !== nextSelectMode || !nextProps.context.selectMode && (!(0, import_react_fast_compare4.default)(restProps, restNextProps) || !(0, import_react_fast_compare4.default)(restContext, restNextContext));
  }
  render() {
    const {
      children: children2,
      url,
      external,
      media,
      shortcutActions,
      ariaControls,
      ariaExpanded,
      persistActions = false,
      accessibilityLabel,
      name,
      context: {
        selectable,
        selectMode,
        hasBulkActions,
        loading,
        resourceName
      },
      i18n,
      features: {
        polarisSummerEditions2023
      },
      verticalAlignment,
      dataHref,
      breakpoints: breakpoints3,
      onMouseOver
    } = this.props;
    const {
      actionsMenuVisible,
      focused,
      focusedInner,
      selected
    } = this.state;
    let ownedMarkup = null;
    let handleMarkup = null;
    const itemPaddingInline = polarisSummerEditions2023 ? "300" : {
      xs: "400",
      sm: "500"
    };
    const itemPaddingBlock = "300";
    const gapBetweenCheckboxAndMedia = polarisSummerEditions2023 ? "300" : "400";
    const gapBetweenOwnedAndChildren = polarisSummerEditions2023 ? "300" : "500";
    if (selectable) {
      const checkboxAccessibilityLabel = name || accessibilityLabel || i18n.translate("Polaris.Common.checkbox");
      handleMarkup = import_react273.default.createElement("div", {
        className: styles118.CheckboxWrapper,
        onClick: stopPropagation2,
        onChange: this.handleLargerSelectionArea
      }, import_react273.default.createElement(UseId, null, (id) => import_react273.default.createElement(Checkbox, {
        id,
        label: checkboxAccessibilityLabel,
        labelHidden: true,
        checked: selected,
        disabled: loading,
        bleedInlineStart: itemPaddingInline,
        bleedInlineEnd: media ? gapBetweenCheckboxAndMedia : gapBetweenOwnedAndChildren,
        bleedBlockStart: itemPaddingBlock,
        bleedBlockEnd: itemPaddingBlock,
        fill: true,
        labelClassName: styles118.CheckboxLabel
      })));
    }
    if (media || selectable) {
      ownedMarkup = import_react273.default.createElement(HorizontalStack, {
        gap: gapBetweenCheckboxAndMedia,
        blockAlign: media && selectable ? "center" : getAlignment(verticalAlignment)
      }, handleMarkup, media);
    }
    const className = classNames(styles118.ResourceItem, focused && styles118.focused, selectable && styles118.selectable, selected && styles118.selected, selectMode && styles118.selectMode, persistActions && styles118.persistActions, focusedInner && styles118.focusedInner);
    const listItemClassName = classNames(styles118.ListItem, focused && !focusedInner && styles118.focused, hasBulkActions && styles118.hasBulkActions);
    let actionsMarkup = null;
    let disclosureMarkup = null;
    if (shortcutActions && !loading) {
      if (persistActions) {
        actionsMarkup = (breakpoints3 == null ? void 0 : breakpoints3.lgUp) ? import_react273.default.createElement("div", {
          className: styles118.Actions,
          onClick: stopPropagation2
        }, import_react273.default.createElement(ButtonGroup, null, buttonsFrom(shortcutActions, {
          plain: true,
          primary: polarisSummerEditions2023
        }))) : null;
        const disclosureAccessibilityLabel = name ? i18n.translate("Polaris.ResourceList.Item.actionsDropdownLabel", {
          accessibilityLabel: name
        }) : i18n.translate("Polaris.ResourceList.Item.actionsDropdown");
        disclosureMarkup = !selectMode && (breakpoints3 == null ? void 0 : breakpoints3.lgDown) ? import_react273.default.createElement("div", {
          onClick: stopPropagation2
        }, import_react273.default.createElement(Popover2, {
          activator: import_react273.default.createElement(Button, {
            accessibilityLabel: disclosureAccessibilityLabel,
            onClick: this.handleActionsClick,
            plain: true,
            primary: polarisSummerEditions2023,
            icon: SvgHorizontalDotsMinor
          }),
          onClose: this.handleCloseRequest,
          active: actionsMenuVisible
        }, import_react273.default.createElement(ActionList, {
          items: shortcutActions
        }))) : null;
      } else if (breakpoints3 == null ? void 0 : breakpoints3.lgUp) {
        actionsMarkup = import_react273.default.createElement("div", {
          className: styles118.Actions,
          onClick: stopPropagation2
        }, import_react273.default.createElement(Box, {
          position: "absolute",
          insetBlockStart: "400",
          insetInlineEnd: "500"
        }, import_react273.default.createElement(ButtonGroup, {
          segmented: true
        }, buttonsFrom(shortcutActions, {
          size: "slim"
        }))));
      }
    }
    const containerMarkup = import_react273.default.createElement(Box, {
      id: this.props.id,
      position: "relative",
      paddingInlineStart: itemPaddingInline,
      paddingInlineEnd: itemPaddingInline,
      paddingBlockStart: itemPaddingBlock,
      paddingBlockEnd: itemPaddingBlock,
      zIndex: "var(--pc-resource-item-content-stacking-order)"
    }, import_react273.default.createElement(HorizontalGrid, {
      columns: {
        xs: "1fr auto"
      }
    }, import_react273.default.createElement(HorizontalGrid, {
      columns: {
        xs: media || selectable ? "auto 1fr" : "1fr"
      },
      gap: gapBetweenOwnedAndChildren
    }, ownedMarkup, import_react273.default.createElement(HorizontalStack, {
      blockAlign: getAlignment(verticalAlignment)
    }, import_react273.default.createElement(Box, {
      width: "100%",
      padding: "0"
    }, children2))), actionsMarkup, disclosureMarkup));
    const tabIndex = loading ? -1 : 0;
    const ariaLabel = accessibilityLabel || i18n.translate("Polaris.ResourceList.Item.viewItem", {
      itemName: name || resourceName && resourceName.singular || ""
    });
    const accessibleMarkup = url ? import_react273.default.createElement(UseId, null, (id) => import_react273.default.createElement(UnstyledLink, {
      "aria-describedby": this.props.id,
      "aria-label": ariaLabel,
      className: styles118.Link,
      url,
      external,
      tabIndex,
      id,
      ref: this.overlayRef
    })) : import_react273.default.createElement("button", {
      className: styles118.Button,
      "aria-label": ariaLabel,
      "aria-controls": ariaControls,
      "aria-expanded": ariaExpanded,
      onClick: this.handleClick,
      tabIndex,
      ref: this.buttonOverlay
    });
    return import_react273.default.createElement("li", {
      className: listItemClassName,
      "data-href": dataHref
    }, import_react273.default.createElement("div", {
      className: styles118.ItemWrapper
    }, import_react273.default.createElement("div", {
      ref: this.setNode,
      className,
      onClick: this.handleClick,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur,
      onKeyUp: this.handleKeyUp,
      onMouseOver,
      onMouseOut: this.handleMouseOut,
      "data-href": url
    }, accessibleMarkup, containerMarkup)));
  }
};
function noop20() {
}
function stopPropagation2(event) {
  event.stopPropagation();
}
function isSelected(id, selectedItems) {
  return Boolean(selectedItems && (Array.isArray(selectedItems) && selectedItems.includes(id) || selectedItems === SELECT_ALL_ITEMS2));
}
function ResourceItem(props) {
  const breakpoints3 = useBreakpoints();
  const features = useFeatures();
  return import_react273.default.createElement(BaseResourceItem, Object.assign({}, props, {
    breakpoints: breakpoints3,
    context: (0, import_react273.useContext)(ResourceListContext),
    i18n: useI18n(),
    features
  }));
}
function getAlignment(alignment) {
  switch (alignment) {
    case "leading":
      return "start";
    case "trailing":
      return "end";
    case "center":
      return "center";
    case "fill":
      return "stretch";
    case "baseline":
      return "baseline";
    default:
      return "start";
  }
}
function UseId(props) {
  const id = (0, import_react273.useId)();
  return props.children(id);
}

// node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.js
var import_react275 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.scss.js
var styles119 = {
  "FiltersWrapper": "Polaris-ResourceList__FiltersWrapper",
  "ResourceList": "Polaris-ResourceList",
  "HeaderOuterWrapper": "Polaris-ResourceList__HeaderOuterWrapper",
  "BulkActionsWrapper": "Polaris-ResourceList__BulkActionsWrapper",
  "HeaderWrapper-disabled": "Polaris-ResourceList__HeaderWrapper--disabled",
  "HeaderWrapper-overlay": "Polaris-ResourceList__HeaderWrapper--overlay",
  "HeaderWrapper": "Polaris-ResourceList__HeaderWrapper",
  "HeaderWrapper-isSticky": "Polaris-ResourceList__HeaderWrapper--isSticky",
  "HeaderContentWrapper": "Polaris-ResourceList__HeaderContentWrapper",
  "HeaderWrapper-inSelectMode": "Polaris-ResourceList__HeaderWrapper--inSelectMode",
  "SortWrapper": "Polaris-ResourceList__SortWrapper",
  "AlternateToolWrapper": "Polaris-ResourceList__AlternateToolWrapper",
  "HeaderWrapper-hasSelect": "Polaris-ResourceList__HeaderWrapper--hasSelect",
  "HeaderWrapper-hasAlternateTool": "Polaris-ResourceList__HeaderWrapper--hasAlternateTool",
  "HeaderWrapper-hasSort": "Polaris-ResourceList__HeaderWrapper--hasSort",
  "HeaderTitleWrapper": "Polaris-ResourceList__HeaderTitleWrapper",
  "BulkActionsWrapperSticky": "Polaris-ResourceList__BulkActionsWrapperSticky",
  "SelectAllActionsWrapper": "Polaris-ResourceList__SelectAllActionsWrapper",
  "CheckableButtonWrapper": "Polaris-ResourceList__CheckableButtonWrapper",
  "SelectButtonWrapper": "Polaris-ResourceList__SelectButtonWrapper",
  "EmptySearchResultWrapper": "Polaris-ResourceList__EmptySearchResultWrapper",
  "ResourceListWrapper": "Polaris-ResourceList__ResourceListWrapper",
  "ResourceListWrapperWithBulkActions": "Polaris-ResourceList__ResourceListWrapperWithBulkActions",
  "ItemWrapper": "Polaris-ResourceList__ItemWrapper",
  "ItemWrapper-isLoading": "Polaris-ResourceList__ItemWrapper--isLoading",
  "SpinnerContainer": "Polaris-ResourceList__SpinnerContainer",
  "LoadingOverlay": "Polaris-ResourceList__LoadingOverlay",
  "DisabledPointerEvents": "Polaris-ResourceList__DisabledPointerEvents",
  "disableTextSelection": "Polaris-ResourceList--disableTextSelection"
};

// node_modules/@shopify/polaris/build/esm/components/Select/Select.js
var import_react274 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Select/Select.scss.js
var styles120 = {
  "Select": "Polaris-Select",
  "disabled": "Polaris-Select--disabled",
  "error": "Polaris-Select--error",
  "Backdrop": "Polaris-Select__Backdrop",
  "Input": "Polaris-Select__Input",
  "Content": "Polaris-Select__Content",
  "InlineLabel": "Polaris-Select__InlineLabel",
  "Icon": "Polaris-Select__Icon",
  "SelectedOption": "Polaris-Select__SelectedOption",
  "Prefix": "Polaris-Select__Prefix",
  "hover": "Polaris-Select--hover"
};

// node_modules/@shopify/polaris/build/esm/components/Select/Select.js
var PLACEHOLDER_VALUE = "";
function Select({
  options: optionsProp,
  label,
  labelAction,
  labelHidden: labelHiddenProp,
  labelInline,
  disabled,
  helpText,
  placeholder,
  id: idProp,
  name,
  value = PLACEHOLDER_VALUE,
  error,
  onChange,
  onFocus,
  onBlur,
  requiredIndicator
}) {
  const uniqId = (0, import_react274.useId)();
  const id = idProp ?? uniqId;
  const labelHidden = labelInline ? true : labelHiddenProp;
  const className = classNames(styles120.Select, error && styles120.error, disabled && styles120.disabled);
  const handleChange = onChange ? (event) => onChange(event.currentTarget.value, id) : void 0;
  const describedBy = [];
  if (helpText) {
    describedBy.push(helpTextID2(id));
  }
  if (error) {
    describedBy.push(`${id}Error`);
  }
  const options = optionsProp || [];
  let normalizedOptions = options.map(normalizeOption);
  if (placeholder) {
    normalizedOptions = [{
      label: placeholder,
      value: PLACEHOLDER_VALUE,
      disabled: true
    }, ...normalizedOptions];
  }
  const inlineLabelMarkup = labelInline && import_react274.default.createElement(Box, {
    paddingInlineEnd: "100"
  }, import_react274.default.createElement(Text, {
    as: "span",
    color: "subdued",
    truncate: true
  }, label));
  const selectedOption = getSelectedOption(normalizedOptions, value);
  const prefixMarkup = selectedOption.prefix && import_react274.default.createElement("div", {
    className: styles120.Prefix
  }, selectedOption.prefix);
  const contentMarkup = import_react274.default.createElement("div", {
    className: styles120.Content,
    "aria-hidden": true,
    "aria-disabled": disabled
  }, inlineLabelMarkup, prefixMarkup, import_react274.default.createElement("span", {
    className: styles120.SelectedOption
  }, selectedOption.label), import_react274.default.createElement("span", {
    className: styles120.Icon
  }, import_react274.default.createElement(Icon, {
    source: SvgSelectMinor
  })));
  const optionsMarkup = normalizedOptions.map(renderOption);
  return import_react274.default.createElement(Labelled, {
    id,
    label,
    error,
    action: labelAction,
    labelHidden,
    helpText,
    requiredIndicator,
    disabled
  }, import_react274.default.createElement("div", {
    className
  }, import_react274.default.createElement("select", {
    id,
    name,
    value,
    className: styles120.Input,
    disabled,
    onFocus,
    onBlur,
    onChange: handleChange,
    "aria-invalid": Boolean(error),
    "aria-describedby": describedBy.length ? describedBy.join(" ") : void 0,
    "aria-required": requiredIndicator
  }, optionsMarkup), contentMarkup, import_react274.default.createElement("div", {
    className: styles120.Backdrop
  })));
}
function isString(option) {
  return typeof option === "string";
}
function isGroup(option) {
  return typeof option === "object" && "options" in option && option.options != null;
}
function normalizeStringOption(option) {
  return {
    label: option,
    value: option
  };
}
function normalizeOption(option) {
  if (isString(option)) {
    return normalizeStringOption(option);
  } else if (isGroup(option)) {
    const {
      title,
      options
    } = option;
    return {
      title,
      options: options.map((option2) => {
        return isString(option2) ? normalizeStringOption(option2) : option2;
      })
    };
  }
  return option;
}
function getSelectedOption(options, value) {
  const flatOptions = flattenOptions(options);
  let selectedOption = flatOptions.find((option) => value === option.value);
  if (selectedOption === void 0) {
    selectedOption = flatOptions.find((option) => !option.hidden);
  }
  return selectedOption || {
    value: "",
    label: ""
  };
}
function flattenOptions(options) {
  let flatOptions = [];
  options.forEach((optionOrGroup) => {
    if (isGroup(optionOrGroup)) {
      flatOptions = flatOptions.concat(optionOrGroup.options);
    } else {
      flatOptions.push(optionOrGroup);
    }
  });
  return flatOptions;
}
function renderSingleOption(option) {
  const {
    value,
    label,
    prefix: _prefix,
    ...rest
  } = option;
  return import_react274.default.createElement("option", Object.assign({
    key: value,
    value
  }, rest), label);
}
function renderOption(optionOrGroup) {
  if (isGroup(optionOrGroup)) {
    const {
      title,
      options
    } = optionOrGroup;
    return import_react274.default.createElement("optgroup", {
      label: title,
      key: title
    }, options.map(renderSingleOption));
  }
  return renderSingleOption(optionOrGroup);
}

// node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.js
var SMALL_SPINNER_HEIGHT = 28;
var LARGE_SPINNER_HEIGHT = 45;
function getAllItemsOnPage(items, idForItem) {
  return items.map((item, index) => {
    return idForItem(item, index);
  });
}
var isBreakpointsXS2 = () => {
  return typeof window === "undefined" ? false : window.innerWidth < parseFloat(toPx(tokens.breakpoints["breakpoints-sm"]) ?? "");
};
function defaultIdForItem(item, index) {
  return Object.prototype.hasOwnProperty.call(item, "id") ? item.id : index.toString();
}
function ResourceList({
  items,
  filterControl,
  flushFilters,
  emptyState,
  emptySearchState,
  resourceName: resourceNameProp,
  promotedBulkActions,
  bulkActions,
  selectedItems = [],
  isFiltered,
  selectable,
  hasMoreItems,
  loading,
  headerContent,
  showHeader,
  totalItemsCount,
  sortValue,
  sortOptions,
  alternateTool,
  onSortChange,
  onSelectionChange,
  renderItem,
  idForItem = defaultIdForItem,
  resolveItemId
}) {
  const i18n = useI18n();
  const [selectMode, setSelectMode] = (0, import_react275.useState)(Boolean(selectedItems && selectedItems.length > 0));
  const [loadingPosition, setLoadingPositionState] = (0, import_react275.useState)(0);
  const [lastSelected, setLastSelected] = (0, import_react275.useState)();
  const [smallScreen, setSmallScreen] = (0, import_react275.useState)(isBreakpointsXS2());
  const forceUpdate = (0, import_react275.useReducer)((x = 0) => x + 1, 0)[1];
  const checkableButtonRef = (0, import_react275.useRef)(null);
  const {
    bulkActionsIntersectionRef,
    tableMeasurerRef,
    isBulkActionsSticky,
    bulkActionsAbsoluteOffset,
    bulkActionsMaxWidth,
    bulkActionsOffsetLeft,
    computeTableDimensions
  } = useIsBulkActionsSticky(selectMode);
  (0, import_react275.useEffect)(() => {
    computeTableDimensions();
  }, [computeTableDimensions, items.length]);
  const defaultResourceName = useLazyRef(() => ({
    singular: i18n.translate("Polaris.ResourceList.defaultItemSingular"),
    plural: i18n.translate("Polaris.ResourceList.defaultItemPlural")
  }));
  const listRef = (0, import_react275.useRef)(null);
  const handleSelectMode = (selectMode2) => {
    setSelectMode(selectMode2);
    if (!selectMode2 && onSelectionChange) {
      onSelectionChange([]);
    }
  };
  const handleResize = debounce(() => {
    const newSmallScreen = isBreakpointsXS2();
    if (selectedItems && selectedItems.length === 0 && selectMode && !newSmallScreen) {
      handleSelectMode(false);
    }
    if (smallScreen !== newSmallScreen) {
      setSmallScreen(newSmallScreen);
    }
  }, 50, {
    leading: true,
    trailing: true,
    maxWait: 50
  });
  useEventListener("resize", handleResize);
  const isSelectable = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0 || selectable) && !smallScreen;
  const selectAllSelectState = () => {
    let selectState = "indeterminate";
    if (!selectedItems || Array.isArray(selectedItems) && selectedItems.length === 0) {
      selectState = false;
    } else if (selectedItems === SELECT_ALL_ITEMS2 || Array.isArray(selectedItems) && selectedItems.length === items.length) {
      selectState = true;
    }
    return selectState;
  };
  const resourceName = resourceNameProp ? resourceNameProp : defaultResourceName.current;
  const headerTitle = () => {
    const itemsCount = items.length;
    const resource = !loading && (!totalItemsCount && itemsCount === 1 || totalItemsCount === 1) ? resourceName.singular : resourceName.plural;
    if (loading) {
      return i18n.translate("Polaris.ResourceList.loading", {
        resource
      });
    } else if (totalItemsCount) {
      return i18n.translate("Polaris.ResourceList.showingTotalCount", {
        itemsCount,
        totalItemsCount,
        resource
      });
    } else if (headerContent) {
      return headerContent;
    } else {
      return i18n.translate("Polaris.ResourceList.showing", {
        itemsCount,
        resource
      });
    }
  };
  const selectAllActionsLabel = () => {
    const selectedItemsCount = selectedItems === SELECT_ALL_ITEMS2 ? `${items.length}+` : selectedItems.length;
    return i18n.translate("Polaris.ResourceList.selected", {
      selectedItemsCount
    });
  };
  const selectAllActionsAccessibilityLabel = () => {
    const selectedItemsCount = selectedItems.length;
    const totalItemsCount2 = items.length;
    const allSelected = selectedItemsCount === totalItemsCount2;
    if (totalItemsCount2 === 1 && allSelected) {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxDeselectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (totalItemsCount2 === 1) {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxSelectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (allSelected) {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxDeselectAllMultiple", {
        itemsLength: items.length,
        resourceNamePlural: resourceName.plural
      });
    } else {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxSelectAllMultiple", {
        itemsLength: items.length,
        resourceNamePlural: resourceName.plural
      });
    }
  };
  const paginatedSelectAllText = () => {
    if (!isSelectable || !hasMoreItems) {
      return;
    }
    if (selectedItems === SELECT_ALL_ITEMS2) {
      return i18n.translate(isFiltered ? "Polaris.ResourceList.allFilteredItemsSelected" : "Polaris.ResourceList.allItemsSelected", {
        itemsLength: items.length,
        resourceNamePlural: resourceName.plural
      });
    }
  };
  const paginatedSelectAllAction = () => {
    if (!isSelectable || !hasMoreItems) {
      return;
    }
    const actionText = selectedItems === SELECT_ALL_ITEMS2 ? i18n.translate("Polaris.Common.undo") : i18n.translate(isFiltered ? "Polaris.ResourceList.selectAllFilteredItems" : "Polaris.ResourceList.selectAllItems", {
      itemsLength: items.length,
      resourceNamePlural: resourceName.plural
    });
    return {
      content: actionText,
      onAction: handleSelectAllItemsInStore
    };
  };
  const emptySearchResultText = {
    title: i18n.translate("Polaris.ResourceList.emptySearchResultTitle", {
      resourceNamePlural: resourceName.plural
    }),
    description: i18n.translate("Polaris.ResourceList.emptySearchResultDescription")
  };
  const handleSelectAllItemsInStore = () => {
    const newlySelectedItems = selectedItems === SELECT_ALL_ITEMS2 ? getAllItemsOnPage(items, idForItem) : SELECT_ALL_ITEMS2;
    if (onSelectionChange) {
      onSelectionChange(newlySelectedItems);
    }
  };
  const setLoadingPosition = (0, import_react275.useCallback)(() => {
    if (listRef.current != null) {
      if (typeof window === "undefined") {
        return;
      }
      const overlay2 = listRef.current.getBoundingClientRect();
      const viewportHeight = Math.max(document.documentElement ? document.documentElement.clientHeight : 0, window.innerHeight || 0);
      const overflow = viewportHeight - overlay2.height;
      const spinnerHeight = items.length === 1 ? SMALL_SPINNER_HEIGHT : LARGE_SPINNER_HEIGHT;
      const spinnerPosition = overflow > 0 ? (overlay2.height - spinnerHeight) / 2 : (viewportHeight - overlay2.top - spinnerHeight) / 2;
      setLoadingPositionState(spinnerPosition);
    }
  }, [listRef, items.length]);
  const itemsExist = items.length > 0;
  (0, import_react275.useEffect)(() => {
    if (loading) {
      setLoadingPosition();
    }
  }, [loading, setLoadingPosition]);
  (0, import_react275.useEffect)(() => {
    if (selectedItems && selectedItems.length > 0 && !selectMode) {
      setSelectMode(true);
    }
    if ((!selectedItems || selectedItems.length === 0) && !isBreakpointsXS2()) {
      setSelectMode(false);
    }
  }, [selectedItems, selectMode]);
  (0, import_react275.useEffect)(() => {
    forceUpdate();
  }, [forceUpdate, items]);
  const renderItemWithId = (item, index) => {
    const id = idForItem(item, index);
    const itemContent = renderItem(item, id, index);
    if (!isElementOfType(itemContent, ResourceItem)) {
      console.warn("<ResourceList /> renderItem function should return a <ResourceItem />.");
    }
    return itemContent;
  };
  const handleMultiSelectionChange = (lastSelected2, currentSelected, resolveItemId2) => {
    const min = Math.min(lastSelected2, currentSelected);
    const max = Math.max(lastSelected2, currentSelected);
    return items.slice(min, max + 1).map(resolveItemId2);
  };
  const handleSelectionChange = (selected, id, sortOrder, shiftKey) => {
    if (selectedItems == null || onSelectionChange == null) {
      return;
    }
    let newlySelectedItems = selectedItems === SELECT_ALL_ITEMS2 ? getAllItemsOnPage(items, idForItem) : [...selectedItems];
    if (sortOrder !== void 0) {
      setLastSelected(sortOrder);
    }
    const lastSelectedFromState = lastSelected;
    let selectedIds = [id];
    if (shiftKey && lastSelectedFromState != null && sortOrder !== void 0 && resolveItemId) {
      selectedIds = handleMultiSelectionChange(lastSelectedFromState, sortOrder, resolveItemId);
    }
    newlySelectedItems = [.../* @__PURE__ */ new Set([...newlySelectedItems, ...selectedIds])];
    if (!selected) {
      for (const selectedId of selectedIds) {
        newlySelectedItems.splice(newlySelectedItems.indexOf(selectedId), 1);
      }
    }
    if (newlySelectedItems.length === 0 && !isBreakpointsXS2()) {
      handleSelectMode(false);
    } else if (newlySelectedItems.length > 0) {
      handleSelectMode(true);
    }
    if (onSelectionChange) {
      onSelectionChange(newlySelectedItems);
    }
  };
  const handleToggleAll = () => {
    let newlySelectedItems;
    if (Array.isArray(selectedItems) && selectedItems.length === items.length || selectedItems === SELECT_ALL_ITEMS2) {
      newlySelectedItems = [];
    } else {
      newlySelectedItems = items.map((item, index) => {
        return idForItem(item, index);
      });
    }
    if (newlySelectedItems.length === 0 && !isBreakpointsXS2()) {
      handleSelectMode(false);
    } else if (newlySelectedItems.length > 0) {
      handleSelectMode(true);
    }
    if (onSelectionChange) {
      onSelectionChange(newlySelectedItems);
    }
    setTimeout(() => {
      var _a;
      (_a = checkableButtonRef == null ? void 0 : checkableButtonRef.current) == null ? void 0 : _a.focus();
    }, 0);
  };
  const selectAllActionsMarkup = isSelectable ? import_react275.default.createElement("div", {
    className: styles119.SelectAllActionsWrapper
  }, import_react275.default.createElement(SelectAllActions, {
    label: selectAllActionsLabel(),
    accessibilityLabel: selectAllActionsAccessibilityLabel(),
    selected: selectAllSelectState(),
    onToggleAll: handleToggleAll,
    selectMode,
    paginatedSelectAllAction: paginatedSelectAllAction(),
    paginatedSelectAllText: paginatedSelectAllText(),
    disabled: loading,
    ref: checkableButtonRef
  })) : null;
  const bulkActionClassNames = classNames(styles119.BulkActionsWrapper, isBulkActionsSticky && styles119.BulkActionsWrapperSticky);
  const bulkActionsMarkup = isSelectable && selectMode && (bulkActions || promotedBulkActions) ? import_react275.default.createElement("div", {
    className: bulkActionClassNames,
    style: {
      top: isBulkActionsSticky ? void 0 : bulkActionsAbsoluteOffset,
      width: bulkActionsMaxWidth,
      left: isBulkActionsSticky ? bulkActionsOffsetLeft : void 0
    }
  }, import_react275.default.createElement(BulkActions, {
    selectMode,
    onSelectModeToggle: handleSelectMode,
    promotedActions: promotedBulkActions,
    actions: bulkActions,
    disabled: loading,
    isSticky: isBulkActionsSticky,
    width: bulkActionsMaxWidth
  })) : null;
  const filterControlMarkup = filterControl ? import_react275.default.createElement("div", {
    className: classNames(!flushFilters && styles119.FiltersWrapper)
  }, filterControl) : null;
  const sortingSelectMarkup = sortOptions && sortOptions.length > 0 && !alternateTool ? import_react275.default.createElement("div", {
    className: styles119.SortWrapper
  }, import_react275.default.createElement(Select, {
    label: i18n.translate("Polaris.ResourceList.sortingLabel"),
    labelInline: !smallScreen,
    labelHidden: smallScreen,
    options: sortOptions,
    onChange: onSortChange,
    value: sortValue,
    disabled: selectMode
  })) : null;
  const alternateToolMarkup = alternateTool && !sortingSelectMarkup ? import_react275.default.createElement("div", {
    className: styles119.AlternateToolWrapper
  }, alternateTool) : null;
  const headerTitleMarkup = import_react275.default.createElement("div", {
    className: styles119.HeaderTitleWrapper
  }, headerTitle());
  const selectButtonMarkup = isSelectable ? import_react275.default.createElement("div", {
    className: styles119.SelectButtonWrapper
  }, import_react275.default.createElement(Button, {
    disabled: selectMode,
    icon: SvgEnableSelectionMinor,
    onClick: () => handleSelectMode(true)
  }, i18n.translate("Polaris.ResourceList.selectButtonText"))) : null;
  const checkableButtonMarkup = isSelectable ? import_react275.default.createElement("div", {
    className: styles119.CheckableButtonWrapper
  }, import_react275.default.createElement(CheckableButton, {
    accessibilityLabel: selectAllActionsAccessibilityLabel(),
    label: headerTitle(),
    onToggleAll: handleToggleAll,
    disabled: loading,
    ref: checkableButtonRef
  })) : null;
  const needsHeader = isSelectable || sortOptions && sortOptions.length > 0 || alternateTool;
  const headerWrapperOverlay = loading ? import_react275.default.createElement("div", {
    className: styles119["HeaderWrapper-overlay"]
  }) : null;
  const showEmptyState = emptyState && !itemsExist && !loading;
  const showEmptySearchState = !showEmptyState && filterControl && !itemsExist && !loading;
  const headerMarkup = !showEmptyState && showHeader !== false && !showEmptySearchState && (showHeader || needsHeader) && listRef.current && import_react275.default.createElement("div", {
    className: styles119.HeaderOuterWrapper
  }, import_react275.default.createElement(Sticky, {
    boundingElement: listRef.current
  }, (isSticky) => {
    const headerClassName = classNames(styles119.HeaderWrapper, sortOptions && sortOptions.length > 0 && !alternateTool && styles119["HeaderWrapper-hasSort"], alternateTool && styles119["HeaderWrapper-hasAlternateTool"], isSelectable && styles119["HeaderWrapper-hasSelect"], loading && styles119["HeaderWrapper-disabled"], isSelectable && selectMode && styles119["HeaderWrapper-inSelectMode"], isSticky && styles119["HeaderWrapper-isSticky"]);
    return import_react275.default.createElement("div", {
      className: headerClassName
    }, headerWrapperOverlay, import_react275.default.createElement("div", {
      className: styles119.HeaderContentWrapper
    }, headerTitleMarkup, checkableButtonMarkup, alternateToolMarkup, sortingSelectMarkup, selectButtonMarkup), selectAllActionsMarkup);
  }));
  const emptySearchStateMarkup = showEmptySearchState ? emptySearchState || import_react275.default.createElement("div", {
    className: styles119.EmptySearchResultWrapper
  }, import_react275.default.createElement(EmptySearchResult, Object.assign({}, emptySearchResultText, {
    withIllustration: true
  }))) : null;
  const emptyStateMarkup = showEmptyState ? emptyState : null;
  const defaultTopPadding = 8;
  const topPadding = loadingPosition > 0 ? loadingPosition : defaultTopPadding;
  const spinnerStyle = {
    paddingTop: `${topPadding}px`
  };
  const spinnerSize = items.length < 2 ? "small" : "large";
  const loadingOverlay = loading ? import_react275.default.createElement(import_react275.default.Fragment, null, import_react275.default.createElement("li", {
    className: styles119.SpinnerContainer,
    style: spinnerStyle
  }, import_react275.default.createElement(Spinner, {
    size: spinnerSize,
    accessibilityLabel: "Items are loading"
  })), import_react275.default.createElement("li", {
    className: styles119.LoadingOverlay
  })) : null;
  const className = classNames(styles119.ItemWrapper, loading && styles119["ItemWrapper-isLoading"]);
  const loadingWithoutItemsMarkup = loading && !itemsExist ? import_react275.default.createElement("div", {
    className,
    tabIndex: -1
  }, loadingOverlay) : null;
  const resourceListClassName = classNames(styles119.ResourceList, loading && styles119.disabledPointerEvents, selectMode && styles119.disableTextSelection);
  const listMarkup = itemsExist ? import_react275.default.createElement("ul", {
    className: resourceListClassName,
    ref: listRef,
    "aria-live": "polite",
    "aria-busy": loading
  }, loadingOverlay, import_react275.Children.toArray(items.map(renderItemWithId))) : null;
  const context = {
    selectable: isSelectable,
    selectedItems,
    selectMode,
    hasBulkActions: Boolean(bulkActions),
    resourceName,
    loading,
    onSelectionChange: handleSelectionChange
  };
  const resourceListWrapperClasses = classNames(styles119.ResourceListWrapper, Boolean(bulkActionsMarkup) && selectMode && bulkActions && styles119.ResourceListWrapperWithBulkActions);
  return import_react275.default.createElement(ResourceListContext.Provider, {
    value: context
  }, import_react275.default.createElement("div", {
    className: resourceListWrapperClasses,
    ref: tableMeasurerRef
  }, filterControlMarkup, headerMarkup, bulkActionsMarkup, listMarkup, emptySearchStateMarkup, emptyStateMarkup, loadingWithoutItemsMarkup), import_react275.default.createElement("div", {
    ref: bulkActionsIntersectionRef
  }));
}
ResourceList.Item = ResourceItem;

// node_modules/@shopify/polaris/build/esm/components/SettingToggle/SettingToggle.js
var import_react276 = __toESM(require_react());
function SettingToggle({
  enabled,
  action,
  children: children2
}) {
  const id = (0, import_react276.useId)();
  if (true) {
    console.warn(`Deprecation: <SettingToggle /> is deprecated. This component will be removed in a future major version of Polaris. Use the primitive layout and typography components to compose a setting toggle card.
      See the "With primitive components" example in https://polaris.shopify.com/components/deprecated/setting-toggle`);
  }
  const actionMarkup = action ? buttonFrom(action, {
    role: "switch",
    ariaChecked: enabled ? "true" : "false",
    size: "slim"
  }) : null;
  return import_react276.default.createElement(LegacyCard, {
    sectioned: true
  }, import_react276.default.createElement(SettingAction, {
    action: actionMarkup
  }, import_react276.default.createElement("label", {
    htmlFor: id
  }, children2)));
}

// node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.js
var import_react277 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.scss.js
var styles121 = {
  "SkeletonBodyTextContainer": "Polaris-SkeletonBodyText__SkeletonBodyTextContainer",
  "SkeletonBodyText": "Polaris-SkeletonBodyText"
};

// node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.js
function SkeletonBodyText({
  lines = 3
}) {
  const bodyTextLines = [];
  for (let i = 0; i < lines; i++) {
    bodyTextLines.push(import_react277.default.createElement("div", {
      className: styles121.SkeletonBodyText,
      key: i
    }));
  }
  return import_react277.default.createElement("div", {
    className: styles121.SkeletonBodyTextContainer
  }, bodyTextLines);
}

// node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.js
var import_react278 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.scss.js
var styles122 = {
  "DisplayText": "Polaris-SkeletonDisplayText__DisplayText",
  "sizeSmall": "Polaris-SkeletonDisplayText--sizeSmall",
  "sizeMedium": "Polaris-SkeletonDisplayText--sizeMedium",
  "sizeLarge": "Polaris-SkeletonDisplayText--sizeLarge",
  "sizeExtraLarge": "Polaris-SkeletonDisplayText--sizeExtraLarge"
};

// node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.js
function SkeletonDisplayText({
  size: size2 = "medium"
}) {
  const className = classNames(styles122.DisplayText, size2 && styles122[variationName("size", size2)]);
  return import_react278.default.createElement("div", {
    className
  });
}

// node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.js
var import_react279 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.scss.js
var styles123 = {
  "Title": "Polaris-SkeletonPage__Title",
  "SkeletonTitle": "Polaris-SkeletonPage__SkeletonTitle"
};

// node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.js
function SkeletonPage({
  children: children2,
  fullWidth,
  narrowWidth,
  primaryAction,
  title = "",
  backAction
}) {
  const i18n = useI18n();
  const titleContent = title ? import_react279.default.createElement("h1", {
    className: styles123.Title
  }, title) : import_react279.default.createElement("div", {
    className: styles123.SkeletonTitle
  }, import_react279.default.createElement(Box, {
    background: "bg-strong",
    minWidth: "120px",
    minHeight: "28px",
    borderRadius: "1"
  }));
  const primaryActionMarkup = primaryAction ? import_react279.default.createElement(Box, {
    id: "SkeletonPage-PrimaryAction",
    borderRadius: "1",
    background: "bg-strong",
    minHeight: "2.25rem",
    minWidth: "6.25rem"
  }) : null;
  const backActionMarkup = backAction ? import_react279.default.createElement(Box, {
    borderRadius: "1",
    background: "bg-strong",
    minHeight: "2.25rem",
    minWidth: "2.25rem",
    maxWidth: "2.25rem"
  }) : null;
  return import_react279.default.createElement(VerticalStack, {
    gap: "400",
    inlineAlign: "center"
  }, import_react279.default.createElement(Box, Object.assign({
    width: "100%",
    padding: "0",
    paddingInlineStart: {
      sm: "600"
    },
    paddingInlineEnd: {
      sm: "600"
    },
    maxWidth: "var(--pc-skeleton-page-max-width)",
    "aria-label": i18n.translate("Polaris.SkeletonPage.loadingLabel"),
    role: "status"
  }, narrowWidth && {
    maxWidth: "var(--pc-skeleton-page-max-width-narrow)"
  }, fullWidth && {
    maxWidth: "none"
  }), import_react279.default.createElement(VerticalStack, null, import_react279.default.createElement(Box, {
    paddingBlockStart: {
      xs: "400",
      md: "500"
    },
    paddingBlockEnd: {
      xs: "400",
      md: "500"
    },
    paddingInlineStart: {
      xs: "400",
      sm: "0"
    },
    paddingInlineEnd: {
      xs: "400",
      sm: "0"
    },
    width: "100%"
  }, import_react279.default.createElement(HorizontalStack, {
    gap: "400",
    align: "space-between",
    blockAlign: "center"
  }, import_react279.default.createElement(HorizontalStack, {
    gap: "400"
  }, backActionMarkup, import_react279.default.createElement(Box, {
    paddingBlockStart: "100",
    paddingBlockEnd: "100"
  }, titleContent)), primaryActionMarkup)), import_react279.default.createElement(Box, {
    paddingBlockEnd: "200",
    width: "100%"
  }, children2))));
}

// node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.js
var import_react280 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.scss.js
var styles124 = {
  "Tabs": "Polaris-SkeletonTabs__Tabs",
  "Tab": "Polaris-SkeletonTabs__Tab",
  "Tab-short": "Polaris-SkeletonTabs__Tab--short",
  "Tab-long": "Polaris-SkeletonTabs__Tab--long"
};

// node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.js
function SkeletonTabs({
  count = 2
}) {
  return import_react280.default.createElement("div", {
    className: styles124.Tabs
  }, [...Array(count).keys()].map((key) => {
    const tabWidthClassName = key % 2 === 0 ? styles124["Tab-short"] : styles124["Tab-long"];
    return import_react280.default.createElement("div", {
      key,
      className: classNames(styles124.Tab, tabWidthClassName)
    }, import_react280.default.createElement(SkeletonBodyText, {
      lines: 1
    }));
  }));
}

// node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.js
var import_react281 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.scss.js
var styles125 = {
  "SkeletonThumbnail": "Polaris-SkeletonThumbnail",
  "sizeExtraSmall": "Polaris-SkeletonThumbnail--sizeExtraSmall",
  "sizeSmall": "Polaris-SkeletonThumbnail--sizeSmall",
  "sizeMedium": "Polaris-SkeletonThumbnail--sizeMedium",
  "sizeLarge": "Polaris-SkeletonThumbnail--sizeLarge"
};

// node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.js
function SkeletonThumbnail({
  size: size2 = "medium"
}) {
  const className = classNames(styles125.SkeletonThumbnail, size2 && styles125[variationName("size", size2)]);
  return import_react281.default.createElement("div", {
    className
  });
}

// node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.js
var import_react282 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.scss.js
var styles126 = {
  "Thumbnail": "Polaris-Thumbnail",
  "sizeExtraSmall": "Polaris-Thumbnail--sizeExtraSmall",
  "sizeSmall": "Polaris-Thumbnail--sizeSmall",
  "sizeMedium": "Polaris-Thumbnail--sizeMedium",
  "sizeLarge": "Polaris-Thumbnail--sizeLarge",
  "transparent": "Polaris-Thumbnail--transparent"
};

// node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.js
function Thumbnail({
  source,
  alt,
  size: size2 = "medium",
  transparent
}) {
  const className = classNames(styles126.Thumbnail, size2 && styles126[variationName("size", size2)], transparent && styles126.transparent);
  const content = typeof source === "string" ? import_react282.default.createElement(Image, {
    alt,
    source
  }) : import_react282.default.createElement(Icon, {
    accessibilityLabel: alt,
    source
  });
  return import_react282.default.createElement("span", {
    className
  }, content);
}

// node_modules/@shopify/polaris/build/esm/components/Toast/Toast.js
var import_react283 = __toESM(require_react());
var Toast2 = (0, import_react283.memo)(function Toast3(props) {
  const id = (0, import_react283.useId)();
  const {
    showToast,
    hideToast
  } = useFrame();
  useDeepEffect(() => {
    showToast({
      id,
      ...props
    });
    return () => {
      hideToast({
        id
      });
    };
  }, [props]);
  return null;
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.js
var import_react291 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.scss.js
var styles127 = {
  "TopBar": "Polaris-TopBar",
  "Container": "Polaris-TopBar__Container",
  "LogoDisplayControl": "Polaris-TopBar__LogoDisplayControl",
  "LogoDisplayContainer": "Polaris-TopBar__LogoDisplayContainer",
  "LogoContainer": "Polaris-TopBar__LogoContainer",
  "hasLogoSuffix": "Polaris-TopBar--hasLogoSuffix",
  "Logo": "Polaris-TopBar__Logo",
  "LogoLink": "Polaris-TopBar__LogoLink",
  "ContextControl": "Polaris-TopBar__ContextControl",
  "NavigationIcon": "Polaris-TopBar__NavigationIcon",
  "focused": "Polaris-TopBar--focused",
  "IconWrapper": "Polaris-TopBar__IconWrapper",
  "LeftContent": "Polaris-TopBar__LeftContent",
  "Search": "Polaris-TopBar__Search",
  "RightContent": "Polaris-TopBar__RightContent",
  "SecondaryMenu": "Polaris-TopBar__SecondaryMenu"
};

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.js
var import_react285 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.scss.js
var styles128 = {
  "Search": "Polaris-TopBar-Search",
  "SearchContent": "Polaris-TopBar-Search__SearchContent",
  "visible": "Polaris-TopBar-Search--visible",
  "Results": "Polaris-TopBar-Search__Results"
};

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.js
var import_react284 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.scss.js
var styles129 = {
  "SearchDismissOverlay": "Polaris-TopBar-SearchDismissOverlay",
  "visible": "Polaris-TopBar-SearchDismissOverlay--visible"
};

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.js
function SearchDismissOverlay({
  onDismiss,
  visible
}) {
  const node = (0, import_react284.useRef)(null);
  const handleDismiss = (0, import_react284.useCallback)(({
    target
  }) => {
    if (target === node.current && onDismiss != null) {
      onDismiss();
    }
  }, [onDismiss]);
  return import_react284.default.createElement(import_react284.default.Fragment, null, visible ? import_react284.default.createElement(ScrollLock, null) : null, import_react284.default.createElement("div", {
    ref: node,
    className: classNames(styles129.SearchDismissOverlay, visible && styles129.visible),
    onClick: handleDismiss
  }));
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.js
function Search({
  visible,
  children: children2,
  onDismiss,
  overlayVisible = false
}) {
  if (children2 == null) {
    return null;
  }
  const overlayMarkup = visible ? import_react285.default.createElement(SearchDismissOverlay, {
    onDismiss,
    visible: overlayVisible
  }) : null;
  return import_react285.default.createElement(import_react285.default.Fragment, null, overlayMarkup, import_react285.default.createElement("div", {
    className: classNames(styles128.Search, visible && styles128.visible)
  }, import_react285.default.createElement("div", {
    className: styles128.SearchContent
  }, import_react285.default.createElement("div", {
    className: styles128.Results
  }, children2))));
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.js
var import_react286 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.scss.js
var styles130 = {
  "SearchField": "Polaris-TopBar-SearchField",
  "focused": "Polaris-TopBar-SearchField--focused",
  "Input": "Polaris-TopBar-SearchField__Input",
  "Backdrop": "Polaris-TopBar-SearchField__Backdrop",
  "BackdropShowFocusBorder": "Polaris-TopBar-SearchField__BackdropShowFocusBorder",
  "Icon": "Polaris-TopBar-SearchField__Icon",
  "Clear": "Polaris-TopBar-SearchField__Clear"
};

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.js
function SearchField3({
  value,
  focused,
  active,
  placeholder,
  onChange,
  onFocus,
  onBlur,
  onCancel,
  showFocusBorder
}) {
  const i18n = useI18n();
  const [forceActive, setForceActive] = (0, import_react286.useState)(false);
  const input = (0, import_react286.useRef)(null);
  const searchId = (0, import_react286.useId)();
  const handleChange = (0, import_react286.useCallback)(({
    currentTarget
  }) => {
    onChange(currentTarget.value);
  }, [onChange]);
  const handleFocus = (0, import_react286.useCallback)(() => onFocus && onFocus(), [onFocus]);
  const handleBlur = (0, import_react286.useCallback)(() => onBlur && onBlur(), [onBlur]);
  const handleClear = (0, import_react286.useCallback)(() => {
    onCancel && onCancel();
    if (!input.current) {
      return;
    }
    input.current.value = "";
    onChange("");
    input.current.focus();
  }, [onCancel, onChange]);
  (0, import_react286.useEffect)(() => {
    if (!input.current) {
      return;
    }
    if (focused) {
      input.current.focus();
    } else {
      input.current.blur();
    }
  }, [focused]);
  const clearMarkup = value !== "" && import_react286.default.createElement("button", {
    type: "button",
    "aria-label": i18n.translate("Polaris.TopBar.SearchField.clearButtonLabel"),
    className: styles130.Clear,
    onClick: handleClear,
    onBlur: () => {
      setForceActive(false);
      handleClear();
    },
    onFocus: () => {
      handleFocus();
      setForceActive(true);
    }
  }, import_react286.default.createElement(Icon, {
    source: SvgCircleCancelMinor
  }));
  const className = classNames(styles130.SearchField, (focused || active || forceActive) && styles130.focused);
  return import_react286.default.createElement("div", {
    className,
    onFocus: handleFocus,
    onBlur: handleBlur
  }, import_react286.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, import_react286.default.createElement("label", {
    htmlFor: searchId
  }, i18n.translate("Polaris.TopBar.SearchField.search"))), import_react286.default.createElement("input", {
    id: searchId,
    className: styles130.Input,
    placeholder,
    type: "search",
    autoCapitalize: "off",
    autoComplete: "off",
    autoCorrect: "off",
    ref: input,
    value,
    onChange: handleChange,
    onKeyDown: preventDefault2
  }), import_react286.default.createElement("span", {
    className: styles130.Icon
  }, import_react286.default.createElement(Icon, {
    source: SvgSearchMinor
  })), clearMarkup, import_react286.default.createElement("div", {
    className: classNames(styles130.Backdrop, showFocusBorder && styles130.BackdropShowFocusBorder)
  }));
}
function preventDefault2(event) {
  if (event.key === "Enter") {
    event.preventDefault();
  }
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.js
var import_react290 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.scss.js
var styles131 = {
  "Details": "Polaris-TopBar-UserMenu__Details",
  "Message": "Polaris-TopBar-UserMenu__Message"
};

// node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.js
var import_react287 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.scss.js
var styles132 = {
  "MessageIndicatorWrapper": "Polaris-MessageIndicator__MessageIndicatorWrapper",
  "MessageIndicator": "Polaris-MessageIndicator"
};

// node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.js
function MessageIndicator({
  children: children2,
  active
}) {
  const indicatorMarkup = active && import_react287.default.createElement("div", {
    className: styles132.MessageIndicator
  });
  return import_react287.default.createElement("div", {
    className: styles132.MessageIndicatorWrapper
  }, indicatorMarkup, children2);
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.js
var import_react289 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.scss.js
var styles133 = {
  "ActivatorWrapper": "Polaris-TopBar-Menu__ActivatorWrapper",
  "Activator": "Polaris-TopBar-Menu__Activator",
  "Activator-userMenu": "Polaris-TopBar-Menu__Activator--userMenu",
  "Section": "Polaris-TopBar-Menu__Section"
};

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.js
var import_react288 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.scss.js
var styles134 = {
  "Section": "Polaris-Menu-Message__Section"
};

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.js
function Message({
  title,
  description,
  action,
  link,
  badge
}) {
  const badgeMarkup = badge && import_react288.default.createElement(Badge, {
    status: badge.status
  }, badge.content);
  const {
    to,
    content: linkContent
  } = link;
  const {
    onClick,
    content: actionContent
  } = action;
  return import_react288.default.createElement("div", {
    className: styles134.Section
  }, import_react288.default.createElement(Popover2.Section, null, import_react288.default.createElement(LegacyStack, {
    vertical: true,
    spacing: "tight"
  }, import_react288.default.createElement(TextContainer, null, import_react288.default.createElement(Text, {
    variant: "headingMd",
    as: "h2"
  }, title, badgeMarkup), import_react288.default.createElement("p", null, description)), import_react288.default.createElement(Link, {
    url: to
  }, linkContent), import_react288.default.createElement(Button, {
    plain: true,
    onClick
  }, actionContent))));
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.js
function Menu(props) {
  const {
    actions,
    onOpen,
    onClose,
    open,
    activatorContent,
    message,
    accessibilityLabel,
    customWidth,
    userMenu
  } = props;
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const badgeProps = message && message.badge && {
    content: message.badge.content,
    status: message.badge.status
  };
  const messageMarkup = message && import_react289.default.createElement(Message, {
    title: message.title,
    description: message.description,
    action: {
      onClick: message.action.onClick,
      content: message.action.content
    },
    link: {
      to: message.link.to,
      content: message.link.content
    },
    badge: badgeProps
  });
  return import_react289.default.createElement(Popover2, {
    activator: import_react289.default.createElement("div", {
      className: styles133.ActivatorWrapper
    }, import_react289.default.createElement("button", {
      type: "button",
      className: classNames(styles133.Activator, userMenu && polarisSummerEditions2023 && styles133["Activator-userMenu"]),
      onClick: onOpen,
      "aria-label": accessibilityLabel
    }, activatorContent)),
    active: open,
    onClose,
    fixed: true,
    fullHeight: true,
    preferredAlignment: "right"
  }, import_react289.default.createElement("div", {
    className: styles133.MenuItems
  }, import_react289.default.createElement(Box, {
    width: customWidth
  }, import_react289.default.createElement(ActionList, {
    actionRole: "menuitem",
    onActionAnyItem: onClose,
    sections: actions
  }), messageMarkup)));
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.js
function UserMenu({
  name,
  detail,
  avatar,
  initials,
  actions,
  message,
  onToggle,
  open,
  accessibilityLabel,
  customActivator,
  customWidth
}) {
  const showIndicator = Boolean(message);
  const {
    polarisSummerEditions2023
  } = useFeatures();
  const activatorContentMarkup = customActivator ? customActivator : import_react290.default.createElement(import_react290.default.Fragment, null, import_react290.default.createElement("span", {
    className: styles131.Details
  }, import_react290.default.createElement(Text, {
    as: "p",
    alignment: "start",
    fontWeight: "medium",
    truncate: true
  }, name), import_react290.default.createElement("span", {
    className: styles131.Message
  }, import_react290.default.createElement(Text, {
    as: "p",
    variant: "bodySm",
    alignment: "start",
    color: "subdued",
    truncate: true
  }, detail))), import_react290.default.createElement(MessageIndicator, {
    active: showIndicator
  }, import_react290.default.createElement(Avatar, {
    shape: "square",
    size: polarisSummerEditions2023 ? "medium" : "small",
    initials: initials && initials.replace(" ", ""),
    source: avatar,
    name
  })));
  return import_react290.default.createElement(Menu, {
    activatorContent: activatorContentMarkup,
    open,
    onOpen: onToggle,
    onClose: onToggle,
    actions,
    message,
    accessibilityLabel,
    customWidth,
    userMenu: true
  });
}

// node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.js
var TopBar = function TopBar2({
  showNavigationToggle,
  userMenu,
  searchResults,
  searchField,
  secondaryMenu,
  searchResultsVisible,
  searchResultsOverlayVisible = false,
  onNavigationToggle,
  onSearchResultsDismiss,
  contextControl,
  logoSuffix
}) {
  const i18n = useI18n();
  const {
    logo
  } = useFrame();
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const iconClassName = classNames(styles127.NavigationIcon, focused && styles127.focused);
  const navigationButtonMarkup = showNavigationToggle ? import_react291.default.createElement("button", {
    type: "button",
    className: iconClassName,
    onClick: onNavigationToggle,
    onFocus: forceTrueFocused,
    onBlur: forceFalseFocused,
    "aria-label": i18n.translate("Polaris.TopBar.toggleMenuLabel")
  }, import_react291.default.createElement("div", {
    className: styles127.IconWrapper
  }, import_react291.default.createElement(Icon, {
    source: SvgMobileHamburgerMajor
  }))) : null;
  const width2 = getWidth(logo, 104);
  let contextMarkup;
  if (contextControl) {
    contextMarkup = import_react291.default.createElement("div", {
      className: styles127.ContextControl
    }, contextControl);
  } else if (logo) {
    const className = classNames(styles127.LogoContainer, showNavigationToggle || searchField ? styles127.LogoDisplayControl : styles127.LogoDisplayContainer, logoSuffix && styles127.hasLogoSuffix);
    contextMarkup = import_react291.default.createElement("div", {
      className
    }, import_react291.default.createElement(UnstyledLink, {
      url: logo.url || "",
      className: styles127.LogoLink,
      style: {
        width: width2
      }
    }, import_react291.default.createElement(Image, {
      source: logo.topBarSource || "",
      alt: logo.accessibilityLabel || "",
      className: styles127.Logo,
      style: {
        width: width2
      }
    })), logoSuffix);
  }
  const searchMarkup = searchField ? import_react291.default.createElement(import_react291.default.Fragment, null, searchField, import_react291.default.createElement(Search, {
    visible: searchResultsVisible,
    onDismiss: onSearchResultsDismiss,
    overlayVisible: searchResultsOverlayVisible
  }, searchResults)) : null;
  return import_react291.default.createElement("div", {
    className: styles127.TopBar
  }, import_react291.default.createElement("div", {
    className: styles127.Container
  }, import_react291.default.createElement("div", {
    className: styles127.LeftContent
  }, navigationButtonMarkup, contextMarkup), import_react291.default.createElement("div", {
    className: styles127.Search
  }, searchMarkup), import_react291.default.createElement("div", {
    className: styles127.RightContent
  }, import_react291.default.createElement("div", {
    className: styles127.SecondaryMenu
  }, secondaryMenu), userMenu)));
};
TopBar.Menu = Menu;
TopBar.SearchField = SearchField3;
TopBar.UserMenu = UserMenu;

// node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.js
var import_react292 = __toESM(require_react());

// node_modules/@shopify/polaris/build/esm/utilities/duration.js
var MINUTE = 60;
var HOUR = MINUTE * 60;
function ensureTwoDigits(num) {
  return num > 9 ? String(num) : `0${num}`;
}
function secondsToTimeComponents(seconds) {
  return {
    hours: Math.floor(seconds / HOUR),
    minutes: Math.floor(seconds % HOUR / MINUTE),
    seconds: seconds % MINUTE
  };
}
function secondsToTimestamp(numSeconds) {
  const {
    hours,
    minutes,
    seconds
  } = secondsToTimeComponents(numSeconds);
  const hasHours = numSeconds > HOUR;
  const hoursText = hasHours ? `${hours}:` : "";
  const minutesText = `${hasHours ? ensureTwoDigits(minutes) : minutes}:`;
  const secondsText = `${ensureTwoDigits(seconds)}`;
  return `${hoursText}${minutesText}${secondsText}`;
}
function secondsToDurationTranslationKey(numSeconds) {
  const {
    hours,
    minutes,
    seconds
  } = secondsToTimeComponents(numSeconds);
  let durationKey = "Polaris.VideoThumbnail.playButtonA11yLabel.duration";
  if (hours) {
    durationKey += `.hours.${hours > 1 ? "other" : "one"}`;
    if (seconds) {
      if (minutes > 1) {
        durationKey += `${seconds > 1 ? ".minutesAndSeconds" : ".minutesAndSecond"}`;
      } else if (minutes === 1) {
        durationKey += `${seconds > 1 ? ".minuteAndSeconds" : ".minuteAndSecond"}`;
      } else {
        durationKey += `${seconds > 1 ? ".andSeconds" : ".andSecond"}`;
      }
    } else if (minutes) {
      durationKey += `${minutes > 1 ? ".andMinutes" : ".andMinute"}`;
    } else {
      durationKey += ".only";
    }
  } else if (minutes) {
    durationKey += `.minutes.${minutes > 1 ? "other" : "one"}`;
    if (seconds) {
      durationKey += `${seconds > 1 ? ".andSeconds" : ".andSecond"}`;
    } else {
      durationKey += ".only";
    }
  } else if (seconds) {
    durationKey += seconds > 1 ? ".seconds.other" : ".seconds.one";
  }
  return durationKey;
}

// node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.scss.js
var styles135 = {
  "Thumbnail": "Polaris-VideoThumbnail__Thumbnail",
  "ThumbnailContainer": "Polaris-VideoThumbnail__ThumbnailContainer",
  "PlayButton": "Polaris-VideoThumbnail__PlayButton",
  "Timestamp": "Polaris-VideoThumbnail__Timestamp",
  "PlayIcon": "Polaris-VideoThumbnail__PlayIcon",
  "Progress": "Polaris-VideoThumbnail__Progress",
  "Indicator": "Polaris-VideoThumbnail__Indicator",
  "ProgressBar": "Polaris-VideoThumbnail__ProgressBar",
  "Label": "Polaris-VideoThumbnail__Label"
};

// node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.js
function VideoThumbnail({
  thumbnailUrl,
  videoLength = 0,
  videoProgress = 0,
  showVideoProgress = false,
  accessibilityLabel,
  onClick,
  onBeforeStartPlaying
}) {
  const i18n = useI18n();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  let buttonLabel;
  if (accessibilityLabel) {
    buttonLabel = accessibilityLabel;
  } else if (videoLength) {
    const {
      hours,
      minutes,
      seconds
    } = secondsToTimeComponents(videoLength);
    buttonLabel = i18n.translate("Polaris.VideoThumbnail.playButtonA11yLabel.defaultWithDuration", {
      duration: i18n.translate(secondsToDurationTranslationKey(videoLength), {
        hourCount: hours,
        minuteCount: minutes,
        secondCount: seconds
      })
    });
  } else {
    buttonLabel = i18n.translate("Polaris.VideoThumbnail.playButtonA11yLabel.default");
  }
  const timeStampMarkup = videoLength ? import_react292.default.createElement("div", {
    className: styles135.Timestamp
  }, import_react292.default.createElement(LegacyStack, {
    alignment: "center",
    spacing: "extraTight"
  }, import_react292.default.createElement("span", {
    className: styles135.PlayIcon
  }, import_react292.default.createElement(Icon, {
    source: SvgPlayMinor
  })), import_react292.default.createElement(Text, {
    variant: isNavigationCollapsed ? "bodyLg" : "bodyMd",
    as: "p",
    fontWeight: "semibold"
  }, secondsToTimestamp(videoLength)))) : null;
  let progressMarkup = null;
  if (showVideoProgress) {
    const progressValue = calculateProgress(videoLength, videoProgress);
    const progressValuePercents = Math.round(progressValue * 100);
    progressMarkup = import_react292.default.createElement("div", {
      className: styles135.Progress
    }, import_react292.default.createElement("progress", {
      className: styles135.ProgressBar,
      value: progressValuePercents,
      max: "100"
    }), import_react292.default.createElement("div", {
      className: styles135.Indicator,
      style: {
        transform: `scaleX(${progressValue})`
      }
    }, import_react292.default.createElement("span", {
      className: styles135.Label
    }, progressValuePercents, "%")));
  }
  return import_react292.default.createElement("div", {
    className: styles135.ThumbnailContainer
  }, import_react292.default.createElement("div", {
    className: styles135.Thumbnail,
    style: {
      backgroundImage: `url(${thumbnailUrl})`
    }
  }), import_react292.default.createElement("button", {
    type: "button",
    className: styles135.PlayButton,
    "aria-label": buttonLabel,
    onClick,
    onMouseEnter: onBeforeStartPlaying,
    onFocus: onBeforeStartPlaying,
    onTouchStart: onBeforeStartPlaying
  }, timeStampMarkup), progressMarkup);
}
function calculateProgress(videoLength, videoProgress) {
  if (videoProgress > videoLength && true) {
    console.warn("Value passed to the video progress should not exceed video length. Resetting progress to 100%.");
  }
  if (videoProgress > 0 && videoLength > 0) {
    const progress = parseFloat((videoProgress / videoLength).toFixed(2));
    return progress > 1 ? 1 : progress;
  }
  return 0;
}

// node_modules/@shopify/polaris/build/esm/utilities/index-filters/hooks.js
var import_react293 = __toESM(require_react());
function useSetIndexFiltersMode(initialValue) {
  const indexFiltersMode = (0, import_react293.useContext)(IndexFiltersModeContext);
  if (!indexFiltersMode) {
    throw new Error("No index filters manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  const {
    mode,
    setMode
  } = indexFiltersMode;
  const hasMounted = (0, import_react293.useRef)(false);
  if (!hasMounted.current) {
    if (initialValue) {
      setMode(initialValue);
    }
    hasMounted.current = true;
  }
  return {
    mode,
    setMode
  };
}

// node_modules/@shopify/polaris/build/esm/utilities/index-table/hooks.js
var import_react294 = __toESM(require_react());
function useRowHovered() {
  const hovered = (0, import_react294.useContext)(RowHoveredContext);
  return hovered;
}
function useRowSelected() {
  const {
    selected
  } = (0, import_react294.useContext)(RowContext);
  return selected;
}
function useContainerScroll() {
  const scrolledContainerRef = (0, import_react294.useContext)(ScrollContext);
  return scrolledContainerRef;
}
export {
  AccountConnection,
  ActionList,
  ActionMenu,
  AppProvider,
  AutoSelection,
  Autocomplete,
  Avatar,
  Backdrop,
  Badge,
  ProgressValue as BadgeProgressValue,
  StatusValue as BadgeStatusValue,
  Banner,
  Bleed,
  Box,
  Breadcrumbs,
  Button,
  ButtonGroup,
  CalloutCard,
  Card,
  Checkbox,
  ChoiceList,
  Collapsible,
  ColorPicker,
  Combobox,
  Connected,
  ContextualSaveBar,
  DATA_ATTRIBUTE,
  DEFAULT_LOCALE,
  DEFAULT_TOAST_DURATION,
  DEFAULT_TOAST_DURATION_WITH_ACTION,
  DataTable,
  DatePicker,
  DescriptionList,
  Divider,
  DropZone,
  EmptySearchResult,
  EmptyState,
  EventListener,
  ExceptionList,
  Filters,
  Focus,
  FooterHelp,
  Form,
  FormLayout,
  Frame,
  FrameContext,
  FullscreenBar,
  Grid,
  HorizontalGrid,
  HorizontalStack,
  SELECT_ALL_ITEMS as INDEX_TABLE_SELECT_ALL_ITEMS,
  Icon,
  Image,
  IndexFilters,
  IndexFiltersManager,
  IndexFiltersMode,
  IndexTable,
  SelectionType2 as IndexTableSelectionType,
  Indicator,
  InlineCode,
  InlineError,
  Key,
  KeyboardKey,
  KeypressListener,
  Label,
  Labelled,
  Layout,
  LegacyCard,
  LegacyFilters,
  LegacyStack,
  LegacyTabs,
  Link,
  List3 as List,
  Listbox,
  Loading3 as Loading,
  MediaCard,
  Modal,
  Navigation2 as Navigation,
  OptionList,
  Page,
  PageActions,
  Pagination,
  PolarisTestProvider,
  Popover2 as Popover,
  PopoverCloseSource,
  Portal,
  PortalsManager,
  PositionedOverlay,
  ProgressBar,
  RadioButton,
  RangeSlider,
  ResourceItem,
  ResourceList,
  SUPPORTED_LOCALES,
  ScrollLock,
  Scrollable,
  Select,
  SelectAllActions,
  SettingToggle,
  Sheet,
  SkeletonBodyText,
  SkeletonDisplayText,
  SkeletonPage,
  SkeletonTabs,
  SkeletonThumbnail,
  Spinner,
  Sticky,
  Tabs,
  Tag,
  Text,
  TextContainer,
  TextField,
  Thumbnail,
  Toast2 as Toast,
  Tooltip,
  TopBar,
  TrapFocus,
  Truncate,
  BulkActions as UnstableBulkActions,
  UnstyledButton,
  UnstyledLink,
  VerticalStack,
  VideoThumbnail,
  ScrollLockManagerContext as _SECRET_INTERNAL_SCROLL_LOCK_MANAGER_CONTEXT,
  WithinContentContext as _SECRET_INTERNAL_WITHIN_CONTENT_CONTEXT,
  buttonFrom,
  buttonsFrom,
  errorTextID,
  hexToRgb,
  hsbToHex,
  hsbToRgb,
  hslToRgb,
  isNavigationItemActive,
  labelID,
  rgbString,
  rgbToHex,
  rgbToHsb,
  rgbToHsl,
  rgbaString,
  unstyledButtonFrom,
  useBreakpoints,
  useReadOnlyEphemeralPresenceManager as useEphemeralPresenceManager,
  useEventListener,
  useFrame,
  useIndexResourceState,
  useContainerScroll as useIndexTableContainerScroll,
  useRowHovered as useIndexTableRowHovered,
  useRowSelected as useIndexTableRowSelected,
  useSetIndexFiltersMode,
  useTheme
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=@shopify_polaris.js.map
