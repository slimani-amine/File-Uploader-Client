import type { Experimental } from '../../types';
import type { MetaTokenProperties } from '../types';
type ShadowAliasExperimental = Experimental<'bevel' | 'card-sm' | 'card-md' | 'card-lg' | 'button' | 'button-hover' | 'button-disabled' | 'button-primary-strong-inset' | 'button-primary-strong-hover' | 'button-primary-strong' | 'button-primary' | 'button-primary-hover' | 'button-inset' | 'border-inset'>;
export type ShadowScale = '0' | '100' | '200' | '300' | '400' | '500' | '600';
export type ShadowBevelScale = '100';
export type ShadowInsetScale = '100' | '200';
export type ShadowAlias = 'button' | 'button-hover' | 'button-inset' | 'button-primary' | 'button-primary-hover' | 'button-primary-inset' | 'button-primary-critical' | 'button-primary-critical-hover' | 'button-primary-critical-inset' | 'button-primary-success' | 'button-primary-success-hover' | 'button-primary-success-inset' | 'border-inset' | 'inset-lg' | 'inset-md' | 'inset-sm' | 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | ShadowAliasExperimental;
export type ShadowAliasOrScale = ShadowAlias | ShadowScale;
export type ShadowTokenName = `shadow-${ShadowAliasOrScale}` | `shadow-bevel-${ShadowBevelScale}` | `shadow-inset-${ShadowInsetScale}`;
export type ShadowTokenGroup = {
    [TokenName in ShadowTokenName]: string;
};
export declare const shadow: {
    [TokenName in ShadowTokenName]: MetaTokenProperties;
};
export {};
//# sourceMappingURL=shadow.d.ts.map