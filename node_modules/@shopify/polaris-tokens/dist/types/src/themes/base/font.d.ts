import type { Experimental } from '../../types';
import type { MetaTokenProperties } from '../types';
export type FontFamilyPrefix = 'font-family';
type FontFamilyAlias = 'sans' | 'mono';
type FontSizeScaleExperimental = Experimental<'70' | '80'>;
export type FontSizePrefix = 'font-size';
export type FontSizeScale = '275' | '325' | '350' | '750' | '900' | '1000' | '75' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | FontSizeScaleExperimental;
type FontLineHeightScaleExperimental = Experimental<'075'>;
export type FontLineHeightPrefix = 'font-line-height';
export type FontLineHeightScale = '300' | '400' | '500' | '600' | '700' | '800' | '1000' | '1200' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | FontLineHeightScaleExperimental;
export type FontLetterSpacingPrefix = 'font-letter-spacing';
export type FontLetterSpacingAlias = 'densest' | 'denser' | 'dense' | 'normal';
export type FontWeightPrefix = 'font-weight';
export type FontWeightAlias = 'regular' | 'medium' | 'semibold' | 'bold';
export type FontPrefix = FontFamilyPrefix | FontLetterSpacingPrefix | FontLineHeightPrefix | FontSizePrefix | FontWeightPrefix;
export type FontTokenName = `${FontFamilyPrefix}-${FontFamilyAlias}` | `${FontLetterSpacingPrefix}-${FontLetterSpacingAlias}` | `${FontLineHeightPrefix}-${FontLineHeightScale}` | `${FontSizePrefix}-${FontSizeScale}` | `${FontWeightPrefix}-${FontWeightAlias}`;
export type FontTokenGroup = {
    [TokenName in FontTokenName]: string;
};
export declare const font: {
    [TokenName in FontTokenName]: MetaTokenProperties;
};
export declare function createVar(fontTokenName: FontTokenName): string;
export {};
//# sourceMappingURL=font.d.ts.map